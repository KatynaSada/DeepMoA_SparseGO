[
  {
    "objectID": "DeepMoA.html",
    "href": "DeepMoA.html",
    "title": "DeepMoA: method to predict the mechanism of action of cancer drugs",
    "section": "",
    "text": "import sys # we require code from other folders\nimport pandas as pd\nimport numpy as np\nimport itertools\nimport pickle\nimport os\nos.environ['KMP_DUPLICATE_LIB_OK']='True'\n\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nCB_color_cycle = ['#EECC16', '#62BB35', '#FDAE33','#208EA3', '#EA4E9D', '#984ea3','#999999', '#e41a1c', '#dede00']\n#sns.set_style(\"darkgrid\")\n\n\nimport matplotlib.font_manager as fm\nfont_files = fm.findSystemFonts()\n\nplt.rcdefaults()\n# Go through and add each to Matplotlib's font cache.\nfor font_file in font_files:\n    fm.fontManager.addfont(font_file)\nplt.rc('font', family='Roboto')\n\n\nplt.rc('font', family='Roboto')\n\nplt.rcParams['font.family'] = 'sans-serif'\nplt.rcParams['font.sans-serif'] = 'Roboto'\n\n\n#%config InlineBackend.figure_format='retina'\n\n\n# pytorch relates imports\nimport torch\nimport torch.nn as nn\nimport torch.optim as optim\n\n# imports from captum library\nfrom captum.attr import LayerDeepLift\n\n\n# for combobox\nfrom __future__ import print_function\nfrom ipywidgets import interact, interactive, fixed, interact_manual\nimport ipywidgets as widgets\n\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.io as pio\n\n\npd.options.display.min_rows = 20000\npd.set_option('max_colwidth', 200)\n\n\npd.options.display.max_rows = 20000\n\n\npd.set_option('min_rows', 20000)\n\n\nmac = \"/Users/katyna/Library/CloudStorage/OneDrive-Tecnun/\"\nwindows = \"C:/Users/ksada/OneDrive - Tecnun/\"\ncomputer = windows # CHANGE\n\n\nsys.path.append(computer + \"SparseGO_code/code\")\nimport util\nfrom util import *\n\n\n%matplotlib inline\n\n\n#%matplotlib inline\n\n# To make histograms\ndef histogram(dataframe, color, title, ylabel,n_bins):\n    N, bins, patches = plt.hist(dataframe, color=color,bins=n_bins, linewidth=0.1)\n\n    for i in range(0,len(bins)-1):\n        if bins[i]<0.05:\n            patches[i].set_facecolor(CB_color_cycle[2])\n\n    plt.xlabel(\"P-value\", fontsize=16)  \n    plt.ylabel(ylabel, fontsize=16)\n    plt.title(title, fontsize=16)\n    plt.xticks(fontsize=14)  \n    plt.yticks(fontsize=14)\n    ax = plt.subplot(111)  \n    ax.spines[\"top\"].set_visible(False)  \n    ax.spines[\"right\"].set_visible(False)    \n\n\ninputdir = computer+\"SparseGO_code/data/cross_validation_expression/allsamples/\" # CHANGE\ndir1=computer+\"Tesis/Codigo/VariableImportance/\"\ndir2=computer+\"SparseGO_code/results/weights&biases/Expression_MSE_all/\" # CHANGE\nresultsdir=dir2\n\n\ngene2id = inputdir+\"gene2ind.txt\"\ncell2id=inputdir+\"cell2ind.txt\"\ndrug2id=inputdir+\"drug2ind.txt\"\ndrug2fingerprint=inputdir+\"drug2fingerprint.txt\"\nload=resultsdir+\"last_model.pt\"\n\nonto = inputdir+\"ontology.txt\"  # CHANGE \ngenotype=inputdir+\"cell2expression.txt\"  # CHANGE \n\nnum_neurons_per_GO = 6 # CHANGE"
  },
  {
    "objectID": "DeepMoA.html#go-terms-info",
    "href": "DeepMoA.html#go-terms-info",
    "title": "DeepMoA: method to predict the mechanism of action of cancer drugs",
    "section": "GO terms info",
    "text": "GO terms info\n\n# Go term names\ngene_ontology = pd.read_excel('all_go_terms_info.xlsx')\n\nGet all layers’ GO term with the neuron number\n\nall_terms_ids = {}\nall_terms_names = {}\nall_layers_non_virtual = {} # store only terms that are part of the layer (remove virtual), those are the important attribuitions\nall_layers_non_virtual_names = {}\nnum_neurons_per_GO = 6\n\nfor layer_number in range(len(layer_connections)-1):\n    layer_pairs = layer_connections[layer_number] \n    \n    terms_ids = []\n    names = []\n    output_id = create_index(layer_pairs[:,0]) # first 6 neurons correspond to the term with key 0\n    \n    for term in output_id.keys():\n        #name = gene_ontology.loc[gene_ontology['GO_term'] == term].to_numpy()[0,3].replace(\"_\",\" \").capitalize()\n        name = gene_ontology.loc[gene_ontology['id'] == term].to_numpy()[0,1].capitalize()\n        for i in range(1,num_neurons_per_GO+1): # vector que tiene GO:0000038_1, GO:0000038_2 ... GO:0000038_6 y asi luego concatenar con las attributions\n            terms_ids.append(term+\"_\"+str(i))\n            names.append(name+\" (\"+str(i)+\")\")\n    all_terms_ids[layer_number] = np.array(terms_ids)\n    all_terms_names[layer_number] = np.array(names)\n\n    non_virtual = [] # store the terms part of that layer\n    non_virtual_names = []\n    for term in level_list[layer_number+1]:\n        nv_name = gene_ontology.loc[gene_ontology['id'] == term].to_numpy()[0,1].capitalize()\n        for i in range(1,7):\n            non_virtual.append(term+\"_\"+str(i))\n            non_virtual_names.append(nv_name+\" (\"+str(i)+\")\")\n    all_layers_non_virtual[layer_number] = non_virtual\n    all_layers_non_virtual_names[layer_number] = non_virtual_names\n\nAll GO terms part of a layer (non-virtual) with their corresponding name and layer number…\n\nreal_go_info = pd.DataFrame({\"GO_term\":[],\"Name\":[],\"layer_number\":[]})\nfor layer_number in range(len(layer_connections)-1):\n    layer_go_info = pd.DataFrame({\"GO_term\":all_layers_non_virtual[layer_number],\"Name\":all_layers_non_virtual_names[layer_number],\"layer_number\":(layer_number)})\n    real_go_info = pd.concat((real_go_info,layer_go_info))\nreal_go_info.head()\n\n\n\n\n\n  \n    \n      \n      GO_term\n      Name\n      layer_number\n    \n  \n  \n    \n      0\n      GO:0000019_1\n      Regulation of mitotic recombination (1)\n      0.0\n    \n    \n      1\n      GO:0000019_2\n      Regulation of mitotic recombination (2)\n      0.0\n    \n    \n      2\n      GO:0000019_3\n      Regulation of mitotic recombination (3)\n      0.0\n    \n    \n      3\n      GO:0000019_4\n      Regulation of mitotic recombination (4)\n      0.0\n    \n    \n      4\n      GO:0000019_5\n      Regulation of mitotic recombination (5)\n      0.0"
  },
  {
    "objectID": "DeepMoA.html#drugs-info",
    "href": "DeepMoA.html#drugs-info",
    "title": "DeepMoA: method to predict the mechanism of action of cancer drugs",
    "section": "Drugs info",
    "text": "Drugs info\n\ndef get_compound_names(file_name):\n    compounds = []\n\n    with open(file_name, 'r') as fi:\n        for line in fi:\n            tokens = line.strip().split('\\t')\n            compounds.append([tokens[1],tokens[2]])\n    return compounds\n\n\ndrugs = get_compound_names(inputdir+\"compound_names.txt\")\ndrugs.pop(0)\n\n['SMILE', 'Name']"
  },
  {
    "objectID": "DeepMoA.html#deeplift-for-vnn",
    "href": "DeepMoA.html#deeplift-for-vnn",
    "title": "DeepMoA: method to predict the mechanism of action of cancer drugs",
    "section": "DeepLIFT for VNN",
    "text": "DeepLIFT for VNN\nReference activation… (baseline)\n\nmedian_cell_features = np.median(cell_features,axis=0) # to use as a reference\nmedian_drug_features = np.genfromtxt(computer+\"SparseGO_code/data/glucose_fingerprint.txt\", delimiter=',')\n\n\nAttribution function: sum\n\ndef get_layer_attribution(layer_number,input_data,baseline,selected_drug_data):\n    dl = LayerDeepLift(model, model_layers[layer_number],multiply_by_inputs = True) # CHOOSE LAYER TO STUDY\n    dl_attr_test = dl.attribute(input_data,baseline)\n    dl_attr_test_sum = dl_attr_test.cpu().detach().numpy().sum(0) # se suman las attributions para cada sample\n    \n    attribution_data = pd.DataFrame(np.column_stack((all_terms_ids[layer_number],dl_attr_test_sum)), columns=[\"GO_term\",selected_drug_data[1]])\n    attribution_data[[selected_drug_data[1]]] = attribution_data[[selected_drug_data[1]]].apply(pd.to_numeric).round(10)\n    attribution_data = attribution_data.loc[attribution_data['GO_term'].isin(all_layers_non_virtual[layer_number])] # only the keep the non virtual terms\n    return attribution_data\n\n\n\nDeepLIFT for all drugs\n\nattribution_data_all = pd.DataFrame()\n# Obtain the top GO terms on all layers for each drug\nfor selected_drug_data in drugs:\n    selected_drug =selected_drug_data[0] # DRUG smile\n    selected_drug_features = []\n    drug_specific_features=drug_features[drug2id_mapping[selected_drug]] # features of drug\n    \n    for i in range(len(cell2id_mapping)): # make all combinations of selected_drug and cell types \n        selected_drug_features.append(np.concatenate((cell_features[i], drug_specific_features), axis=None))\n    selected_drug_features = torch.FloatTensor(np.array(selected_drug_features))\n\n    # Data for deeplift...\n    input_data = torch.autograd.Variable(selected_drug_features.cuda(0))\n    \n    #median_drug_features = drug_specific_features\n    # baseline is the median of the expression data and drug features \n    baseline = torch.FloatTensor(np.concatenate((median_cell_features, median_drug_features), axis=None))\n    baseline = torch.reshape(baseline, (1, baseline.size()[0]))\n    baseline = torch.autograd.Variable(baseline.cuda(0))\n    \n    attribution_data_drug = list(map(get_layer_attribution,range(0,len(model_layers)),itertools.repeat(input_data, len(model_layers)),itertools.repeat(baseline, len(model_layers)),itertools.repeat(selected_drug_data, len(model_layers)))) # get the attribution for each layer (map is similar to apply)\n    attribution_data_drug = pd.concat(attribution_data_drug) # concatenate attribution of all layers\n    \n    attribution_data_all = pd.concat([attribution_data_all,attribution_data_drug.iloc[:,1]], axis=1)\n    \n    print(selected_drug_data[1])\n    \nattribution_data_all = pd.concat([attribution_data_drug.iloc[:,0],attribution_data_all], axis=1)\n\n\nattribution_data_all = attribution_data_all.set_index(\"GO_term\")\n\n\nattribution_data_all.head()\n\n\n\n\n\n  \n    \n      \n      BRD-K02251932-001-01-3\n      BRD-K25737009-001-01-2\n      Nintedanib\n      bicalutamide\n      N-[(2R,3S)-2-[[cyclopropylmethyl(methyl)amino]methyl]-5-[(2R)-1-hydroxypropan-2-yl]-3-methyl-6-oxo-3,4-dihydro-2H-1,5-benzoxazocin-8-yl]-1-methyl-4-imidazolesulfonamide\n      PHA-665752\n      N-cyclopropyl-3-[3-[[cyclopropyl(oxo)methyl]amino]-1H-indazol-6-yl]benzamide\n      Ki8751\n      IPA-3\n      FAWUGYGEBHAQBU-PPEXNQRJSA-N\n      ...\n      ML031\n      Semagacestat\n      RITA\n      CDK9 inhibitor\n      Dasatinib\n      BMS-536924;CC1=CC(=CC2=C1NC(=C3C(=CC=NC3=O)NC[C@H](C4=CC(=CC=C4)Cl)O)N2)N5CCOCC5\n      SCHEMBL13741284\n      Daporinad\n      STF-31\n      Narciclasine\n    \n    \n      GO_term\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      GO:0000012_1\n      -0.006564\n      -0.005680\n      0.003188\n      -0.005863\n      -0.003410\n      -0.002951\n      0.001118\n      0.002033\n      0.000799\n      -0.007842\n      ...\n      -0.007256\n      -0.004271\n      -0.013783\n      -0.006253\n      0.002864\n      0.009604\n      -0.008099\n      -0.001475\n      -0.003698\n      -0.009866\n    \n    \n      GO:0000012_2\n      0.010029\n      0.011514\n      0.009892\n      0.012072\n      0.005788\n      0.012909\n      0.002316\n      0.009362\n      -0.011816\n      0.000166\n      ...\n      0.008918\n      -0.002449\n      0.017704\n      0.006732\n      0.002447\n      0.006485\n      0.003888\n      -0.000569\n      0.001628\n      0.017132\n    \n    \n      GO:0000012_3\n      0.008466\n      0.006840\n      -0.000027\n      0.006379\n      0.003082\n      -0.006110\n      -0.008877\n      -0.000347\n      -0.013084\n      0.000150\n      ...\n      -0.006096\n      0.011308\n      0.012216\n      0.000997\n      0.011521\n      0.013800\n      0.002843\n      0.016328\n      0.021640\n      0.003536\n    \n    \n      GO:0000012_4\n      0.013018\n      0.007276\n      0.010128\n      0.008622\n      0.004795\n      0.006706\n      0.000874\n      0.005514\n      -0.003347\n      -0.000010\n      ...\n      -0.003682\n      0.006544\n      0.010806\n      0.003346\n      0.017556\n      0.023130\n      0.001105\n      0.009710\n      0.016940\n      0.014787\n    \n    \n      GO:0000012_5\n      -0.007076\n      -0.006129\n      -0.007634\n      -0.003785\n      -0.004151\n      -0.007947\n      -0.008430\n      -0.006039\n      -0.002722\n      0.002163\n      ...\n      0.001821\n      -0.002346\n      -0.007831\n      -0.009368\n      -0.011118\n      -0.003408\n      -0.001760\n      0.003593\n      -0.000109\n      -0.020831\n    \n  \n\n5 rows × 684 columns"
  },
  {
    "objectID": "DeepMoA.html#cheml-ids",
    "href": "DeepMoA.html#cheml-ids",
    "title": "DeepMoA: method to predict the mechanism of action of cancer drugs",
    "section": "chEML IDs",
    "text": "chEML IDs\nGet chembl IDs of drugs if available (there are always 684 drugs, the compounds2ids object can be reused)\n\n# Get all chembl IDs -- tarda\nmolecule = new_client.molecule\n\ncompounds2ids = {}\nfor i,drug in enumerate(names):\n    \n    if \" + \" in drug:\n        drug_split = drug.split(\" + \", 1)\n        ID1 = list(molecule.filter(pref_name__iexact=drug_split[0]).only('molecule_chembl_id'))\n        ID2 = list(molecule.filter(pref_name__iexact=drug_split[1]).only('molecule_chembl_id'))\n        if len(ID1)>0 and len(ID2)>0:\n            compounds2ids[drug]=[ID1[0]['molecule_chembl_id'],ID2[0]['molecule_chembl_id']]\n        elif len(ID1)>0:\n            compounds2ids[drug]=ID1[0]['molecule_chembl_id'] \n        elif len(ID2)>0:\n            compounds2ids[drug]=ID2[0]['molecule_chembl_id'] \n        else:\n            print(drug,i)\n\n    else:\n        ID = list(molecule.filter(pref_name__iexact=drug).only('molecule_chembl_id'))\n        if len(ID)>0:\n            ID = ID[0]['molecule_chembl_id']\n            compounds2ids[drug]=ID\n        else:\n            # for drugs that have the chembl ID as the name!!\n            ID = list(molecule.filter(chembl_id=drug).only('molecule_chembl_id')) \n            if len(ID)>0:\n                ID = ID[0]['molecule_chembl_id']\n                compounds2ids[drug]=ID\n            else:\n                # in case it is not found by pref_name\n                ID = list(molecule.filter(molecule_synonyms__molecule_synonym__iexact=drug).only('molecule_chembl_id'))\n                if len(ID)>0:\n                    ID = ID[0]['molecule_chembl_id']\n                    compounds2ids[drug]=ID\n                else:\n                    print(drug,i)\n    # 341 chembl IDs where found (october 31 2022)\n\n\n#manually add 6 more\ncompounds2ids[\"teniposide [usan]\"]=\"CHEMBL452231\"\ncompounds2ids[\"docetaxel (taxotere)\"]=\"CHEMBL92\"\ncompounds2ids[\"nan + navitoclax(1)\"]=\"CHEMBL443684\"\ncompounds2ids[\"nan + navitoclax(2)\"]=\"CHEMBL443684\"\ncompounds2ids[\"osi-027;coc1=cc=cc2=cc(=c3c4=c(n=cnn4c(=n3)c5ccc(cc5)c(=o)o)n)n=c21\"]=\"CHEMBL3120215\"\ncompounds2ids[\"paclitaxel;cc1=c2[c@h](c(=o)[c@@]3([c@h](c[c@@h]4[c@]([c@h]3[c@@h]([c@@](c2(c)c)(c[c@@h]1oc(=o)[c@@h]([c@h](c5=cc=cc=c5)nc(=o)c6=cc=cc=c6)o)o)oc(=o)c7=cc=cc=c7)(co4)oc(=o)c)o)c)oc(=o)c\"]=\"CHEMBL428647\"\n\n\nlen(compounds2ids)\n\n347"
  },
  {
    "objectID": "DeepMoA.html#chembl-moa-targets",
    "href": "DeepMoA.html#chembl-moa-targets",
    "title": "DeepMoA: method to predict the mechanism of action of cancer drugs",
    "section": "chEMBL MoA (targets)",
    "text": "chEMBL MoA (targets)\nGet the molecule targets of each drug (if available)\n\ncompounds2targets = dict() # required to store the drug targets \nfor drug in compounds2ids.keys():\n    compounds2targets[drug] = set()\n\nchembl_ids = list(compounds2ids.values()) # Chembl IDs of drugs\n\nfor drug in compounds2ids:\n    # we jump from compounds to targets through activities:\n    activities = new_client.mechanism.filter(parent_molecule_chembl_id__in=compounds2ids[drug]).only(\n        ['parent_molecule_chembl_id', 'target_chembl_id'])\n    # extracting target ChEMBL IDs from activities:\n    for act in activities:\n        compounds2targets[drug].add(act['target_chembl_id'])\n    print(drug)\n# We now know all targets for some drug\n\n\ncompounds2targets = {k: v for k, v in compounds2targets.items() if len(v) != 0 and len([x for x in list(v) if x is not None]) != 0 }\n# 218 DRUGS HAVE ANNOTATED DRUG TARGETS\n\n\nlen(compounds2targets)\n\n220"
  },
  {
    "objectID": "DeepMoA.html#drug-slim-go-terms",
    "href": "DeepMoA.html#drug-slim-go-terms",
    "title": "DeepMoA: method to predict the mechanism of action of cancer drugs",
    "section": "Drug slim GO terms",
    "text": "Drug slim GO terms\nGet the GO terms of each target\n\n# Get the GO terms of each target\ncompounds_GOterms = {}\nfor i in range(0, len(compounds2targets.keys())):\n    compound = list(compounds2targets.keys())[i]\n    GOterms_list = []\n    \n    for j in range(0, len(list(compounds2targets[compound]))):   \n        target = list(compounds2targets[compound])[j]\n        all_cross_references = list(new_client.target.filter(target_chembl_id=target).only(['target_components']).only(['target_components_xrefs']))[0]['target_components']\n        if len(all_cross_references)>0: # not all targets have annotated go_terms\n            for i in range(0, len(all_cross_references)):\n                GOterms = all_cross_references[i]\n                GOterms = pd.DataFrame(GOterms['target_component_xrefs'])\n                GOterms = pd.concat([GOterms,pd.Series([target]).repeat(len(GOterms)).reset_index().pop(0)],axis=1) # add target ID to dataframe \n                GOterms_list= GOterms_list + GOterms.values.tolist()\n    \n    compounds_GOterms[compound] =  pd.DataFrame(GOterms_list).drop_duplicates()\n    print(compound)\n\n\nlen(compounds_GOterms)\n\n220\n\n\n\n# we have 206 annotated drugs on CHEMBL\n\n\n# add GO terms found in CTRPv2\n\n\nCTRPv2_terms = pd.read_excel('ctrp_goterms_drugs.xlsx')  \n\n\n# add GO terms of drugs with or without annotations\nfor drug in CTRPv2_terms[\"Drug\"].unique():\n    if drug not in list(compounds_GOterms.keys()): # some drugs had no previous data, no annotations from chembl\n        compounds_GOterms[drug] = pd.DataFrame() # create empty dataframe\n\n    for term in list(CTRPv2_terms.loc[CTRPv2_terms[\"Drug\"]==drug][\"Field\"]):\n        compounds_GOterms[drug] = pd.concat([compounds_GOterms[drug],pd.DataFrame([term,\"\",\"GoProcess\",\"\"]).transpose()])\n    compounds_GOterms[drug] = compounds_GOterms[drug].drop_duplicates() \n\n# now we have 233 annotated drugs\n\n\n# Delete drugs with no GOterms (some targets have no annotated GO terms)\ncompounds_GOterms = {k: v for k, v in compounds_GOterms.items() if len(v) != 0 } \n\n\nlen(compounds_GOterms)\n\n236"
  },
  {
    "objectID": "DeepMoA.html#match-go-terms",
    "href": "DeepMoA.html#match-go-terms",
    "title": "DeepMoA: method to predict the mechanism of action of cancer drugs",
    "section": "Match GO terms",
    "text": "Match GO terms\nFind all terms that match, terms that are part of both, the sparseGO graph and the drug slim results…\n\ndef load_ontology_extra_output(ontology_file, gene2id_mapping):\n    \"\"\"\n    Creates the directed graph of the GO terms and stores the connected elements in arrays.\n\n        Output\n        ------\n        dG: networkx.classes.digraph.DiGraph\n            Directed graph of all terms\n\n        terms_pairs: numpy.ndarray\n            Store the connection between a term and a term\n\n        genes_terms_pairs: numpy.ndarray\n            Store the connection between a gene and a term\n    \"\"\"\n\n    dG = nx.DiGraph() # Directed graph class\n\n    file_handle = open(ontology_file) #  Open the file that has genes and go terms\n\n    terms_pairs = [] # store the pairs between a term and a term\n    genes_terms_pairs = [] # store the pairs between a gene and a term\n\n    gene_set = set() # create a set (elements can't repeat)\n    term_direct_gene_map = {}\n    term_size_map = {}\n\n\n    for line in file_handle:\n\n        line = line.rstrip().split() # delete spaces and transform to list, line has 3 elements\n\n        # No me hace falta el if, no tengo que separar las parejas\n        if line[2] == 'default': # si el tercer elemento es default entonces se conectan los terms en el grafo\n            dG.add_edge(line[0], line[1]) # Add an edge between line[0] and line[1]\n            terms_pairs.append([line[0], line[1]]) # Add the pair to the list\n        else:\n            if line[1] not in gene2id_mapping: # se salta el gen si no es parte de los que estan en gene2id_mapping\n                print(line[1])\n                continue\n\n            genes_terms_pairs.append([line[0], line[1]]) # add the pair\n\n            if line[0] not in term_direct_gene_map: # si el termino todavia no esta en el diccionario lo agrega\n                term_direct_gene_map[ line[0] ] = set() # crea un set\n\n            term_direct_gene_map[line[0]].add(gene2id_mapping[line[1]]) # añadimos el gen al set de ese term\n\n            gene_set.add(line[1]) # añadimos el gen al set total de genes\n\n    terms_pairs = np.array(terms_pairs) # convert to 2d array\n    genes_terms_pairs = np.array(genes_terms_pairs) # convert to 2d array\n\n    file_handle.close()\n\n    print('There are', len(gene_set), 'genes')\n\n    for term in dG.nodes(): # hacemos esto para cada uno de los GO terms\n\n        term_gene_set = set() # se crea un set\n\n        if term in term_direct_gene_map:\n            term_gene_set = term_direct_gene_map[term] # genes conectados al term\n\n        deslist = nxadag.descendants(dG, term) #regresa todos sus GO terms descendientes (biological processes tiene 2085 descendientes, todos menos el mismo)\n\n        for child in deslist:\n            if child in term_direct_gene_map: # añadir los genes de sus descendientes\n                term_gene_set = term_gene_set | term_direct_gene_map[child] # union of both sets, ahora tiene todos los genes los suyos y los de sus descendientes\n\n        if len(term_gene_set) == 0:\n            print('There is empty terms, please delete term:', term)\n            sys.exit(1)\n        else:\n            # por ahora esta variable no me hace falta\n            term_size_map[term] = len(term_gene_set) # cantidad de genes en ese term  (tomando en cuenta sus descendientes)\n\n    leaves = [n for n in dG.nodes if dG.in_degree(n) == 0] # buscar la raiz\n    #leaves = [n for n,d in dG.in_degree() if d==0]\n\n    uG = dG.to_undirected() # Returns an undirected representation of the digraph\n    connected_subG_list = list(nxacc.connected_components(uG)) #list of all GO terms\n\n    # Verify my graph makes sense...\n    print('There are', len(leaves), 'roots:', leaves[0])\n    print('There are', len(dG.nodes()), 'terms')\n    print('There are', len(connected_subG_list), 'connected components')\n    if len(leaves) > 1:\n        print('There are more than 1 root of ontology. Please use only one root.')\n        sys.exit(1)\n    if len(connected_subG_list) > 1:\n        print( 'There are more than connected components. Please connect them.')\n        sys.exit(1)\n\n    return dG, terms_pairs, genes_terms_pairs, term_direct_gene_map, term_size_map\n\n\nSparseGO graph\n\n# Import SparseGO graph (to extract all nodes/terms)... \n\n# Load ontology: create the graph of connected GO terms\ndG, terms_pairs, genes_terms_pairs, term_direct_gene_map, term_size_map = load_ontology_extra_output(onto, gene2id_mapping)\n####\nsparseGO_terms = list(dG.nodes())\nsparseGO_terms.remove(\"GO:0008150\")\n\nThere are 15015 genes\nThere are 1 roots: GO:0008150\nThere are 4184 terms\nThere are 1 connected components\n\n\n\n\nFull GO graph\n\n# Import full graph (to find parents)...\nimport obonet\n#import networkx as nx\nurl = 'http://purl.obolibrary.org/obo/go/go-basic.obo'\nfull_graph = obonet.read_obo(url)\nfull_graph = full_graph.reverse() # change the direction of nodes\n[n for n in full_graph.nodes if full_graph.in_degree(n) == 0] # graph contains the 3 roots (BP,MF,CC)\n\n['GO:0003674', 'GO:0005575', 'GO:0008150']\n\n\n\n\nMatch terms!\nFind all terms that match, terms that are part of both, the sparseGO graph and the drug slim results… if the slim terms’ ascendants are a match, they are also added\n\n# Each model has DIFFERENT matches (the graph is different)\ncompounds_GOterms_matches = {}\nfor drug in compounds_GOterms.keys():\n    # choose drug\n    drug_df = compounds_GOterms[drug]\n    drug_slim_GOterms = set(drug_df.loc[drug_df[2] == \"GoProcess\"][0]) # only GO processes\n    #set(sparseGO_terms) & set(drug_slim_GOterms)\n    drug_matches = [] # store all directly matched terms and matches with all parents\n    for term in drug_slim_GOterms: # term ='GO:1902669' # buen ejemplo \n        \n        if term in sparseGO_terms: # is the term in the sparseGO terms? \n            drug_matches.append([1,term]) # add to list\n            #1: same term, 2:not direct match  (esto igual despues...the number indicates how direct is the relationship 0:same term, 1: parent, 2: grandpa, 3:...)\n        \n        # are its ascendants in the sparseGO terms? \n        parents = [source for source, _ in  full_graph.in_edges(term)] # parents of term\n        relationship = 2\n        while(len(parents)>0): # check all ascendants \n            #relationship+=1\n            parents = [source for source, _ in  full_graph.in_edges(parents)] # parents of parents\n        \n            for parent_term in parents: # add parents that match sparseGO terms \n                if parent_term in sparseGO_terms:\n                    drug_matches.append([relationship, parent_term])\n        \n        drug_matches = (pd.DataFrame(drug_matches).drop_duplicates()).values.tolist() # remove duplicates\n        compounds_GOterms_matches[drug] = drug_matches\n    print(drug)\n\n\n# delete drugs that have no matches\ncompounds_GOterms_matches = {i:j for i,j in compounds_GOterms_matches.items() if j != []}\n\n\nlen(compounds_GOterms_matches)\n\n230"
  },
  {
    "objectID": "DeepMoA.html#sparsego-terms-x-drugslim-terms-matrix",
    "href": "DeepMoA.html#sparsego-terms-x-drugslim-terms-matrix",
    "title": "DeepMoA: method to predict the mechanism of action of cancer drugs",
    "section": "SparseGO terms x drugSlim terms matrix",
    "text": "SparseGO terms x drugSlim terms matrix\n\nattribution_data_all.columns = attribution_data_all.columns.str.lower() # in order to match the term\n\n\nattribution_data_all.head()\n\n\n\n\n\n  \n    \n      \n      brd-k02251932-001-01-3\n      brd-k25737009-001-01-2\n      nintedanib\n      bicalutamide\n      n-[(2r,3s)-2-[[cyclopropylmethyl(methyl)amino]methyl]-5-[(2r)-1-hydroxypropan-2-yl]-3-methyl-6-oxo-3,4-dihydro-2h-1,5-benzoxazocin-8-yl]-1-methyl-4-imidazolesulfonamide\n      pha-665752\n      n-cyclopropyl-3-[3-[[cyclopropyl(oxo)methyl]amino]-1h-indazol-6-yl]benzamide\n      ki8751\n      ipa-3\n      fawugygebhaqbu-ppexnqrjsa-n\n      ...\n      ml031\n      semagacestat\n      rita\n      cdk9 inhibitor\n      dasatinib\n      bms-536924;cc1=cc(=cc2=c1nc(=c3c(=cc=nc3=o)nc[c@h](c4=cc(=cc=c4)cl)o)n2)n5ccocc5\n      schembl13741284\n      daporinad\n      stf-31\n      narciclasine\n    \n    \n      GO_term\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      GO:0000012_1\n      -0.006564\n      -0.005680\n      0.003188\n      -0.005863\n      -0.003410\n      -0.002951\n      0.001118\n      0.002033\n      0.000799\n      -0.007842\n      ...\n      -0.007256\n      -0.004271\n      -0.013783\n      -0.006253\n      0.002864\n      0.009604\n      -0.008099\n      -0.001475\n      -0.003698\n      -0.009866\n    \n    \n      GO:0000012_2\n      0.010029\n      0.011514\n      0.009892\n      0.012072\n      0.005788\n      0.012909\n      0.002316\n      0.009362\n      -0.011816\n      0.000166\n      ...\n      0.008918\n      -0.002449\n      0.017704\n      0.006732\n      0.002447\n      0.006485\n      0.003888\n      -0.000569\n      0.001628\n      0.017132\n    \n    \n      GO:0000012_3\n      0.008466\n      0.006840\n      -0.000027\n      0.006379\n      0.003082\n      -0.006110\n      -0.008877\n      -0.000347\n      -0.013084\n      0.000150\n      ...\n      -0.006096\n      0.011308\n      0.012216\n      0.000997\n      0.011521\n      0.013800\n      0.002843\n      0.016328\n      0.021640\n      0.003536\n    \n    \n      GO:0000012_4\n      0.013018\n      0.007276\n      0.010128\n      0.008622\n      0.004795\n      0.006706\n      0.000874\n      0.005514\n      -0.003347\n      -0.000010\n      ...\n      -0.003682\n      0.006544\n      0.010806\n      0.003346\n      0.017556\n      0.023130\n      0.001105\n      0.009710\n      0.016940\n      0.014787\n    \n    \n      GO:0000012_5\n      -0.007076\n      -0.006129\n      -0.007634\n      -0.003785\n      -0.004151\n      -0.007947\n      -0.008430\n      -0.006039\n      -0.002722\n      0.002163\n      ...\n      0.001821\n      -0.002346\n      -0.007831\n      -0.009368\n      -0.011118\n      -0.003408\n      -0.001760\n      0.003593\n      -0.000109\n      -0.020831\n    \n  \n\n5 rows × 684 columns\n\n\n\n\nattribution_data_all.shape\n\n(25098, 684)\n\n\nOnly keep drugs that have annotated GO terms\n\nattribution_data_annotated = attribution_data_all[list(compounds_GOterms_matches.keys())]\n\n\nattribution_data_annotated.shape # 230 DRUGS\n\n(25098, 230)\n\n\n\nBuild drugSlim (MoA) matrix\n\nslim_matrix = attribution_data_annotated.copy() # copy dataframe in order to build a similar matrix \nfor col in slim_matrix.columns:\n    slim_matrix[col].values[:] = 0 # empty matrix \n\n\nfor drug in compounds_GOterms_matches.keys():\n    drug_matches = compounds_GOterms_matches[drug]\n    drug_matches_names = list(pd.DataFrame(drug_matches)[1])\n    \n    drug_matches_names_duplicated = []\n    for term in set(drug_matches_names):\n        for i in range(1,7):\n            drug_matches_names_duplicated.append(term+\"_\"+str(i))\n    \n    slim_matrix[drug][drug_matches_names_duplicated] = 1 # add a 1 if term is annotated to drug"
  },
  {
    "objectID": "DeepMoA.html#create-models",
    "href": "DeepMoA.html#create-models",
    "title": "DeepMoA: method to predict the mechanism of action of cancer drugs",
    "section": "Create models",
    "text": "Create models\nRegression models…\n\n# Dictionaries to store results\nGO_terms_auc_svm = {}\nGO_terms_aupr_svm = {}\nGO_terms_precision_svm = {}\nGO_terms_auc_delta_logits = {}\n\n# Perform logistic\nfor goterm in sparseGO_terms:\n    # if (real_go_info[real_go_info[\"GO_term\"]==goterm+\"_1\"][\"layer_number\"]).values >3:\n    #     continue\n    \n    # store results of each cross validation\n    all_y_test = []\n    all_y_pred_proba = []\n    all_y_pred_proba_dis = []\n    all_y_pred = []\n    all_y_names = []\n\n    goterm_drugs = slim_matrix.loc[[goterm+\"_\"+str(1)]].values.flatten()\n\n    if sum(goterm_drugs) <= 8: # at least 2 annotated drugs in each group\n            continue\n\n    list_nodes = []\n    for i in range(1,7):\n        list_nodes.append(goterm+\"_\"+str(i))\n\n    score = attribution_data_annotated.loc[list_nodes].T\n    #score_mod = score\n    score_mod = score.divide(score.std()).fillna(0) # AFECTA MUCHO\n\n    # Separate drugs in 4 groups for cross-validation -----\n\n    # Split data in 2 groups (with train_test_split in order to have 0s in both groups)\n    X_part1,X_part2,y_part1,y_part2=train_test_split(score_mod,goterm_drugs,test_size=0.50,random_state=0,stratify=goterm_drugs)\n    # Split data again in 4 groups (split data previously split)\n    X_group1,X_group2,y_group1,y_group2=train_test_split(X_part1,y_part1,test_size=0.50,random_state=0,stratify=y_part1)\n    X_group3,X_group4,y_group3,y_group4=train_test_split(X_part2,y_part2,test_size=0.50,random_state=0,stratify=y_part2)\n\n    for i in  range(1,5):\n        vector = range(0,5)\n        group_number = str(i)\n        X_test = globals()[\"X_group\"+group_number]\n        y_test = globals()[\"y_group\"+group_number]\n\n        # Use the other 3 groups for training \n        keep = list({1,2,3,4}-{int(group_number)}) # remove group number of current test \n        X_train = pd.concat((globals()[\"X_group\"+str(keep[0])],globals()[\"X_group\"+str(keep[1])],globals()[\"X_group\"+str(keep[2])]))\n        y_train = np.concatenate((globals()[\"y_group\"+str(keep[0])],globals()[\"y_group\"+str(keep[1])],globals()[\"y_group\"+str(keep[2])]))\n        \n        #gamma = 1/(X_train.shape[1]*X_train.to_numpy().var())\n        gamma = \"scale\"\n        C=1\n        \n        svm_model = svm.SVC(C=C,gamma=gamma, kernel='rbf',\n                           class_weight=\"balanced\",\n                            tol=0.001,\n                            probability=True,\n                            random_state=1234)\n        # svm_model = svm.SVC(gamma='auto', kernel='rbf',class_weight=\"balanced\",probability=True)\n        \n        # fit the model with data\n        svm_model.fit(X_train,y_train)\n        y_pred=svm_model.predict(X_test)\n        y_pred_proba = svm_model.predict_proba(X_test)[::,1] # platt values\n        y_pred_proba_dis = svm_model.decision_function(X_test) # An SVM returns a real-valued prediction for each of the input data samples, which corresponds to its distance from the separating hyperplane.\n        #  decision_function SORTS the results from most probable class to the least probable one.\n        \n        all_y_test.append(y_test)\n        all_y_pred_proba.append(y_pred_proba)\n        all_y_pred_proba_dis.append(y_pred_proba_dis)\n        all_y_pred.append(y_pred)\n        all_y_names.append(X_test.index)\n\n    all_y_test = np.concatenate(all_y_test)\n    all_y_pred_proba = np.concatenate(all_y_pred_proba)\n    all_y_pred_proba_dis = np.concatenate(all_y_pred_proba_dis)\n    all_y_names = np.concatenate(all_y_names)\n    all_y_pred = np.concatenate(all_y_pred)\n    \n    percentage_go_annotations = sum(all_y_test)/len(all_y_test)\n    logits_apriori=np.log(percentage_go_annotations/(1-percentage_go_annotations))\n    logits_apost= np.log(all_y_pred_proba/(1-all_y_pred_proba))\n    delta_logits = logits_apost-logits_apriori\n\n    platt_matrix.loc[goterm,all_y_names] = all_y_pred_proba\n    distance_matrix.loc[goterm,all_y_names] = all_y_pred_proba_dis\n    slim_matrix_single_neuron.loc[goterm,all_y_names] = all_y_test\n    preds_svm_matrix.loc[goterm,all_y_names] = all_y_pred\n    \n    delta_logits_matrix.loc[goterm,all_y_names] = delta_logits\n\n    GO_terms_auc_delta_logits[goterm] = metrics.roc_auc_score(all_y_test, delta_logits)\n    GO_terms_auc_svm[goterm] = metrics.roc_auc_score(all_y_test, all_y_pred_proba)\n\n    precision, recall, thresholds = metrics.precision_recall_curve(all_y_test, all_y_pred_proba)\n    GO_terms_aupr_svm[goterm] = metrics.auc(recall, precision)\n    GO_terms_precision_svm[goterm] = metrics.precision_score(all_y_test, all_y_pred)\n\n\n# done with platt values\nGO_terms_auc_svm_df = pd.DataFrame(list(GO_terms_auc_svm.items()),columns = ['goterm','auc']).set_index(\"goterm\")\nGO_terms_auc_svm_df = GO_terms_auc_svm_df.dropna()\nGO_terms_auc_svm_df.sort_values(by=[\"auc\"], ascending=False).head()\n\n\n\n\n\n  \n    \n      \n      auc\n    \n    \n      goterm\n      \n    \n  \n  \n    \n      GO:0036289\n      0.999708\n    \n    \n      GO:0060440\n      0.994743\n    \n    \n      GO:0042149\n      0.971292\n    \n    \n      GO:1902455\n      0.969545\n    \n    \n      GO:0001556\n      0.965979\n    \n  \n\n\n\n\n\nprint(\"There are \" +str(len(GO_terms_auc_svm_df))+ \" svm models.\")\n\nThere are 939 svm models.\n\n\n\n# only keep goterms that have a model \nplatt_matrix = platt_matrix.loc[list(GO_terms_auc_svm_df.index),:]\ndistance_matrix = distance_matrix.loc[list(GO_terms_auc_svm_df.index),:]\nslim_matrix_single_neuron  = slim_matrix_single_neuron.loc[list(GO_terms_auc_svm_df.index),:]\npreds_svm_matrix  = preds_svm_matrix.loc[list(GO_terms_auc_svm_df.index),:]\ndelta_logits_matrix  = delta_logits_matrix.loc[list(GO_terms_auc_svm_df.index),:]"
  },
  {
    "objectID": "DeepMoA.html#auc-histogram",
    "href": "DeepMoA.html#auc-histogram",
    "title": "DeepMoA: method to predict the mechanism of action of cancer drugs",
    "section": "AUC histogram",
    "text": "AUC histogram\n\nsns.set(rc={'figure.figsize':(10,6)})\nfig, ax = plt.subplots()\nperc = str(round((100*len(GO_terms_auc_svm_df[GO_terms_auc_svm_df[\"auc\"]>0.69])/len(GO_terms_auc_svm_df)),2))+\"%\"\nN, bins, patches = plt.hist(GO_terms_auc_svm_df, color=CB_color_cycle[6],bins=50, linewidth=0.1)\n\nfor i in range(0,len(bins)-1):\n    if bins[i]>0.69:\n        patches[i].set_facecolor(CB_color_cycle[2])\n\nplt.yticks(fontsize=16)\nplt.xticks(fontsize=16)\n\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\nax.spines['left'].set_visible(False)\nax.spines['bottom'].set_color('#DDDDDD')\n\n# Second, remove the ticks as well.\nax.tick_params(bottom=False, left=True)\n\n# Third, add a horizontal grid (but keep the vertical grid hidden).\n# Color the lines a light gray as well.\nax.set_axisbelow(True)\nax.yaxis.grid(True, color='#EEEEEE')\nax.xaxis.grid(False)\n\nplt.xlabel(\"AUC value\", fontsize=20)\nplt.ylabel(\"Number of GO term models\", fontsize=20)\ncolors2 = {'GO term models with AUC>=0.7':CB_color_cycle[2]}  \nlabels = list(colors2.keys())\nhandles = [plt.Rectangle((0,0),1,1, color=colors2[label]) for label in labels]\nplt.legend(handles, labels,fontsize=20, loc=\"lower left\", bbox_to_anchor=(0.35,-0.35))\nplt.text(0.71, 8, str(perc), fontsize=20,color='#333333')\nplt.title(\"Overall performance of the models using expression\", fontsize=24)\n# con el que mejor funciona es con la suma normal del attribution \nfig.tight_layout()\nfig.savefig(resultsdir+'modelsAUCsvm.png', transparent=True)"
  },
  {
    "objectID": "DeepMoA.html#auc-waterfall-plot",
    "href": "DeepMoA.html#auc-waterfall-plot",
    "title": "DeepMoA: method to predict the mechanism of action of cancer drugs",
    "section": "AUC waterfall plot",
    "text": "AUC waterfall plot\n\nGO_terms_auc_svm_df =GO_terms_auc_svm_df.sort_values(by=[\"auc\"], ascending=False)\n\n\nplt.rcParams['figure.figsize'] = (12, 9)\ndrugs = GO_terms_auc_svm_df.index\nrhos = GO_terms_auc_svm_df[\"auc\"]\n\npercentage = round((sum(rhos>0.69)/len(rhos))*100,1)\n\nfig, ax = plt.subplots()\n#colors = ['#208EA3' if (x < 0.5) else '#A4C61A' for x in rhos ]\ncolors = ['#C9C9C9' if (x < 0.69) else \"#6492CA\" for x in rhos ]\nax.bar(\n    x=drugs,\n    height=rhos,\n    edgecolor=colors,\n    linewidth=2\n)\nplt.xticks([])\nplt.yticks(fontsize=28)\n\n\n# First, let's remove the top, right and left spines (figure borders)\n# which really aren't necessary for a bar chart.\n# Also, make the bottom spine gray instead of black.\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\nax.spines['left'].set_visible(False)\nax.spines['bottom'].set_visible(False)\n#ax.spines['bottom'].set_color('#DDDDDD')\n\n# Second, remove the ticks as well.\nax.tick_params(bottom=False, left=False)\n\n# Third, add a horizontal grid (but keep the vertical grid hidden).\n# Color the lines a light gray as well.\nax.set_axisbelow(False)\nax.yaxis.grid(False)\n#ax.yaxis.grid(True, color='#EEEEEE')\nax.xaxis.grid(False)\n\n\n# Add labels and a title. Note the use of `labelpad` and `pad` to add some\n# extra space between the text and the tick labels.\nax.set_xlabel('SVM models', labelpad=-30, color='#333333',fontsize=50)\nax.set_ylabel('AUC-ROC value', labelpad=15, color='#333333',fontsize=50)\nax.set_title('', color='#333333',\n             weight='bold')\n\ncolors2 = {'High confidence drugs (r>0.5)':'#A4C61A'}  \nlabels = list(colors2.keys())\nhandles = [plt.Rectangle((0,0),1,1, color=colors2[label]) for label in labels]\n#plt.legend(handles, labels,fontsize=40, loc=\"lower left\",bbox_to_anchor=(0, -0.215))\nplt.text(77, 0.32, str(percentage)+\"%\", fontsize=60,color='#000000')\n\nplt.ylim((-0.1,1.1))\n# Make the chart fill out the figure better.\nfig.tight_layout()\nfig.savefig(resultsdir+'WaterfallModelsSVM.png', transparent=True)"
  },
  {
    "objectID": "DeepMoA.html#auc-boxplot-by-parents",
    "href": "DeepMoA.html#auc-boxplot-by-parents",
    "title": "DeepMoA: method to predict the mechanism of action of cancer drugs",
    "section": "AUC boxplot by parents",
    "text": "AUC boxplot by parents\n\n# Add number of parents\nnumber_parents = {}\nlevels = {}\nfor i in range(0,len(GO_terms_auc_svm_df.index)):\n    term = GO_terms_auc_svm_df.index[i]\n    number_parents[GO_terms_auc_svm_df.index[i]]=len([source for source, _ in  dG.in_edges(term)])\n    levels[GO_terms_auc_svm_df.index[i]]=level_number[term]-1\nlevels = pd.DataFrame.from_dict(levels, orient='index')\nnumber_parents = pd.DataFrame.from_dict(number_parents, orient='index')\n\nGO_terms_auc_svm_df = pd.concat([GO_terms_auc_svm_df, levels,number_parents], axis=1)\nGO_terms_auc_svm_df.columns = [\"auc\",\"levels\",\"parents\"]\n\n\nGO_terms_auc_svm_df.head()\n\n\n\n\n\n  \n    \n      \n      auc\n      levels\n      parents\n    \n  \n  \n    \n      GO:0000077\n      0.284021\n      1\n      3\n    \n    \n      GO:0045737\n      0.835954\n      0\n      8\n    \n    \n      GO:0000082\n      0.732331\n      2\n      4\n    \n    \n      GO:1900087\n      0.593301\n      0\n      10\n    \n    \n      GO:2000134\n      0.865329\n      1\n      9\n    \n  \n\n\n\n\n\nimport plotly.express as px\n\nc = ['#E8384F', '#FD817D', '#FDAE33',\n         '#EECC16', '#A4C61A', '#37A862',\"#208EA3\",\"#3B6EAB\"]\n\ndf = px.data.tips()\nfig = px.box(GO_terms_auc_svm_df, x=\"levels\", y=\"auc\",\n             color=\"levels\",\n            color_discrete_sequence=c,\n             width =600,\n             height=400,\n              template=\"simple_white\",\n              labels=dict(levels=\"Level of GO hierarchy\", auc=\"AUC-ROC\")\n            )\nfig.update_traces(width=0.9)\n\nfig.add_shape( # add a horizontal \"target\" line\n    type=\"line\", line_color=\"salmon\", line_width=3, opacity=1, line_dash=\"dot\",\n    x0=0, x1=1, xref=\"paper\", y0=0.7, y1=0.7, yref=\"y\"\n)\n\n\nfig.update_layout(\n   title=dict(text=\"<b> AUC value grouped by level of GO hierarchy <b>\",\n             x=0.5,\n             y=0.9,\n              font=dict(size=18),\n              xanchor='center',\n              yanchor='top'),\n    xaxis=dict(ticks=\"\", showticklabels=False, showgrid=False, zeroline=False),\n    yaxis=dict(ticks=\"\", showticklabels=True, showgrid=True, zeroline=False),\n #   yaxis_range=[min(yy.flatten()),max(yy.flatten())],\n  #  xaxis_range=[min(xx.flatten()),max(xx.flatten())],\n    legend=dict(x=1.1, y=1, orientation=\"v\",font=dict(size=11)),\n    paper_bgcolor='rgba(0,0,0,0)',\n    font=dict(family='Roboto',color= \"#36382E\",size=15)\n    )\n\nfig.show()"
  },
  {
    "objectID": "DeepMoA.html#top-15-predicted-go-terms",
    "href": "DeepMoA.html#top-15-predicted-go-terms",
    "title": "DeepMoA: method to predict the mechanism of action of cancer drugs",
    "section": "TOP 15 PREDICTED GO TERMS",
    "text": "TOP 15 PREDICTED GO TERMS\n\ntop15goterms= np.array(GO_terms_auc_svm_df.sort_values(by=[\"auc\"], ascending=False)[0:15].index)\n\nGet Top GO term names\n\ntop15goterms_1 = []\nfor goterm in top15goterms:\n    top15goterms_1.append(goterm+\"_\"+str(1))\nreal_go_info_mod_best = real_go_info[real_go_info.GO_term.isin(top15goterms_1)]\nreal_go_info_mod_best.GO_term = real_go_info_mod_best.GO_term.str.replace(\"_1\",\"\")\n\n\ntop15goterms_auc = GO_terms_auc_svm_df.sort_values(by=[\"auc\"], ascending=False)[0:15].reset_index()\ntop15goterms_auc.columns=[\"GO_term\",\"auc\",\"levels\",\"parents\"]\n\n\ntop15goterms_auc = top15goterms_auc.merge(real_go_info_mod_best[real_go_info_mod_best[\"GO_term\"].isin(top15goterms)], on=\"GO_term\")\n\n\ntop15goterms_auc\n\n\n\n\n\n  \n    \n      \n      GO_term\n      auc\n      levels\n      parents\n      Name\n      layer_number\n    \n  \n  \n    \n      0\n      GO:0036289\n      0.999708\n      0\n      2\n      Peptidyl-serine autophosphorylation (1)\n      0.0\n    \n    \n      1\n      GO:0060440\n      0.994743\n      0\n      4\n      Trachea formation (1)\n      0.0\n    \n    \n      2\n      GO:0042149\n      0.971292\n      0\n      1\n      Cellular response to glucose starvation (1)\n      0.0\n    \n    \n      3\n      GO:1902455\n      0.969545\n      0\n      2\n      Negative regulation of stem cell population maintenance (1)\n      0.0\n    \n    \n      4\n      GO:0001556\n      0.965979\n      0\n      6\n      Oocyte maturation (1)\n      0.0\n    \n    \n      5\n      GO:0045636\n      0.955115\n      0\n      6\n      Positive regulation of melanocyte differentiation (1)\n      0.0\n    \n    \n      6\n      GO:0010750\n      0.955000\n      0\n      4\n      Positive regulation of nitric oxide mediated signal transduction (1)\n      0.0\n    \n    \n      7\n      GO:0060020\n      0.949434\n      0\n      1\n      Bergmann glial cell differentiation (1)\n      0.0\n    \n    \n      8\n      GO:1902042\n      0.945804\n      0\n      4\n      Negative regulation of extrinsic apoptotic signaling pathway via death domain receptors (1)\n      0.0\n    \n    \n      9\n      GO:1902236\n      0.941667\n      0\n      12\n      Negative regulation of endoplasmic reticulum stress-induced intrinsic apoptotic signaling pathway (1)\n      0.0\n    \n    \n      10\n      GO:0070059\n      0.936432\n      1\n      2\n      Intrinsic apoptotic signaling pathway in response to endoplasmic reticulum stress (1)\n      1.0\n    \n    \n      11\n      GO:0051453\n      0.935521\n      1\n      2\n      Regulation of intracellular ph (1)\n      1.0\n    \n    \n      12\n      GO:0042659\n      0.931364\n      0\n      3\n      Regulation of cell fate specification (1)\n      0.0\n    \n    \n      13\n      GO:0006360\n      0.930046\n      2\n      7\n      Transcription by rna polymerase i (1)\n      2.0\n    \n    \n      14\n      GO:0006959\n      0.921730\n      2\n      2\n      Humoral immune response (1)\n      2.0"
  },
  {
    "objectID": "DeepMoA.html#worst-15-predicted-go-terms",
    "href": "DeepMoA.html#worst-15-predicted-go-terms",
    "title": "DeepMoA: method to predict the mechanism of action of cancer drugs",
    "section": "WORST 15 PREDICTED GO TERMS",
    "text": "WORST 15 PREDICTED GO TERMS\n\nworst15goterms= np.array(GO_terms_auc_svm_df.sort_values(by=[\"auc\"], ascending=True)[0:15].index)\n\nGet Worst GO term names\n\nworst15goterms_1 = []\nfor goterm in worst15goterms:\n    worst15goterms_1.append(goterm+\"_\"+str(1))\nreal_go_info_mod_worst = real_go_info[real_go_info.GO_term.isin(worst15goterms_1)]\nreal_go_info_mod_worst.GO_term = real_go_info_mod_worst.GO_term.str.replace(\"_1\",\"\")\n\n\nworst15goterms_auc = GO_terms_auc_svm_df.sort_values(by=[\"auc\"], ascending=True)[0:15].reset_index()\nworst15goterms_auc.columns=[\"GO_term\",\"auc\",\"levels\",\"parents\"]\n\n\nworst15goterms_auc.merge(real_go_info_mod_worst[real_go_info_mod_worst[\"GO_term\"].isin(worst15goterms)], on=\"GO_term\")\n\n\n\n\n\n  \n    \n      \n      GO_term\n      auc\n      levels\n      parents\n      Name\n      layer_number\n    \n  \n  \n    \n      0\n      GO:0000077\n      0.284021\n      1\n      3\n      Dna damage checkpoint signaling (1)\n      1.0\n    \n    \n      1\n      GO:0006869\n      0.299648\n      3\n      2\n      Lipid transport (1)\n      3.0\n    \n    \n      2\n      GO:0051302\n      0.314545\n      1\n      2\n      Regulation of cell division (1)\n      1.0\n    \n    \n      3\n      GO:0016485\n      0.318636\n      3\n      5\n      Protein processing (1)\n      3.0\n    \n    \n      4\n      GO:0019722\n      0.322272\n      2\n      1\n      Calcium-mediated signaling (1)\n      2.0\n    \n    \n      5\n      GO:0046854\n      0.326276\n      1\n      2\n      Phosphatidylinositol phosphate biosynthetic process (1)\n      1.0\n    \n    \n      6\n      GO:0060740\n      0.331825\n      1\n      6\n      Prostate gland epithelium morphogenesis (1)\n      1.0\n    \n    \n      7\n      GO:0060444\n      0.347273\n      1\n      8\n      Branching involved in mammary gland duct morphogenesis (1)\n      1.0\n    \n    \n      8\n      GO:0006919\n      0.352725\n      1\n      3\n      Activation of cysteine-type endopeptidase activity involved in apoptotic process (1)\n      1.0\n    \n    \n      9\n      GO:0032436\n      0.353421\n      1\n      14\n      Positive regulation of proteasomal ubiquitin-dependent protein catabolic process (1)\n      1.0\n    \n    \n      10\n      GO:0055119\n      0.353947\n      1\n      1\n      Relaxation of cardiac muscle (1)\n      1.0\n    \n    \n      11\n      GO:0001892\n      0.355979\n      1\n      5\n      Embryonic placenta development (1)\n      1.0\n    \n    \n      12\n      GO:0031295\n      0.364518\n      0\n      8\n      T cell costimulation (1)\n      0.0\n    \n    \n      13\n      GO:0046620\n      0.365476\n      1\n      3\n      Regulation of organ growth (1)\n      1.0\n    \n    \n      14\n      GO:0008361\n      0.367423\n      2\n      1\n      Regulation of cell size (1)\n      2.0"
  },
  {
    "objectID": "DeepMoA.html#aupr-histogram",
    "href": "DeepMoA.html#aupr-histogram",
    "title": "DeepMoA: method to predict the mechanism of action of cancer drugs",
    "section": "AUPR histogram",
    "text": "AUPR histogram\n\nGO_terms_aupr_svm_df = pd.DataFrame(list(GO_terms_aupr_svm.items()),columns = ['goterm','aupr']).set_index(\"goterm\")\nGO_terms_aupr_svm_df = GO_terms_aupr_svm_df.dropna()\nGO_terms_aupr_svm_df.sort_values(by=[\"aupr\"], ascending=False).head()\n\n\n\n\n\n  \n    \n      \n      aupr\n    \n    \n      goterm\n      \n    \n  \n  \n    \n      GO:0036289\n      0.996209\n    \n    \n      GO:0006807\n      0.945077\n    \n    \n      GO:0050896\n      0.921869\n    \n    \n      GO:0043170\n      0.909722\n    \n    \n      GO:0009058\n      0.900903\n    \n  \n\n\n\n\n\n# Add number of parents\nnumber_parents = {}\nlevels = {}\nfor i in range(0,len(GO_terms_aupr_svm_df.index)):\n    term = GO_terms_aupr_svm_df.index[i]\n    number_parents[GO_terms_aupr_svm_df.index[i]]=len([source for source, _ in  dG.in_edges(term)])\n    levels[GO_terms_aupr_svm_df.index[i]]=level_number[term]-1\nlevels = pd.DataFrame.from_dict(levels, orient='index')\nnumber_parents = pd.DataFrame.from_dict(number_parents, orient='index')\n\nGO_terms_aupr_svm_df = pd.concat([GO_terms_aupr_svm_df, levels,number_parents], axis=1)\nGO_terms_aupr_svm_df.columns = [\"aupr\",\"levels\",\"parents\"]\n\n\nc = ['#E8384F', '#FD817D', '#FDAE33',\n         '#EECC16', '#A4C61A', '#37A862',\"#208EA3\",\"#3B6EAB\"]\n\ndf = px.data.tips()\nfig = px.box(GO_terms_aupr_svm_df, x=\"levels\", y=\"aupr\",\n             color=\"levels\",\n            color_discrete_sequence=c,\n             width =600,\n             height=400,\n              template=\"simple_white\",\n              labels=dict(levels=\"Level of GO hierarchy\", aupr=\"AUPR\")\n            )\nfig.update_traces(width=0.9)\n\nfig.add_shape( # add a horizontal \"target\" line\n    type=\"line\", line_color=\"salmon\", line_width=3, opacity=1, line_dash=\"dot\",\n    x0=0, x1=1, xref=\"paper\", y0=0.7, y1=0.7, yref=\"y\"\n)\n\n\nfig.update_layout(\n   title=dict(text=\"<b> AUPR value grouped by level of GO hierarchy <b>\",\n             x=0.5,\n             y=0.9,\n              font=dict(size=18),\n              xanchor='center',\n              yanchor='top'),\n    xaxis=dict(ticks=\"\", showticklabels=False, showgrid=False, zeroline=False),\n    yaxis=dict(ticks=\"\", showticklabels=True, showgrid=True, zeroline=False),\n #   yaxis_range=[min(yy.flatten()),max(yy.flatten())],\n  #  xaxis_range=[min(xx.flatten()),max(xx.flatten())],\n    legend=dict(x=1.1, y=1, orientation=\"v\",font=dict(size=11)),\n    paper_bgcolor='rgba(0,0,0,0)',\n    font=dict(family='Roboto',color= \"#36382E\",size=15)\n    )\n\nfig.show()\npio.write_image(fig, resultsdir+\"AUPR_levels.png\", width=600, height=400,scale=8)"
  },
  {
    "objectID": "DeepMoA.html#example-prediction",
    "href": "DeepMoA.html#example-prediction",
    "title": "DeepMoA: method to predict the mechanism of action of cancer drugs",
    "section": "Example prediction",
    "text": "Example prediction\n\ndef f2(goterm):    \n    return goterm\n\n\ncombobox_go = interactive(f2, goterm=widgets.Combobox(options=list(GO_terms_auc_svm_df.sort_values(by=[\"auc\"], ascending=False).index)))\n\nChoose drug to study…\n\ndisplay(combobox_go)\n\n\n\n\n\nselected_go = combobox_go.result\n\n\n#auc\nplt.rcParams['figure.figsize'] = (4, 2)\nfpr, tpr, _ = metrics.roc_curve(slim_matrix_single_neuron.loc[selected_go],  platt_matrix.loc[selected_go])\nauc = metrics.roc_auc_score(slim_matrix_single_neuron.loc[selected_go],  platt_matrix.loc[selected_go])\nplt.plot(fpr,tpr,label=\"data 1, auc=\"+str(auc))\nplt.legend(loc=4)\nplt.show()\n\nplot = pd.concat([pd.DataFrame(slim_matrix_single_neuron.loc[selected_go]),pd.DataFrame(platt_matrix.loc[selected_go])], axis=1)\nplot.columns = [\"slim\",\"probability\"]\nax = sns.boxplot(x=\"slim\", y=\"probability\", data=plot,showfliers=False )\n\n\n\n\n\n\n\n\n#auc \nfpr, tpr, _ = metrics.roc_curve(slim_matrix_single_neuron.loc[selected_go],  delta_logits_matrix.loc[selected_go])\nauc = metrics.roc_auc_score(slim_matrix_single_neuron.loc[selected_go],  delta_logits_matrix.loc[selected_go])\nplt.plot(fpr,tpr,label=\"data 1, auc=\"+str(auc))\nplt.legend(loc=4)\nplt.show()\n\nplot = pd.concat([pd.DataFrame(slim_matrix_single_neuron.loc[selected_go]),pd.DataFrame(delta_logits_matrix.loc[selected_go])], axis=1)\nplot.columns = [\"slim\",\"probability\"]\nax = sns.boxplot(x=\"slim\", y=\"probability\", data=plot,showfliers=False )\n\n\n\n\n\n\n\n\nplt.rcParams['figure.figsize'] = (2, 2)\nmetrics.ConfusionMatrixDisplay.from_predictions(slim_matrix_single_neuron.loc[selected_go], preds_svm_matrix.loc[selected_go])\nplt.grid(visible=None)\n\nprint(\"Accuracy:\",metrics.accuracy_score(slim_matrix_single_neuron.loc[selected_go], preds_svm_matrix.loc[selected_go]))\nprint(\"Precision:\",metrics.precision_score(slim_matrix_single_neuron.loc[selected_go], preds_svm_matrix.loc[selected_go]))\nprint(\"Recall:\",metrics.recall_score(slim_matrix_single_neuron.loc[selected_go], preds_svm_matrix.loc[selected_go])) #TP / (TP+FN)\nprint(\"AUC with score:\",auc) #TP / (TP+FN)\n\nAccuracy: 0.9782608695652174\nPrecision: 0.7894736842105263\nRecall: 0.9375\nAUC with score: 0.9947429906542057\n\n\n\n\n\nTN - FP\nFN - TP\n\nplt.rcParams['figure.figsize'] = (4, 2)\nprecision, recall, thresholds = metrics.precision_recall_curve(slim_matrix_single_neuron.loc[selected_go],  preds_svm_matrix.loc[selected_go])\nauc_precision_recall = metrics.auc(recall, precision)\nplt.plot(recall, precision,label=str(auc_precision_recall))\nplt.legend(loc=4)\nplt.show()"
  },
  {
    "objectID": "DeepMoA.html#metrics-drugs",
    "href": "DeepMoA.html#metrics-drugs",
    "title": "DeepMoA: method to predict the mechanism of action of cancer drugs",
    "section": "METRICS drugs",
    "text": "METRICS drugs\n\nauc_drugs = {}\naupr_drugs = {}\nprecision_drugs = {}\nfor drug in list(slim_matrix_single_neuron.columns):\n    if slim_matrix_single_neuron.loc[:,drug].sum() ==0:\n        continue\n    #fpr, tpr, _ = metrics.roc_curve(slim_matrix_single_neuron.loc[:,drug], logits_matrix.loc[:,drug])\n    #auc_drugs[drug]  = metrics.auc(fpr, tpr)\n    auc_drugs[drug] = metrics.roc_auc_score(slim_matrix_single_neuron.loc[:,drug],  platt_matrix.loc[:,drug])\n    precision, recall, thresholds = metrics.precision_recall_curve(slim_matrix_single_neuron.loc[:,drug],  platt_matrix.loc[:,drug])\n    aupr_drugs[drug] = metrics.auc(recall, precision)\n    precision_drugs[drug] = metrics.precision_score(slim_matrix_single_neuron.loc[:,drug],  preds_svm_matrix.loc[:,drug])\n\nauc_drugs_df = pd.DataFrame(list(auc_drugs.items()),columns = ['goterm','auc']).set_index(\"goterm\")\nauc_drugs_df = auc_drugs_df.dropna()\n\naupr_drugs_df = pd.DataFrame(list(aupr_drugs.items()),columns = ['goterm','aupr']).set_index(\"goterm\")\naupr_drugs_df = aupr_drugs_df.dropna()\n\nprecision_drugs_df = pd.DataFrame(list(precision_drugs.items()),columns = ['goterm','precision']).set_index(\"goterm\")\nprecision_drugs_df = precision_drugs_df.dropna()\n\n\nAUC histogram drugs\n\nsns.set(rc={'figure.figsize':(10,6)})\nfig, ax = plt.subplots()\nperc = str(round((100*len(auc_drugs_df[auc_drugs_df[\"auc\"]>0.7])/len(auc_drugs_df)),2))+\"%\"\nN, bins, patches = plt.hist(auc_drugs_df, color=CB_color_cycle[6],bins=50, linewidth=0.1)\n\nfor i in range(0,len(bins)-1):\n    if bins[i]>0.7:\n        patches[i].set_facecolor(CB_color_cycle[5])\n\nplt.yticks(fontsize=16)\nplt.xticks(fontsize=16)\n\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\nax.spines['left'].set_visible(False)\nax.spines['bottom'].set_color('#DDDDDD')\n\n# Second, remove the ticks as well.\nax.tick_params(bottom=False, left=True)\n\n# Third, add a horizontal grid (but keep the vertical grid hidden).\n# Color the lines a light gray as well.\nax.set_axisbelow(True)\nax.yaxis.grid(True, color='#EEEEEE')\nax.xaxis.grid(False)\n\nplt.xlabel(\"AUC value\", fontsize=20)\nplt.ylabel(\"Number of drugs\", fontsize=20)\ncolors2 = {'Drugs with AUC>=0.7':CB_color_cycle[5]}  \nlabels = list(colors2.keys())\nhandles = [plt.Rectangle((0,0),1,1, color=colors2[label]) for label in labels]\nplt.legend(handles, labels,fontsize=20, loc=\"lower left\", bbox_to_anchor=(0.35,-0.35))\nplt.text(0.79, 6, str(perc), fontsize=20,color='#333333')\nplt.title(\"Overall performance by drugs using mutations\", fontsize=24)\n# con el que mejor funciona es con la suma normal del attribution \nfig.tight_layout()\nfig.savefig(resultsdir+'drugsAUC.png', transparent=True)\n\n\n\n\n\n\nAUC waterfall plot drugs\n\nauc_drugs_df =auc_drugs_df.sort_values(by=[\"auc\"], ascending=False)\n\n\nplt.rcParams['figure.figsize'] = (12, 9)\ndrugs = auc_drugs_df.index\nrhos = auc_drugs_df[\"auc\"]\n\npercentage = round((sum(rhos>0.69)/len(rhos))*100,1)\n\nfig, ax = plt.subplots()\n#colors = ['#208EA3' if (x < 0.5) else '#A4C61A' for x in rhos ]\ncolors = ['#C9C9C9' if (x < 0.69) else \"#B678BE\" for x in rhos ]\nax.bar(\n    x=drugs,\n    height=rhos,\n    edgecolor=colors,\n    linewidth=3\n)\nplt.xticks([])\nplt.yticks(fontsize=28)\n\n\n# First, let's remove the top, right and left spines (figure borders)\n# which really aren't necessary for a bar chart.\n# Also, make the bottom spine gray instead of black.\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\nax.spines['left'].set_visible(False)\nax.spines['bottom'].set_visible(False)\n#ax.spines['bottom'].set_color('#DDDDDD')\n\n# Second, remove the ticks as well.\nax.tick_params(bottom=False, left=False)\n\n# Third, add a horizontal grid (but keep the vertical grid hidden).\n# Color the lines a light gray as well.\nax.set_axisbelow(False)\nax.yaxis.grid(False)\n#ax.yaxis.grid(True, color='#EEEEEE')\nax.xaxis.grid(False)\n\n\n# Add labels and a title. Note the use of `labelpad` and `pad` to add some\n# extra space between the text and the tick labels.\nax.set_xlabel('Drugs', labelpad=-30, color='#333333',fontsize=50)\nax.set_ylabel('AUC-ROC value', labelpad=15, color='#333333',fontsize=50)\nax.set_title('', color='#333333',\n             weight='bold')\n\ncolors2 = {'High confidence drugs (r>0.5)':'#A4C61A'}  \nlabels = list(colors2.keys())\nhandles = [plt.Rectangle((0,0),1,1, color=colors2[label]) for label in labels]\n#plt.legend(handles, labels,fontsize=40, loc=\"lower left\",bbox_to_anchor=(0, -0.215))\nplt.text(77, 0.32, str(percentage)+\"%\", fontsize=60,color='#000000')\n\nplt.ylim((-0.1,1.1))\n# Make the chart fill out the figure better.\nfig.tight_layout()\nfig.savefig(resultsdir+'WaterfallModelsSVM_drugs.png', transparent=True)\n\n\n\n\n\n\nAUPR histogram drugs\n\nsns.set(rc={'figure.figsize':(5,3)})\nperc = str(round((100*len(aupr_drugs_df[aupr_drugs_df[\"aupr\"]>0.69])/len(aupr_drugs_df)),2))+\"%\"\nN, bins, patches = plt.hist(aupr_drugs_df, color=CB_color_cycle[6],bins=50, linewidth=0.1)\nfor i in range(0,len(bins)-1):\n    if bins[i]>0.69:\n        patches[i].set_facecolor(CB_color_cycle[3])\n\nplt.xlabel(\"AUPR drugs\", fontsize=16)  \nplt.title(perc, fontsize=16)\n\nText(0.5, 1.0, '33.62%')\n\n\n\n\n\n\n\nExample drug prediction\n\ndef f(drug):    \n    \n    return drug\n\n\npredictions_nodes = []\nfor goterm in list(platt_matrix.index):\n    predictions_nodes.append(goterm+\"_\"+str(1))\n\n\n# add names to go terms\nreal_go_info_svm= real_go_info[real_go_info.GO_term.isin(predictions_nodes)]\nreal_go_info_svm.GO_term = real_go_info_svm.GO_term.str.replace(\"_1\",\"\")\n\n\ncombobox = interactive(f, drug=widgets.Combobox(options=list(precision_drugs_df.sort_values(by=[\"precision\"], ascending=False).index)))\n\nChoose drug to study…\n\ndisplay(combobox)\n\n\n\n\n\nselected_drug_name = combobox.result\n\n\nsns.set(rc={'figure.figsize':(4,2)})\n#auc\nfpr, tpr, _ = metrics.roc_curve(slim_matrix_single_neuron.loc[:,selected_drug_name], platt_matrix.loc[:,selected_drug_name] )\nauc = metrics.roc_auc_score(slim_matrix_single_neuron.loc[:,selected_drug_name],  platt_matrix.loc[:,selected_drug_name])\nplt.plot(fpr,tpr,label=\"data 1, auc=\"+str(auc))\nplt.legend(loc=4)\nplt.show()\n\nplot = pd.concat([pd.DataFrame(slim_matrix_single_neuron.loc[:,selected_drug_name]),pd.DataFrame(platt_matrix.loc[:,selected_drug_name])], axis=1)\nplot.columns = [\"slim\",\"svm score\"]\nax = sns.boxplot(x=\"slim\", y=\"svm score\", data=plot,showfliers=False )\n\n\n\n\n\n\n\n\nplot = pd.concat([pd.DataFrame(slim_matrix.loc[:,selected_drug_name]),pd.DataFrame(attribution_data_annotated.loc[:,selected_drug_name]*1e4)], axis=1)\nplot.columns = [\"slim\",\"attribution\"]\nax = sns.boxplot(x=\"slim\", y=\"attribution\", data=plot,showfliers=True )\n\n\n\n\n\nmetrics.ConfusionMatrixDisplay.from_predictions(slim_matrix_single_neuron.loc[:,selected_drug_name].round(), preds_svm_matrix.loc[:,selected_drug_name])\n\n<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x2502863c8b0>\n\n\n\n\n\n\nprint(\"Accuracy:\",metrics.accuracy_score(slim_matrix_single_neuron.loc[:,selected_drug_name], preds_svm_matrix.loc[:,selected_drug_name]))\nprint(\"Precision:\",metrics.precision_score(slim_matrix_single_neuron.loc[:,selected_drug_name], preds_svm_matrix.loc[:,selected_drug_name]))\nprint(\"Recall:\",metrics.recall_score(slim_matrix_single_neuron.loc[:,selected_drug_name], preds_svm_matrix.loc[:,selected_drug_name])) #TP / (TP+FN)\nprint(\"AUC with score:\",auc) \n\nAccuracy: 0.663471778487753\nPrecision: 0.8651026392961877\nRecall: 0.5221238938053098\nAUC with score: 0.9947429906542057\n\n\n\n# LOS LOGITS DE TEST!!\ntrain_drug_logs = pd.DataFrame(delta_logits_matrix.loc[:,selected_drug_name]).reset_index()\ntrain_drug_logs.columns  = [\"GO_term\",\"probability\"]\ntrain_drug_logs = train_drug_logs.merge(real_go_info_svm, on=\"GO_term\")\ntrain_drug_logs.sort_values(by=[\"probability\"], ascending=False)"
  },
  {
    "objectID": "DeepMoA.html#final-model-svm",
    "href": "DeepMoA.html#final-model-svm",
    "title": "DeepMoA: method to predict the mechanism of action of cancer drugs",
    "section": "Final model SVM",
    "text": "Final model SVM\nOnce the models have been cross-validated we create the final models using all samples…\n\nGO_terms_auc_svm_final = {}\nGO_terms_aupr_svm_final = {}\nGO_terms_precision_svm_final = {}\nmodels_svm = {}\n\n# Perform logistics\nfor goterm in sparseGO_terms:\n    #print(goterm)\n    goterm_drugs = slim_matrix.loc[[goterm+\"_\"+str(1)]].values.flatten()\n    \n    if sum(goterm_drugs) <= 8:\n        continue\n\n    list_nodes = []\n    for i in range(1,7):\n        list_nodes.append(goterm+\"_\"+str(i))\n\n    score = attribution_data_annotated.loc[list_nodes].T\n    score_mod = score.divide(score.std()).fillna(0)\n    \n    X_train = score_mod\n    X_test = score_mod\n    y_train = goterm_drugs\n    y_test = goterm_drugs\n    \n    #gamma = 1/(X_train.shape[1]*X_train.to_numpy().var())\n    gamma=\"scale\"\n    C=1\n    \n    \n        \n    svm_model = svm.SVC(C=C,gamma=gamma, kernel='rbf',\n                           class_weight=\"balanced\",\n                            tol=0.001,\n                            probability=True,\n                           random_state=1234)\n    # fit the model with data\n    svm_model.fit(X_train,y_train)\n    y_pred=svm_model.predict(X_test)\n\n    #auc\n    y_pred_proba = svm_model.predict_proba(X_test)[::,1]  # platt values\n    #y_pred_proba = svm_model.decision_function(X_test)\n    \n    GO_terms_auc_svm_final[goterm] = metrics.roc_auc_score(y_test, y_pred_proba)\n\n    precision, recall, thresholds = metrics.precision_recall_curve(y_test, y_pred_proba)\n    GO_terms_aupr_svm_final[goterm] = metrics.auc(recall, precision)\n    GO_terms_precision_svm_final[goterm] = metrics.precision_score(y_test, y_pred)\n    models_svm[goterm]=svm_model\n\n\nlen(models_svm)\n\n939\n\n\n\nFinal model AUC\n\nGO_terms_auc_svm_df_final = pd.DataFrame(list(GO_terms_auc_svm_final.items()),columns = ['goterm','auc']).set_index(\"goterm\")\nGO_terms_auc_svm_df_final = GO_terms_auc_svm_df_final.dropna()\nGO_terms_auc_svm_df_final.sort_values(by=[\"auc\"], ascending=False)\n\n\n\n\n\n  \n    \n      \n      auc\n    \n    \n      goterm\n      \n    \n  \n  \n    \n      GO:0036289\n      1.000000\n    \n    \n      GO:0060440\n      0.998540\n    \n    \n      GO:0043162\n      0.995455\n    \n    \n      GO:0070059\n      0.994760\n    \n    \n      GO:0071364\n      0.994109\n    \n    \n      GO:1901029\n      0.994048\n    \n    \n      GO:0072384\n      0.993636\n    \n    \n      GO:0051453\n      0.993393\n    \n    \n      GO:0001556\n      0.991972\n    \n    \n      GO:0090201\n      0.991808\n    \n    \n      GO:0010750\n      0.990909\n    \n    \n      GO:0016573\n      0.990783\n    \n    \n      GO:1903800\n      0.990573\n    \n    \n      GO:1904950\n      0.989945\n    \n    \n      GO:1902455\n      0.989091\n    \n    \n      GO:0042149\n      0.987697\n    \n    \n      GO:0034983\n      0.987273\n    \n    \n      GO:1990403\n      0.985909\n    \n    \n      GO:0071353\n      0.985587\n    \n    \n      GO:0006275\n      0.984226\n    \n    \n      GO:0010971\n      0.984091\n    \n    \n      GO:0006869\n      0.983409\n    \n    \n      GO:0001779\n      0.983182\n    \n    \n      GO:0051973\n      0.981651\n    \n    \n      GO:0060749\n      0.980895\n    \n    \n      GO:0042771\n      0.980633\n    \n    \n      GO:0072655\n      0.980455\n    \n    \n      GO:0061734\n      0.980455\n    \n    \n      GO:0045636\n      0.980178\n    \n    \n      GO:0045737\n      0.980084\n    \n    \n      GO:1902236\n      0.979762\n    \n    \n      GO:0060632\n      0.979545\n    \n    \n      GO:0016575\n      0.978731\n    \n    \n      GO:0042659\n      0.977727\n    \n    \n      GO:0046628\n      0.977376\n    \n    \n      GO:1902042\n      0.977273\n    \n    \n      GO:0098780\n      0.975909\n    \n    \n      GO:0046902\n      0.975849\n    \n    \n      GO:0051607\n      0.975552\n    \n    \n      GO:0006401\n      0.974678\n    \n    \n      GO:0017157\n      0.974040\n    \n    \n      GO:0032740\n      0.973856\n    \n    \n      GO:0006270\n      0.973848\n    \n    \n      GO:0046666\n      0.973570\n    \n    \n      GO:0008045\n      0.972603\n    \n    \n      GO:0006303\n      0.972553\n    \n    \n      GO:0042177\n      0.972431\n    \n    \n      GO:0060020\n      0.972290\n    \n    \n      GO:0006360\n      0.972095\n    \n    \n      GO:2001021\n      0.971520\n    \n    \n      GO:0042733\n      0.971364\n    \n    \n      GO:0016572\n      0.971342\n    \n    \n      GO:0070932\n      0.970909\n    \n    \n      GO:2001257\n      0.970909\n    \n    \n      GO:0001782\n      0.970384\n    \n    \n      GO:0006261\n      0.970112\n    \n    \n      GO:1905564\n      0.969834\n    \n    \n      GO:2000757\n      0.969545\n    \n    \n      GO:0051354\n      0.969091\n    \n    \n      GO:0072284\n      0.969069\n    \n    \n      GO:0051926\n      0.968891\n    \n    \n      GO:0043407\n      0.968585\n    \n    \n      GO:0034394\n      0.968096\n    \n    \n      GO:0050870\n      0.967621\n    \n    \n      GO:0046898\n      0.967143\n    \n    \n      GO:0031047\n      0.967115\n    \n    \n      GO:0016925\n      0.966364\n    \n    \n      GO:0035790\n      0.966361\n    \n    \n      GO:0006417\n      0.965261\n    \n    \n      GO:0032469\n      0.965008\n    \n    \n      GO:0035195\n      0.964816\n    \n    \n      GO:0021782\n      0.964091\n    \n    \n      GO:0070584\n      0.963810\n    \n    \n      GO:0051384\n      0.961083\n    \n    \n      GO:0002326\n      0.960811\n    \n    \n      GO:2000773\n      0.960310\n    \n    \n      GO:0050729\n      0.959779\n    \n    \n      GO:0046942\n      0.959480\n    \n    \n      GO:0035249\n      0.959091\n    \n    \n      GO:0045821\n      0.958904\n    \n    \n      GO:0099111\n      0.958880\n    \n    \n      GO:0071670\n      0.958851\n    \n    \n      GO:0006367\n      0.958333\n    \n    \n      GO:1905278\n      0.958270\n    \n    \n      GO:0010559\n      0.957929\n    \n    \n      GO:0006959\n      0.957854\n    \n    \n      GO:0018205\n      0.957782\n    \n    \n      GO:0035860\n      0.957768\n    \n    \n      GO:0031640\n      0.957381\n    \n    \n      GO:0007059\n      0.957268\n    \n    \n      GO:0070373\n      0.956762\n    \n    \n      GO:0030282\n      0.956762\n    \n    \n      GO:0001658\n      0.956522\n    \n    \n      GO:0030890\n      0.956075\n    \n    \n      GO:0035754\n      0.955757\n    \n    \n      GO:0010832\n      0.955455\n    \n    \n      GO:0099173\n      0.955238\n    \n    \n      GO:0021695\n      0.955238\n    \n    \n      GO:0045727\n      0.955026\n    \n    \n      GO:0002862\n      0.954696\n    \n    \n      GO:0014827\n      0.954432\n    \n    \n      GO:0016579\n      0.953923\n    \n    \n      GO:0002718\n      0.953854\n    \n    \n      GO:0071320\n      0.953746\n    \n    \n      GO:0051281\n      0.953182\n    \n    \n      GO:0042552\n      0.953182\n    \n    \n      GO:0000086\n      0.953095\n    \n    \n      GO:0032147\n      0.952991\n    \n    \n      GO:0032436\n      0.952499\n    \n    \n      GO:0010592\n      0.952273\n    \n    \n      GO:0006694\n      0.951735\n    \n    \n      GO:0033141\n      0.951735\n    \n    \n      GO:0071480\n      0.951429\n    \n    \n      GO:0006612\n      0.951118\n    \n    \n      GO:0048011\n      0.950729\n    \n    \n      GO:1903077\n      0.950714\n    \n    \n      GO:0033619\n      0.950455\n    \n    \n      GO:0006352\n      0.950306\n    \n    \n      GO:0001662\n      0.950221\n    \n    \n      GO:0010039\n      0.950040\n    \n    \n      GO:0090314\n      0.949147\n    \n    \n      GO:0034502\n      0.949074\n    \n    \n      GO:0014823\n      0.948954\n    \n    \n      GO:2001240\n      0.948220\n    \n    \n      GO:0007617\n      0.948182\n    \n    \n      GO:0032743\n      0.947281\n    \n    \n      GO:0006310\n      0.947141\n    \n    \n      GO:0006605\n      0.946678\n    \n    \n      GO:0006975\n      0.946204\n    \n    \n      GO:2000739\n      0.946101\n    \n    \n      GO:1902459\n      0.945909\n    \n    \n      GO:0007626\n      0.945701\n    \n    \n      GO:0023019\n      0.945116\n    \n    \n      GO:0003376\n      0.944700\n    \n    \n      GO:0006576\n      0.944346\n    \n    \n      GO:0038007\n      0.943690\n    \n    \n      GO:0050728\n      0.943637\n    \n    \n      GO:0032922\n      0.942661\n    \n    \n      GO:0045740\n      0.942465\n    \n    \n      GO:1900118\n      0.942381\n    \n    \n      GO:0010952\n      0.942143\n    \n    \n      GO:1905710\n      0.942143\n    \n    \n      GO:1902166\n      0.942128\n    \n    \n      GO:0008637\n      0.941950\n    \n    \n      GO:2000010\n      0.941865\n    \n    \n      GO:0055118\n      0.941679\n    \n    \n      GO:0000423\n      0.941364\n    \n    \n      GO:0043154\n      0.941156\n    \n    \n      GO:0048701\n      0.940775\n    \n    \n      GO:0008210\n      0.940749\n    \n    \n      GO:1900272\n      0.940171\n    \n    \n      GO:0060997\n      0.939809\n    \n    \n      GO:0007263\n      0.939545\n    \n    \n      GO:2000379\n      0.939167\n    \n    \n      GO:1900020\n      0.939091\n    \n    \n      GO:0050896\n      0.938915\n    \n    \n      GO:0016485\n      0.938636\n    \n    \n      GO:0043966\n      0.938376\n    \n    \n      GO:0002437\n      0.938295\n    \n    \n      GO:2000300\n      0.937318\n    \n    \n      GO:0140013\n      0.937095\n    \n    \n      GO:0034767\n      0.936758\n    \n    \n      GO:0031648\n      0.936624\n    \n    \n      GO:0007026\n      0.936364\n    \n    \n      GO:0032024\n      0.936149\n    \n    \n      GO:0030193\n      0.936040\n    \n    \n      GO:0010212\n      0.935098\n    \n    \n      GO:0006457\n      0.934641\n    \n    \n      GO:0032729\n      0.934420\n    \n    \n      GO:0030593\n      0.934413\n    \n    \n      GO:0010575\n      0.934272\n    \n    \n      GO:0008064\n      0.933643\n    \n    \n      GO:0008286\n      0.932331\n    \n    \n      GO:0001818\n      0.932128\n    \n    \n      GO:0030513\n      0.931404\n    \n    \n      GO:0060766\n      0.931364\n    \n    \n      GO:0006396\n      0.931346\n    \n    \n      GO:0006919\n      0.931342\n    \n    \n      GO:0038096\n      0.930886\n    \n    \n      GO:0001553\n      0.930810\n    \n    \n      GO:0045580\n      0.930407\n    \n    \n      GO:0046326\n      0.930406\n    \n    \n      GO:0035025\n      0.930294\n    \n    \n      GO:1903146\n      0.929091\n    \n    \n      GO:0060444\n      0.929091\n    \n    \n      GO:0006412\n      0.928571\n    \n    \n      GO:0048536\n      0.928290\n    \n    \n      GO:0002819\n      0.927685\n    \n    \n      GO:0048704\n      0.927370\n    \n    \n      GO:0051054\n      0.927333\n    \n    \n      GO:0090184\n      0.927099\n    \n    \n      GO:1900006\n      0.926941\n    \n    \n      GO:2000134\n      0.926917\n    \n    \n      GO:0046889\n      0.926822\n    \n    \n      GO:0043123\n      0.926512\n    \n    \n      GO:0070842\n      0.926364\n    \n    \n      GO:0046329\n      0.926364\n    \n    \n      GO:0006898\n      0.925891\n    \n    \n      GO:0006368\n      0.925841\n    \n    \n      GO:1905897\n      0.925743\n    \n    \n      GO:0030048\n      0.925591\n    \n    \n      GO:0042180\n      0.925076\n    \n    \n      GO:0035909\n      0.924883\n    \n    \n      GO:0051209\n      0.924065\n    \n    \n      GO:0030308\n      0.923951\n    \n    \n      GO:0043170\n      0.923707\n    \n    \n      GO:0035726\n      0.922783\n    \n    \n      GO:0031663\n      0.922727\n    \n    \n      GO:0000209\n      0.922119\n    \n    \n      GO:0009165\n      0.921544\n    \n    \n      GO:0002720\n      0.921427\n    \n    \n      GO:0006096\n      0.921292\n    \n    \n      GO:1902036\n      0.921254\n    \n    \n      GO:0071549\n      0.921066\n    \n    \n      GO:0007528\n      0.920950\n    \n    \n      GO:0090090\n      0.920930\n    \n    \n      GO:0042472\n      0.920455\n    \n    \n      GO:0031056\n      0.920429\n    \n    \n      GO:0050864\n      0.920262\n    \n    \n      GO:0060789\n      0.920000\n    \n    \n      GO:0007389\n      0.919762\n    \n    \n      GO:0048743\n      0.919572\n    \n    \n      GO:0030705\n      0.919116\n    \n    \n      GO:0060179\n      0.919091\n    \n    \n      GO:0045739\n      0.918823\n    \n    \n      GO:0043627\n      0.917977\n    \n    \n      GO:0040018\n      0.917659\n    \n    \n      GO:2001243\n      0.917078\n    \n    \n      GO:0090037\n      0.917056\n    \n    \n      GO:0040016\n      0.915987\n    \n    \n      GO:0043552\n      0.915951\n    \n    \n      GO:0001666\n      0.915013\n    \n    \n      GO:0010508\n      0.914755\n    \n    \n      GO:0033690\n      0.914545\n    \n    \n      GO:0098586\n      0.914419\n    \n    \n      GO:0043922\n      0.914091\n    \n    \n      GO:0035994\n      0.914021\n    \n    \n      GO:0031398\n      0.913694\n    \n    \n      GO:0042093\n      0.913524\n    \n    \n      GO:0032410\n      0.913182\n    \n    \n      GO:1901224\n      0.913182\n    \n    \n      GO:0006839\n      0.913167\n    \n    \n      GO:0045907\n      0.912844\n    \n    \n      GO:2000278\n      0.912619\n    \n    \n      GO:2001236\n      0.912563\n    \n    \n      GO:0048170\n      0.912474\n    \n    \n      GO:0071839\n      0.912217\n    \n    \n      GO:0031507\n      0.911552\n    \n    \n      GO:0060391\n      0.911011\n    \n    \n      GO:0032148\n      0.910451\n    \n    \n      GO:0070102\n      0.910000\n    \n    \n      GO:0030878\n      0.909762\n    \n    \n      GO:0035162\n      0.909463\n    \n    \n      GO:0051225\n      0.909314\n    \n    \n      GO:0002931\n      0.909064\n    \n    \n      GO:0007411\n      0.908683\n    \n    \n      GO:0008625\n      0.908500\n    \n    \n      GO:0035788\n      0.908313\n    \n    \n      GO:0010921\n      0.907360\n    \n    \n      GO:0048266\n      0.906977\n    \n    \n      GO:0010977\n      0.906667\n    \n    \n      GO:0050910\n      0.906656\n    \n    \n      GO:0045732\n      0.906062\n    \n    \n      GO:0046620\n      0.905714\n    \n    \n      GO:0035855\n      0.905551\n    \n    \n      GO:0030316\n      0.905551\n    \n    \n      GO:0006469\n      0.905340\n    \n    \n      GO:0090263\n      0.905136\n    \n    \n      GO:0021953\n      0.904874\n    \n    \n      GO:0060312\n      0.904790\n    \n    \n      GO:0006260\n      0.904703\n    \n    \n      GO:0030521\n      0.904434\n    \n    \n      GO:0008016\n      0.904091\n    \n    \n      GO:0010727\n      0.904091\n    \n    \n      GO:0030509\n      0.904035\n    \n    \n      GO:0007498\n      0.903914\n    \n    \n      GO:0050769\n      0.903592\n    \n    \n      GO:0050792\n      0.903414\n    \n    \n      GO:0009582\n      0.903167\n    \n    \n      GO:0007098\n      0.902745\n    \n    \n      GO:0002821\n      0.902464\n    \n    \n      GO:0071276\n      0.902162\n    \n    \n      GO:0007286\n      0.901132\n    \n    \n      GO:0045088\n      0.900952\n    \n    \n      GO:0055003\n      0.900943\n    \n    \n      GO:0035767\n      0.900748\n    \n    \n      GO:0045987\n      0.900474\n    \n    \n      GO:0061029\n      0.900474\n    \n    \n      GO:0033327\n      0.900465\n    \n    \n      GO:0000422\n      0.900374\n    \n    \n      GO:0010976\n      0.900117\n    \n    \n      GO:0008354\n      0.899895\n    \n    \n      GO:0070528\n      0.899726\n    \n    \n      GO:0006807\n      0.899601\n    \n    \n      GO:0045833\n      0.899128\n    \n    \n      GO:1905065\n      0.898923\n    \n    \n      GO:0007018\n      0.898915\n    \n    \n      GO:0007422\n      0.898647\n    \n    \n      GO:0048484\n      0.898636\n    \n    \n      GO:0032467\n      0.898182\n    \n    \n      GO:0050795\n      0.897909\n    \n    \n      GO:0030539\n      0.897909\n    \n    \n      GO:0048538\n      0.897833\n    \n    \n      GO:0032355\n      0.897646\n    \n    \n      GO:0007416\n      0.897554\n    \n    \n      GO:0021575\n      0.897509\n    \n    \n      GO:0060348\n      0.897410\n    \n    \n      GO:0001569\n      0.897282\n    \n    \n      GO:0060384\n      0.897171\n    \n    \n      GO:0031069\n      0.897099\n    \n    \n      GO:0050918\n      0.897059\n    \n    \n      GO:0035584\n      0.896905\n    \n    \n      GO:0051046\n      0.896369\n    \n    \n      GO:0043129\n      0.896233\n    \n    \n      GO:0001843\n      0.896024\n    \n    \n      GO:0046330\n      0.895444\n    \n    \n      GO:0007030\n      0.895429\n    \n    \n      GO:0048873\n      0.895092\n    \n    \n      GO:0000724\n      0.894922\n    \n    \n      GO:0007202\n      0.894511\n    \n    \n      GO:1903053\n      0.894419\n    \n    \n      GO:0003338\n      0.894238\n    \n    \n      GO:1901990\n      0.894150\n    \n    \n      GO:0060644\n      0.893917\n    \n    \n      GO:0043161\n      0.893782\n    \n    \n      GO:0030838\n      0.892727\n    \n    \n      GO:0001946\n      0.892571\n    \n    \n      GO:0072210\n      0.892039\n    \n    \n      GO:0030101\n      0.892003\n    \n    \n      GO:0050731\n      0.892003\n    \n    \n      GO:0010613\n      0.891865\n    \n    \n      GO:0030325\n      0.891865\n    \n    \n      GO:0048714\n      0.891783\n    \n    \n      GO:0048008\n      0.891667\n    \n    \n      GO:0001823\n      0.890989\n    \n    \n      GO:0016239\n      0.890496\n    \n    \n      GO:0030216\n      0.890460\n    \n    \n      GO:0071300\n      0.890341\n    \n    \n      GO:0032008\n      0.889952\n    \n    \n      GO:0061045\n      0.889881\n    \n    \n      GO:0051894\n      0.889619\n    \n    \n      GO:0030010\n      0.889612\n    \n    \n      GO:0031016\n      0.889533\n    \n    \n      GO:0001942\n      0.889526\n    \n    \n      GO:1902533\n      0.889155\n    \n    \n      GO:0016358\n      0.888660\n    \n    \n      GO:0001501\n      0.888280\n    \n    \n      GO:0051092\n      0.888251\n    \n    \n      GO:0016601\n      0.887883\n    \n    \n      GO:0097067\n      0.887324\n    \n    \n      GO:0009306\n      0.887019\n    \n    \n      GO:0048167\n      0.886555\n    \n    \n      GO:0050921\n      0.886315\n    \n    \n      GO:1990384\n      0.886268\n    \n    \n      GO:0046883\n      0.886202\n    \n    \n      GO:0007519\n      0.886154\n    \n    \n      GO:0043270\n      0.885881\n    \n    \n      GO:0003007\n      0.885720\n    \n    \n      GO:0071900\n      0.885420\n    \n    \n      GO:0007585\n      0.885391\n    \n    \n      GO:2001214\n      0.885258\n    \n    \n      GO:0071456\n      0.884685\n    \n    \n      GO:0016567\n      0.884594\n    \n    \n      GO:0060740\n      0.882856\n    \n    \n      GO:0035094\n      0.882732\n    \n    \n      GO:0072073\n      0.882732\n    \n    \n      GO:0060612\n      0.881602\n    \n    \n      GO:0060325\n      0.881498\n    \n    \n      GO:0045668\n      0.881347\n    \n    \n      GO:0042531\n      0.881332\n    \n    \n      GO:0010038\n      0.881167\n    \n    \n      GO:0071333\n      0.880972\n    \n    \n      GO:0006939\n      0.880907\n    \n    \n      GO:0090141\n      0.880907\n    \n    \n      GO:0046718\n      0.880697\n    \n    \n      GO:0051770\n      0.880461\n    \n    \n      GO:0033627\n      0.880455\n    \n    \n      GO:0048149\n      0.880352\n    \n    \n      GO:0002685\n      0.880291\n    \n    \n      GO:0043029\n      0.880195\n    \n    \n      GO:0038033\n      0.879699\n    \n    \n      GO:0055119\n      0.879336\n    \n    \n      GO:0003300\n      0.878843\n    \n    \n      GO:0005984\n      0.878788\n    \n    \n      GO:0002218\n      0.878773\n    \n    \n      GO:0072239\n      0.878669\n    \n    \n      GO:0031103\n      0.878667\n    \n    \n      GO:0048557\n      0.878638\n    \n    \n      GO:1901987\n      0.878627\n    \n    \n      GO:0060048\n      0.877703\n    \n    \n      GO:0045637\n      0.877659\n    \n    \n      GO:2001234\n      0.877406\n    \n    \n      GO:0038083\n      0.876762\n    \n    \n      GO:0071277\n      0.876323\n    \n    \n      GO:0048839\n      0.876278\n    \n    \n      GO:0000723\n      0.875714\n    \n    \n      GO:0060627\n      0.875648\n    \n    \n      GO:0035022\n      0.874811\n    \n    \n      GO:0007435\n      0.874669\n    \n    \n      GO:2001241\n      0.874309\n    \n    \n      GO:0002062\n      0.874091\n    \n    \n      GO:0035234\n      0.873792\n    \n    \n      GO:0034976\n      0.873754\n    \n    \n      GO:0007584\n      0.872411\n    \n    \n      GO:0002318\n      0.872408\n    \n    \n      GO:0001975\n      0.872354\n    \n    \n      GO:0071230\n      0.871837\n    \n    \n      GO:0034446\n      0.871788\n    \n    \n      GO:0070933\n      0.871364\n    \n    \n      GO:0030072\n      0.871331\n    \n    \n      GO:0071897\n      0.871171\n    \n    \n      GO:0035733\n      0.870478\n    \n    \n      GO:0032967\n      0.870403\n    \n    \n      GO:0048675\n      0.870071\n    \n    \n      GO:0060571\n      0.870035\n    \n    \n      GO:0050920\n      0.869917\n    \n    \n      GO:0050678\n      0.869106\n    \n    \n      GO:0034405\n      0.869048\n    \n    \n      GO:0051150\n      0.868932\n    \n    \n      GO:0001934\n      0.868720\n    \n    \n      GO:0010507\n      0.868700\n    \n    \n      GO:1904707\n      0.868636\n    \n    \n      GO:0050821\n      0.868325\n    \n    \n      GO:0006811\n      0.868262\n    \n    \n      GO:0070588\n      0.868155\n    \n    \n      GO:0014911\n      0.867596\n    \n    \n      GO:0090280\n      0.867440\n    \n    \n      GO:0008630\n      0.867386\n    \n    \n      GO:1901796\n      0.867386\n    \n    \n      GO:0051056\n      0.867368\n    \n    \n      GO:0051321\n      0.865996\n    \n    \n      GO:0051051\n      0.865833\n    \n    \n      GO:0051902\n      0.865573\n    \n    \n      GO:0097009\n      0.865089\n    \n    \n      GO:0060271\n      0.865061\n    \n    \n      GO:0045930\n      0.864995\n    \n    \n      GO:0035304\n      0.864977\n    \n    \n      GO:0051899\n      0.864866\n    \n    \n      GO:0033028\n      0.864808\n    \n    \n      GO:0018108\n      0.864767\n    \n    \n      GO:1900087\n      0.864434\n    \n    \n      GO:0010467\n      0.863952\n    \n    \n      GO:0035019\n      0.863557\n    \n    \n      GO:0006687\n      0.863557\n    \n    \n      GO:0001824\n      0.863532\n    \n    \n      GO:0033689\n      0.863522\n    \n    \n      GO:0071392\n      0.863443\n    \n    \n      GO:0035264\n      0.863252\n    \n    \n      GO:0046632\n      0.862800\n    \n    \n      GO:0034605\n      0.862619\n    \n    \n      GO:0032091\n      0.862599\n    \n    \n      GO:0072659\n      0.862358\n    \n    \n      GO:0051901\n      0.861670\n    \n    \n      GO:0006357\n      0.861504\n    \n    \n      GO:0042475\n      0.861448\n    \n    \n      GO:0045747\n      0.861374\n    \n    \n      GO:0072006\n      0.860598\n    \n    \n      GO:0042220\n      0.860483\n    \n    \n      GO:0006937\n      0.860353\n    \n    \n      GO:0006511\n      0.860111\n    \n    \n      GO:0010718\n      0.859229\n    \n    \n      GO:0035924\n      0.859169\n    \n    \n      GO:0090398\n      0.859050\n    \n    \n      GO:0031532\n      0.858981\n    \n    \n      GO:1904062\n      0.858745\n    \n    \n      GO:2000251\n      0.858605\n    \n    \n      GO:0014068\n      0.858156\n    \n    \n      GO:0048146\n      0.858102\n    \n    \n      GO:0051090\n      0.857756\n    \n    \n      GO:0034765\n      0.857317\n    \n    \n      GO:0007229\n      0.856812\n    \n    \n      GO:0007158\n      0.856712\n    \n    \n      GO:1901031\n      0.856712\n    \n    \n      GO:0061351\n      0.856372\n    \n    \n      GO:1904019\n      0.856183\n    \n    \n      GO:0048812\n      0.856107\n    \n    \n      GO:0060437\n      0.855565\n    \n    \n      GO:0034766\n      0.854758\n    \n    \n      GO:0033143\n      0.854574\n    \n    \n      GO:0007269\n      0.854497\n    \n    \n      GO:0032516\n      0.854484\n    \n    \n      GO:0036120\n      0.854433\n    \n    \n      GO:0090068\n      0.853947\n    \n    \n      GO:0046854\n      0.853881\n    \n    \n      GO:0010811\n      0.853842\n    \n    \n      GO:0060976\n      0.853774\n    \n    \n      GO:0060045\n      0.853680\n    \n    \n      GO:0021549\n      0.853311\n    \n    \n      GO:0043534\n      0.853142\n    \n    \n      GO:0038084\n      0.853135\n    \n    \n      GO:0046427\n      0.852947\n    \n    \n      GO:0030324\n      0.852866\n    \n    \n      GO:0048010\n      0.852488\n    \n    \n      GO:0097193\n      0.852297\n    \n    \n      GO:0048286\n      0.852143\n    \n    \n      GO:0006468\n      0.851852\n    \n    \n      GO:0060326\n      0.851772\n    \n    \n      GO:0034097\n      0.851678\n    \n    \n      GO:0016071\n      0.851667\n    \n    \n      GO:0036324\n      0.851085\n    \n    \n      GO:1903010\n      0.851085\n    \n    \n      GO:0002327\n      0.850962\n    \n    \n      GO:0001570\n      0.850955\n    \n    \n      GO:0043536\n      0.850601\n    \n    \n      GO:0043406\n      0.850494\n    \n    \n      GO:0045347\n      0.850455\n    \n    \n      GO:0001701\n      0.850196\n    \n    \n      GO:0019222\n      0.849913\n    \n    \n      GO:0051403\n      0.849741\n    \n    \n      GO:0097021\n      0.849170\n    \n    \n      GO:0043467\n      0.848706\n    \n    \n      GO:0045766\n      0.848621\n    \n    \n      GO:0060562\n      0.848060\n    \n    \n      GO:0030001\n      0.847486\n    \n    \n      GO:0006810\n      0.847446\n    \n    \n      GO:0031667\n      0.847070\n    \n    \n      GO:0048565\n      0.846000\n    \n    \n      GO:0019827\n      0.845649\n    \n    \n      GO:0007565\n      0.845356\n    \n    \n      GO:0009966\n      0.844893\n    \n    \n      GO:0055085\n      0.844768\n    \n    \n      GO:0043114\n      0.844749\n    \n    \n      GO:0002548\n      0.844626\n    \n    \n      GO:2000377\n      0.844341\n    \n    \n      GO:0030198\n      0.844187\n    \n    \n      GO:0032386\n      0.844167\n    \n    \n      GO:0031929\n      0.844150\n    \n    \n      GO:0035306\n      0.843956\n    \n    \n      GO:0006897\n      0.843955\n    \n    \n      GO:0051301\n      0.843815\n    \n    \n      GO:0001656\n      0.843809\n    \n    \n      GO:0042060\n      0.843773\n    \n    \n      GO:0031109\n      0.843563\n    \n    \n      GO:0000122\n      0.843521\n    \n    \n      GO:0043124\n      0.843017\n    \n    \n      GO:0001837\n      0.842638\n    \n    \n      GO:1902275\n      0.841719\n    \n    \n      GO:0051261\n      0.841719\n    \n    \n      GO:0051924\n      0.841520\n    \n    \n      GO:0002250\n      0.841465\n    \n    \n      GO:0030336\n      0.841059\n    \n    \n      GO:0046631\n      0.840909\n    \n    \n      GO:0016055\n      0.840841\n    \n    \n      GO:0033077\n      0.840735\n    \n    \n      GO:0048741\n      0.840370\n    \n    \n      GO:0007266\n      0.839667\n    \n    \n      GO:0001938\n      0.838948\n    \n    \n      GO:0043586\n      0.838898\n    \n    \n      GO:0008277\n      0.837920\n    \n    \n      GO:0043303\n      0.837858\n    \n    \n      GO:0070662\n      0.837526\n    \n    \n      GO:0060374\n      0.836916\n    \n    \n      GO:0045087\n      0.836889\n    \n    \n      GO:0034220\n      0.836107\n    \n    \n      GO:0032388\n      0.835532\n    \n    \n      GO:0048568\n      0.835305\n    \n    \n      GO:0050866\n      0.835227\n    \n    \n      GO:0009058\n      0.834946\n    \n    \n      GO:1902074\n      0.834912\n    \n    \n      GO:0043244\n      0.834906\n    \n    \n      GO:0008542\n      0.834749\n    \n    \n      GO:0045055\n      0.834433\n    \n    \n      GO:0045444\n      0.834286\n    \n    \n      GO:0046578\n      0.834019\n    \n    \n      GO:0046777\n      0.833773\n    \n    \n      GO:0001889\n      0.833595\n    \n    \n      GO:0008584\n      0.833556\n    \n    \n      GO:0045840\n      0.833536\n    \n    \n      GO:0002366\n      0.833530\n    \n    \n      GO:0007049\n      0.833424\n    \n    \n      GO:0046474\n      0.833392\n    \n    \n      GO:0019233\n      0.833182\n    \n    \n      GO:0000165\n      0.832917\n    \n    \n      GO:0051258\n      0.832656\n    \n    \n      GO:0032956\n      0.832450\n    \n    \n      GO:0022612\n      0.832326\n    \n    \n      GO:0051050\n      0.832281\n    \n    \n      GO:0043392\n      0.831905\n    \n    \n      GO:0031274\n      0.831814\n    \n    \n      GO:0051702\n      0.831506\n    \n    \n      GO:0010564\n      0.831039\n    \n    \n      GO:0031099\n      0.830615\n    \n    \n      GO:1905563\n      0.830607\n    \n    \n      GO:0030318\n      0.830136\n    \n    \n      GO:0048598\n      0.829861\n    \n    \n      GO:0007165\n      0.829719\n    \n    \n      GO:1901988\n      0.829474\n    \n    \n      GO:0007186\n      0.829429\n    \n    \n      GO:0033157\n      0.829023\n    \n    \n      GO:0019221\n      0.829000\n    \n    \n      GO:0000278\n      0.828800\n    \n    \n      GO:0042310\n      0.828784\n    \n    \n      GO:1901300\n      0.828616\n    \n    \n      GO:0006909\n      0.828497\n    \n    \n      GO:0030154\n      0.828332\n    \n    \n      GO:0002573\n      0.827001\n    \n    \n      GO:0045429\n      0.826889\n    \n    \n      GO:0051223\n      0.826823\n    \n    \n      GO:0016570\n      0.826822\n    \n    \n      GO:0030163\n      0.826442\n    \n    \n      GO:0009791\n      0.826355\n    \n    \n      GO:0090630\n      0.826069\n    \n    \n      GO:0032409\n      0.825426\n    \n    \n      GO:0048477\n      0.824868\n    \n    \n      GO:0034644\n      0.824849\n    \n    \n      GO:0007346\n      0.824841\n    \n    \n      GO:0046651\n      0.824539\n    \n    \n      GO:0051171\n      0.823977\n    \n    \n      GO:0000302\n      0.823816\n    \n    \n      GO:0048608\n      0.823637\n    \n    \n      GO:0032940\n      0.823481\n    \n    \n      GO:0008610\n      0.823469\n    \n    \n      GO:0010628\n      0.823151\n    \n    \n      GO:1903078\n      0.822244\n    \n    \n      GO:0016032\n      0.821730\n    \n    \n      GO:0009888\n      0.821458\n    \n    \n      GO:0016042\n      0.821320\n    \n    \n      GO:0007259\n      0.820971\n    \n    \n      GO:0008544\n      0.820813\n    \n    \n      GO:0000077\n      0.820719\n    \n    \n      GO:0021766\n      0.820586\n    \n    \n      GO:0001817\n      0.819733\n    \n    \n      GO:0001932\n      0.819683\n    \n    \n      GO:0002053\n      0.819493\n    \n    \n      GO:0072593\n      0.819390\n    \n    \n      GO:0009887\n      0.819242\n    \n    \n      GO:0006753\n      0.818971\n    \n    \n      GO:0071383\n      0.818684\n    \n    \n      GO:0007015\n      0.818627\n    \n    \n      GO:0001819\n      0.818452\n    \n    \n      GO:0007275\n      0.818394\n    \n    \n      GO:1903829\n      0.818083\n    \n    \n      GO:0002244\n      0.818060\n    \n    \n      GO:0051898\n      0.817795\n    \n    \n      GO:0009410\n      0.817265\n    \n    \n      GO:0030335\n      0.817025\n    \n    \n      GO:0061024\n      0.816492\n    \n    \n      GO:0007173\n      0.816349\n    \n    \n      GO:0050900\n      0.816242\n    \n    \n      GO:0060395\n      0.815909\n    \n    \n      GO:0009755\n      0.815667\n    \n    \n      GO:0045860\n      0.815613\n    \n    \n      GO:0050872\n      0.815367\n    \n    \n      GO:0007612\n      0.814548\n    \n    \n      GO:0000082\n      0.814519\n    \n    \n      GO:0050852\n      0.814267\n    \n    \n      GO:0043408\n      0.813977\n    \n    \n      GO:0002009\n      0.813874\n    \n    \n      GO:0019752\n      0.813530\n    \n    \n      GO:0001822\n      0.813506\n    \n    \n      GO:0007179\n      0.813500\n    \n    \n      GO:0051049\n      0.813439\n    \n    \n      GO:0010033\n      0.813421\n    \n    \n      GO:1901135\n      0.813379\n    \n    \n      GO:1900180\n      0.813213\n    \n    \n      GO:0033554\n      0.813172\n    \n    \n      GO:0007204\n      0.813136\n    \n    \n      GO:0044770\n      0.812960\n    \n    \n      GO:0001755\n      0.812831\n    \n    \n      GO:0001541\n      0.812614\n    \n    \n      GO:0006470\n      0.811795\n    \n    \n      GO:0009743\n      0.811594\n    \n    \n      GO:0033993\n      0.811585\n    \n    \n      GO:0035265\n      0.811041\n    \n    \n      GO:0051496\n      0.811040\n    \n    \n      GO:0007162\n      0.810927\n    \n    \n      GO:0030218\n      0.809955\n    \n    \n      GO:0006139\n      0.809816\n    \n    \n      GO:0070374\n      0.808642\n    \n    \n      GO:0006298\n      0.808612\n    \n    \n      GO:0009056\n      0.808581\n    \n    \n      GO:0070507\n      0.808431\n    \n    \n      GO:0071363\n      0.808295\n    \n    \n      GO:0050680\n      0.808234\n    \n    \n      GO:0007169\n      0.807939\n    \n    \n      GO:0001894\n      0.807870\n    \n    \n      GO:0000902\n      0.806862\n    \n    \n      GO:0009617\n      0.806711\n    \n    \n      GO:1902904\n      0.806512\n    \n    \n      GO:0030097\n      0.806125\n    \n    \n      GO:0007399\n      0.805949\n    \n    \n      GO:0050853\n      0.805230\n    \n    \n      GO:0051726\n      0.804914\n    \n    \n      GO:0008360\n      0.804780\n    \n    \n      GO:0050863\n      0.804772\n    \n    \n      GO:0010629\n      0.804702\n    \n    \n      GO:0032880\n      0.804305\n    \n    \n      GO:0021795\n      0.804198\n    \n    \n      GO:0046488\n      0.804184\n    \n    \n      GO:0031032\n      0.804004\n    \n    \n      GO:0045595\n      0.803077\n    \n    \n      GO:0006936\n      0.802344\n    \n    \n      GO:0045793\n      0.802149\n    \n    \n      GO:0071222\n      0.801980\n    \n    \n      GO:0051897\n      0.801416\n    \n    \n      GO:0006606\n      0.800953\n    \n    \n      GO:0006886\n      0.800872\n    \n    \n      GO:0030307\n      0.800490\n    \n    \n      GO:0048738\n      0.800331\n    \n    \n      GO:0010821\n      0.800220\n    \n    \n      GO:0051247\n      0.800154\n    \n    \n      GO:0042752\n      0.800120\n    \n    \n      GO:0032835\n      0.800025\n    \n    \n      GO:0033138\n      0.799982\n    \n    \n      GO:1903578\n      0.799701\n    \n    \n      GO:0050673\n      0.798946\n    \n    \n      GO:0006997\n      0.798672\n    \n    \n      GO:0060341\n      0.798662\n    \n    \n      GO:0006281\n      0.798556\n    \n    \n      GO:0042391\n      0.798475\n    \n    \n      GO:0050808\n      0.797394\n    \n    \n      GO:0007267\n      0.797360\n    \n    \n      GO:0050865\n      0.797107\n    \n    \n      GO:0018105\n      0.797070\n    \n    \n      GO:0060560\n      0.796569\n    \n    \n      GO:0071478\n      0.796131\n    \n    \n      GO:0018107\n      0.796045\n    \n    \n      GO:0019216\n      0.795977\n    \n    \n      GO:0023061\n      0.795969\n    \n    \n      GO:0036473\n      0.795897\n    \n    \n      GO:0051147\n      0.795455\n    \n    \n      GO:0006996\n      0.794900\n    \n    \n      GO:0030217\n      0.794761\n    \n    \n      GO:0070527\n      0.794579\n    \n    \n      GO:0050804\n      0.793936\n    \n    \n      GO:0060021\n      0.793808\n    \n    \n      GO:0045321\n      0.793792\n    \n    \n      GO:0046034\n      0.792891\n    \n    \n      GO:1904646\n      0.792812\n    \n    \n      GO:0030182\n      0.792624\n    \n    \n      GO:0002764\n      0.790893\n    \n    \n      GO:0007596\n      0.790844\n    \n    \n      GO:0043542\n      0.790474\n    \n    \n      GO:0006355\n      0.790400\n    \n    \n      GO:0010638\n      0.790227\n    \n    \n      GO:0042110\n      0.789916\n    \n    \n      GO:2000811\n      0.789519\n    \n    \n      GO:0045785\n      0.789271\n    \n    \n      GO:0001952\n      0.789204\n    \n    \n      GO:0048709\n      0.787833\n    \n    \n      GO:0016192\n      0.787802\n    \n    \n      GO:0002320\n      0.787705\n    \n    \n      GO:0045944\n      0.787650\n    \n    \n      GO:0035051\n      0.787216\n    \n    \n      GO:0070663\n      0.786907\n    \n    \n      GO:0046486\n      0.786765\n    \n    \n      GO:0006914\n      0.786701\n    \n    \n      GO:0071407\n      0.786480\n    \n    \n      GO:0048468\n      0.786471\n    \n    \n      GO:0043065\n      0.786229\n    \n    \n      GO:1902532\n      0.786009\n    \n    \n      GO:0033044\n      0.785934\n    \n    \n      GO:0031333\n      0.785379\n    \n    \n      GO:0071417\n      0.785307\n    \n    \n      GO:0016241\n      0.785238\n    \n    \n      GO:0007268\n      0.785105\n    \n    \n      GO:0007010\n      0.785047\n    \n    \n      GO:0002443\n      0.783904\n    \n    \n      GO:2000270\n      0.783308\n    \n    \n      GO:0001764\n      0.782709\n    \n    \n      GO:0051174\n      0.781935\n    \n    \n      GO:0034329\n      0.781439\n    \n    \n      GO:0043549\n      0.781269\n    \n    \n      GO:0010595\n      0.781136\n    \n    \n      GO:2001020\n      0.780899\n    \n    \n      GO:0050776\n      0.780250\n    \n    \n      GO:0007159\n      0.780220\n    \n    \n      GO:0048041\n      0.780105\n    \n    \n      GO:0016236\n      0.779569\n    \n    \n      GO:0048638\n      0.778556\n    \n    \n      GO:0042551\n      0.778521\n    \n    \n      GO:0007517\n      0.778474\n    \n    \n      GO:0032869\n      0.777921\n    \n    \n      GO:0051649\n      0.777222\n    \n    \n      GO:0009725\n      0.777056\n    \n    \n      GO:0030855\n      0.776398\n    \n    \n      GO:0002040\n      0.776347\n    \n    \n      GO:0071310\n      0.775759\n    \n    \n      GO:0042063\n      0.775499\n    \n    \n      GO:0009266\n      0.775262\n    \n    \n      GO:0048469\n      0.774721\n    \n    \n      GO:0042307\n      0.774054\n    \n    \n      GO:0032879\n      0.772742\n    \n    \n      GO:0002376\n      0.772696\n    \n    \n      GO:0055082\n      0.772549\n    \n    \n      GO:0016070\n      0.772150\n    \n    \n      GO:0060840\n      0.771853\n    \n    \n      GO:0010632\n      0.771656\n    \n    \n      GO:0007219\n      0.771429\n    \n    \n      GO:0051341\n      0.770833\n    \n    \n      GO:0060416\n      0.770267\n    \n    \n      GO:0090050\n      0.770256\n    \n    \n      GO:0002274\n      0.770035\n    \n    \n      GO:0009968\n      0.768538\n    \n    \n      GO:0009416\n      0.768293\n    \n    \n      GO:0009653\n      0.767978\n    \n    \n      GO:0030183\n      0.767941\n    \n    \n      GO:0007507\n      0.766819\n    \n    \n      GO:0007283\n      0.766625\n    \n    \n      GO:0048589\n      0.766590\n    \n    \n      GO:0050790\n      0.766284\n    \n    \n      GO:0065003\n      0.765562\n    \n    \n      GO:0030032\n      0.765559\n    \n    \n      GO:0048103\n      0.765258\n    \n    \n      GO:0006954\n      0.764565\n    \n    \n      GO:0048878\n      0.764329\n    \n    \n      GO:0007420\n      0.764092\n    \n    \n      GO:0030168\n      0.762921\n    \n    \n      GO:0006629\n      0.761422\n    \n    \n      GO:0006644\n      0.760398\n    \n    \n      GO:0001525\n      0.760172\n    \n    \n      GO:0120035\n      0.759979\n    \n    \n      GO:0034103\n      0.759958\n    \n    \n      GO:0014070\n      0.759563\n    \n    \n      GO:0044255\n      0.758471\n    \n    \n      GO:0051098\n      0.758377\n    \n    \n      GO:0051641\n      0.757853\n    \n    \n      GO:0034599\n      0.756607\n    \n    \n      GO:0043473\n      0.756079\n    \n    \n      GO:0036092\n      0.755500\n    \n    \n      GO:0048863\n      0.755435\n    \n    \n      GO:2000352\n      0.754950\n    \n    \n      GO:0030162\n      0.754327\n    \n    \n      GO:0042325\n      0.754119\n    \n    \n      GO:0008202\n      0.754059\n    \n    \n      GO:0033628\n      0.753988\n    \n    \n      GO:0051146\n      0.753713\n    \n    \n      GO:0010243\n      0.753077\n    \n    \n      GO:0043524\n      0.752485\n    \n    \n      GO:0003014\n      0.752381\n    \n    \n      GO:0002684\n      0.752271\n    \n    \n      GO:0001763\n      0.751863\n    \n    \n      GO:0051145\n      0.751530\n    \n    \n      GO:0045596\n      0.750733\n    \n    \n      GO:0000226\n      0.750411\n    \n    \n      GO:0031175\n      0.749603\n    \n    \n      GO:0007155\n      0.749178\n    \n    \n      GO:0002064\n      0.748667\n    \n    \n      GO:0045597\n      0.748593\n    \n    \n      GO:0040008\n      0.748313\n    \n    \n      GO:0060485\n      0.746706\n    \n    \n      GO:0006508\n      0.746456\n    \n    \n      GO:0097191\n      0.746084\n    \n    \n      GO:0016477\n      0.745481\n    \n    \n      GO:0005975\n      0.745307\n    \n    \n      GO:0043066\n      0.745136\n    \n    \n      GO:0050890\n      0.744664\n    \n    \n      GO:0007265\n      0.744598\n    \n    \n      GO:0032092\n      0.743751\n    \n    \n      GO:0051017\n      0.743352\n    \n    \n      GO:0007005\n      0.742652\n    \n    \n      GO:0043434\n      0.742583\n    \n    \n      GO:0003158\n      0.742221\n    \n    \n      GO:0042113\n      0.742005\n    \n    \n      GO:0120162\n      0.741508\n    \n    \n      GO:0051881\n      0.740169\n    \n    \n      GO:0030522\n      0.740000\n    \n    \n      GO:0007160\n      0.739980\n    \n    \n      GO:0048511\n      0.737766\n    \n    \n      GO:0044281\n      0.736585\n    \n    \n      GO:0007568\n      0.736500\n    \n    \n      GO:0007610\n      0.735604\n    \n    \n      GO:0035556\n      0.734890\n    \n    \n      GO:0048017\n      0.734281\n    \n    \n      GO:0006325\n      0.734050\n    \n    \n      GO:0006915\n      0.733434\n    \n    \n      GO:0008284\n      0.731624\n    \n    \n      GO:0045165\n      0.731183\n    \n    \n      GO:0002682\n      0.730932\n    \n    \n      GO:0022414\n      0.730731\n    \n    \n      GO:0097190\n      0.730349\n    \n    \n      GO:0051494\n      0.729426\n    \n    \n      GO:0051128\n      0.728822\n    \n    \n      GO:0043254\n      0.728497\n    \n    \n      GO:0098609\n      0.727096\n    \n    \n      GO:0006338\n      0.726229\n    \n    \n      GO:0007423\n      0.725167\n    \n    \n      GO:0001649\n      0.721908\n    \n    \n      GO:0048661\n      0.721041\n    \n    \n      GO:0010941\n      0.719507\n    \n    \n      GO:1900407\n      0.716777\n    \n    \n      GO:0007166\n      0.714859\n    \n    \n      GO:0002683\n      0.708778\n    \n    \n      GO:1902903\n      0.708773\n    \n    \n      GO:0008285\n      0.705969\n    \n    \n      GO:0030900\n      0.704312\n    \n    \n      GO:0034504\n      0.704188\n    \n    \n      GO:0033365\n      0.703782\n    \n    \n      GO:0070997\n      0.703482\n    \n    \n      GO:0033043\n      0.697664\n    \n    \n      GO:0051249\n      0.687925\n    \n    \n      GO:0008104\n      0.675076\n    \n    \n      GO:0033002\n      0.627125\n    \n    \n      GO:0042593\n      0.364293\n    \n    \n      GO:0071887\n      0.359703\n    \n    \n      GO:0044262\n      0.349744\n    \n    \n      GO:0051640\n      0.348052\n    \n    \n      GO:0051000\n      0.299934\n    \n    \n      GO:0050778\n      0.290903\n    \n    \n      GO:0007156\n      0.278928\n    \n    \n      GO:0008361\n      0.265902\n    \n    \n      GO:0070301\n      0.262988\n    \n    \n      GO:0022407\n      0.258553\n    \n    \n      GO:0015031\n      0.257560\n    \n    \n      GO:0043525\n      0.248848\n    \n    \n      GO:0051353\n      0.242570\n    \n    \n      GO:0043086\n      0.239824\n    \n    \n      GO:0045471\n      0.229314\n    \n    \n      GO:0051497\n      0.208992\n    \n    \n      GO:0031529\n      0.208648\n    \n    \n      GO:0099504\n      0.206822\n    \n    \n      GO:0043547\n      0.194217\n    \n    \n      GO:1904659\n      0.191457\n    \n    \n      GO:0031334\n      0.184335\n    \n    \n      GO:0046677\n      0.183479\n    \n    \n      GO:0015980\n      0.180476\n    \n    \n      GO:0060291\n      0.175234\n    \n    \n      GO:0009259\n      0.166290\n    \n    \n      GO:0060173\n      0.162212\n    \n    \n      GO:0042632\n      0.145299\n    \n    \n      GO:0046890\n      0.144186\n    \n    \n      GO:0032760\n      0.142722\n    \n    \n      GO:0051302\n      0.135000\n    \n    \n      GO:0031295\n      0.134696\n    \n    \n      GO:0019318\n      0.123006\n    \n    \n      GO:0010951\n      0.120040\n    \n    \n      GO:0021987\n      0.119137\n    \n    \n      GO:0006163\n      0.118024\n    \n    \n      GO:0030041\n      0.107955\n    \n    \n      GO:0001892\n      0.106324\n    \n    \n      GO:0030512\n      0.105991\n    \n    \n      GO:0060079\n      0.105991\n    \n    \n      GO:0050770\n      0.098547\n    \n    \n      GO:0051928\n      0.097553\n    \n    \n      GO:0031397\n      0.094042\n    \n    \n      GO:0060041\n      0.082956\n    \n    \n      GO:0051047\n      0.076258\n    \n    \n      GO:0019722\n      0.041730\n    \n    \n      GO:0090042\n      0.035699\n    \n  \n\n\n\n\n\nsns.set(rc={'figure.figsize':(6,4)})\nperc = str(round((100*len(GO_terms_auc_svm_df_final[GO_terms_auc_svm_df_final[\"auc\"]>0.7])/len(GO_terms_auc_svm_df_final)),2))+\"%\"\nN, bins, patches = plt.hist(GO_terms_auc_svm_df_final, color=CB_color_cycle[6],bins=50, linewidth=0.1)\n\nfor i in range(0,len(bins)-1):\n    if bins[i]>0.7:\n        patches[i].set_facecolor(CB_color_cycle[2])\n\nplt.xlabel(\"AUC (logistic 1)\", fontsize=16)  \nplt.title(perc, fontsize=16)\n# con el que mejor funciona es con la suma normal del attribution \n\nText(0.5, 1.0, '94.68%')\n\n\n\n\n\n\n\nFinal model AUPR\n\nGO_terms_aupr_svm_df_final = pd.DataFrame(list(GO_terms_aupr_svm_final.items()),columns = ['goterm','aupr']).set_index(\"goterm\")\nGO_terms_aupr_svm_df_final = GO_terms_aupr_svm_df_final.dropna()\nGO_terms_aupr_svm_df_final.sort_values(by=[\"aupr\"], ascending=False).head()\n\n\n\n\n\n  \n    \n      \n      aupr\n    \n    \n      goterm\n      \n    \n  \n  \n    \n      GO:0036289\n      1.000000\n    \n    \n      GO:0050896\n      0.995438\n    \n    \n      GO:0043170\n      0.989680\n    \n    \n      GO:0006807\n      0.987396\n    \n    \n      GO:0060440\n      0.978213\n    \n  \n\n\n\n\n\n# TENGO PROBLEMA CON EL RECALL \nsns.set(rc={'figure.figsize':(5,3)})\nperc = str(round((100*len(GO_terms_aupr_svm_df_final[GO_terms_aupr_svm_df_final[\"aupr\"]>0.7])/len(GO_terms_aupr_svm_df_final)),2))+\"%\"\nN, bins, patches = plt.hist(GO_terms_aupr_svm_df_final, color=CB_color_cycle[6],bins=50, linewidth=0.1)\nfor i in range(0,len(bins)-1):\n    if bins[i]>0.7:\n        patches[i].set_facecolor(CB_color_cycle[3])\n\nplt.xlabel(\"AUPR\", fontsize=16)  \nplt.title(perc, fontsize=16)\n\nText(0.5, 1.0, '20.02%')"
  },
  {
    "objectID": "DeepMoA.html#predict-for-a-new-drug",
    "href": "DeepMoA.html#predict-for-a-new-drug",
    "title": "DeepMoA: method to predict the mechanism of action of cancer drugs",
    "section": "Predict for a new drug",
    "text": "Predict for a new drug\n\nMake predictions\n\nunknown = list(set(attribution_data_all.columns)-set(attribution_data_annotated.columns))\n\nGet the probabilities for all unknown drugs\n\npredictions = {}\ndistances = {}\nprobabilities_unknown = pd.DataFrame()\npreds_unknown = pd.DataFrame()\n\nfor drug in unknown:\n    probabilities = {}\n    for goterm in models_svm.keys():\n\n        list_nodes = list(models_svm[goterm].feature_names_in_) # Extract the feature names from the model (those are the attributions we need)\n\n        score = attribution_data_all.loc[list_nodes][drug].to_frame().T \n        score_mod = score.divide(attribution_data_annotated.loc[list_nodes].T.std()).fillna(0) #divide by std of each neuron, only use drugs that trained the models\n\n        predictions[goterm]=models_svm[goterm].predict(score_mod)\n        probabilities[goterm] = models_svm[goterm].predict_proba(score_mod)[::,1]  # platt values\n        # distances[goterm] = models_svm[goterm].decision_function(score_mod)\n        \n    drug_probs = pd.DataFrame.from_dict(probabilities).T\n    drug_probs.columns = [drug]\n    drug_preds = pd.DataFrame.from_dict(predictions).T\n    drug_preds.columns = [drug]    \n    probabilities_unknown = pd.concat([probabilities_unknown,drug_probs], axis=1)\n    preds_unknown = pd.concat([preds_unknown,drug_preds], axis=1)\n    print(drug)\n\n\n\nStudy drug with unknown MOA\nChoose drug with unknown MOA…\n\ncombobox_u = interactive(f, drug=widgets.Combobox(options=unknown))\n\n\npredictions_nodes = []\nfor goterm in list(platt_matrix.index):\n    predictions_nodes.append(goterm+\"_\"+str(1))\n\n\n# add names to go terms\nreal_go_info_svm= real_go_info[real_go_info.GO_term.isin(predictions_nodes)]\nreal_go_info_svm.GO_term = real_go_info_svm.GO_term.str.replace(\"_1\",\"\")\n\n\ndisplay(combobox_u)\n\n\n\n\n\nselected_drug_u_name = combobox_u.result\n\n\npredictions_df = pd.DataFrame.from_dict(preds_unknown.loc[:,selected_drug_u_name]).reset_index()\npredictions_df.columns  = [\"GO_term\",\"predictions\"]\n\n\nprobabilities_df = pd.DataFrame.from_dict(probabilities_unknown.loc[:,selected_drug_u_name]).reset_index()\nprobabilities_df.columns  = [\"GO_term\",\"probability\"]\nprobabilities_df = probabilities_df.merge(real_go_info_svm, on=\"GO_term\")\nprobabilities_df = probabilities_df.merge(predictions_df, on=\"GO_term\")\nprobabilities_df.loc[probabilities_df[\"layer_number\"] <=3].sort_values(by=[\"probability\"], ascending=False).head(200)\n\n\n\n\n\n  \n    \n      \n      GO_term\n      probability\n      Name\n      layer_number\n      predictions\n    \n  \n  \n    \n      820\n      GO:0033993\n      0.809556\n      Response to lipid (1)\n      3.0\n      1.0\n    \n    \n      223\n      GO:0018108\n      0.783375\n      Peptidyl-tyrosine phosphorylation (1)\n      3.0\n      1.0\n    \n    \n      573\n      GO:0010629\n      0.742615\n      Negative regulation of gene expression (1)\n      3.0\n      1.0\n    \n    \n      106\n      GO:0071900\n      0.725062\n      Regulation of protein serine/threonine kinase activity (1)\n      2.0\n      1.0\n    \n    \n      624\n      GO:0010628\n      0.702924\n      Positive regulation of gene expression (1)\n      3.0\n      1.0\n    \n    \n      74\n      GO:0001817\n      0.687600\n      Regulation of cytokine production (1)\n      3.0\n      1.0\n    \n    \n      44\n      GO:0048812\n      0.672129\n      Neuron projection morphogenesis (1)\n      3.0\n      1.0\n    \n    \n      224\n      GO:0046777\n      0.661031\n      Protein autophosphorylation (1)\n      1.0\n      1.0\n    \n    \n      99\n      GO:0001934\n      0.658374\n      Positive regulation of protein phosphorylation (1)\n      3.0\n      1.0\n    \n    \n      570\n      GO:0045597\n      0.628072\n      Positive regulation of cell differentiation (1)\n      3.0\n      1.0\n    \n    \n      839\n      GO:0031047\n      0.553888\n      Gene silencing by rna (1)\n      2.0\n      1.0\n    \n    \n      100\n      GO:0033138\n      0.542770\n      Positive regulation of peptidyl-serine phosphorylation (1)\n      1.0\n      1.0\n    \n    \n      888\n      GO:0034976\n      0.540483\n      Response to endoplasmic reticulum stress (1)\n      3.0\n      1.0\n    \n    \n      633\n      GO:0051301\n      0.535293\n      Cell division (1)\n      2.0\n      1.0\n    \n    \n      821\n      GO:0034097\n      0.533600\n      Response to cytokine (1)\n      3.0\n      1.0\n    \n    \n      423\n      GO:1902533\n      0.530199\n      Positive regulation of intracellular signal transduction (1)\n      2.0\n      1.0\n    \n    \n      596\n      GO:0060341\n      0.523390\n      Regulation of cellular localization (1)\n      3.0\n      0.0\n    \n    \n      729\n      GO:0120035\n      0.514954\n      Regulation of plasma membrane bounded cell projection organization (1)\n      3.0\n      1.0\n    \n    \n      568\n      GO:0008284\n      0.513916\n      Positive regulation of cell population proliferation (1)\n      2.0\n      1.0\n    \n    \n      558\n      GO:0016032\n      0.500000\n      Viral process (1)\n      3.0\n      1.0\n    \n    \n      641\n      GO:0071417\n      0.494543\n      Cellular response to organonitrogen compound (1)\n      3.0\n      1.0\n    \n    \n      353\n      GO:0006954\n      0.482633\n      Inflammatory response (1)\n      3.0\n      1.0\n    \n    \n      9\n      GO:0043408\n      0.476159\n      Regulation of mapk cascade (1)\n      2.0\n      1.0\n    \n    \n      808\n      GO:1902532\n      0.449154\n      Negative regulation of intracellular signal transduction (1)\n      3.0\n      1.0\n    \n    \n      11\n      GO:0043406\n      0.445845\n      Positive regulation of map kinase activity (1)\n      1.0\n      1.0\n    \n    \n      8\n      GO:0000165\n      0.443783\n      Mapk cascade (1)\n      3.0\n      0.0\n    \n    \n      358\n      GO:0007005\n      0.427023\n      Mitochondrion organization (1)\n      3.0\n      1.0\n    \n    \n      134\n      GO:0002366\n      0.423235\n      Leukocyte activation involved in immune response (1)\n      3.0\n      1.0\n    \n    \n      221\n      GO:0018105\n      0.422261\n      Peptidyl-serine phosphorylation (1)\n      2.0\n      0.0\n    \n    \n      285\n      GO:0051051\n      0.421500\n      Negative regulation of transport (1)\n      3.0\n      1.0\n    \n    \n      191\n      GO:0045944\n      0.420524\n      Positive regulation of transcription by rna polymerase ii (1)\n      2.0\n      1.0\n    \n    \n      654\n      GO:0090398\n      0.416328\n      Cellular senescence (1)\n      1.0\n      1.0\n    \n    \n      847\n      GO:0045055\n      0.414665\n      Regulated exocytosis (1)\n      2.0\n      1.0\n    \n    \n      342\n      GO:2001243\n      0.411574\n      Negative regulation of intrinsic apoptotic signaling pathway (1)\n      2.0\n      1.0\n    \n    \n      510\n      GO:0042063\n      0.408279\n      Gliogenesis (1)\n      3.0\n      1.0\n    \n    \n      788\n      GO:0009410\n      0.407937\n      Response to xenobiotic stimulus (1)\n      2.0\n      1.0\n    \n    \n      824\n      GO:0071363\n      0.407544\n      Cellular response to growth factor stimulus (1)\n      3.0\n      1.0\n    \n    \n      496\n      GO:0048608\n      0.406699\n      Reproductive structure development (1)\n      2.0\n      1.0\n    \n    \n      528\n      GO:0007565\n      0.406022\n      Female pregnancy (1)\n      2.0\n      1.0\n    \n    \n      896\n      GO:0097193\n      0.400210\n      Intrinsic apoptotic signaling pathway (1)\n      3.0\n      1.0\n    \n    \n      76\n      GO:0001819\n      0.388417\n      Positive regulation of cytokine production (1)\n      2.0\n      1.0\n    \n    \n      48\n      GO:0001525\n      0.386728\n      Angiogenesis (1)\n      2.0\n      1.0\n    \n    \n      300\n      GO:0032386\n      0.384834\n      Regulation of intracellular transport (1)\n      2.0\n      1.0\n    \n    \n      906\n      GO:0043549\n      0.378711\n      Regulation of kinase activity (1)\n      3.0\n      0.0\n    \n    \n      662\n      GO:0031648\n      0.377411\n      Protein destabilization (1)\n      0.0\n      1.0\n    \n    \n      516\n      GO:0007423\n      0.372363\n      Sensory organ development (1)\n      3.0\n      1.0\n    \n    \n      461\n      GO:0050804\n      0.367884\n      Modulation of chemical synaptic transmission (1)\n      3.0\n      1.0\n    \n    \n      104\n      GO:0006469\n      0.364467\n      Negative regulation of protein kinase activity (1)\n      2.0\n      1.0\n    \n    \n      620\n      GO:0051098\n      0.363823\n      Regulation of binding (1)\n      3.0\n      1.0\n    \n    \n      86\n      GO:0072006\n      0.358531\n      Nephron development (1)\n      2.0\n      1.0\n    \n    \n      473\n      GO:0008584\n      0.350294\n      Male gonad development (1)\n      1.0\n      1.0\n    \n    \n      536\n      GO:0007610\n      0.346612\n      Behavior (1)\n      3.0\n      0.0\n    \n    \n      693\n      GO:1904646\n      0.344997\n      Cellular response to amyloid-beta (1)\n      0.0\n      1.0\n    \n    \n      376\n      GO:0007015\n      0.344878\n      Actin filament organization (1)\n      3.0\n      1.0\n    \n    \n      552\n      GO:0033365\n      0.343027\n      Protein localization to organelle (1)\n      3.0\n      1.0\n    \n    \n      774\n      GO:0030216\n      0.342203\n      Keratinocyte differentiation (1)\n      2.0\n      1.0\n    \n    \n      639\n      GO:0060326\n      0.341919\n      Cell chemotaxis (1)\n      2.0\n      1.0\n    \n    \n      154\n      GO:0050778\n      0.335649\n      Positive regulation of immune response (1)\n      3.0\n      0.0\n    \n    \n      480\n      GO:0048565\n      0.333289\n      Digestive tract development (1)\n      1.0\n      1.0\n    \n    \n      794\n      GO:0043434\n      0.332497\n      Response to peptide hormone (1)\n      3.0\n      1.0\n    \n    \n      651\n      GO:0050808\n      0.322913\n      Synapse organization (1)\n      3.0\n      1.0\n    \n    \n      772\n      GO:0060485\n      0.320964\n      Mesenchyme development (1)\n      3.0\n      1.0\n    \n    \n      406\n      GO:0048041\n      0.319689\n      Focal adhesion assembly (1)\n      1.0\n      1.0\n    \n    \n      698\n      GO:0070663\n      0.318299\n      Regulation of leukocyte proliferation (1)\n      2.0\n      1.0\n    \n    \n      804\n      GO:0030855\n      0.317904\n      Epithelial cell differentiation (1)\n      3.0\n      0.0\n    \n    \n      538\n      GO:0048266\n      0.308838\n      Behavioral response to pain (1)\n      0.0\n      1.0\n    \n    \n      225\n      GO:0006470\n      0.305848\n      Protein dephosphorylation (1)\n      3.0\n      1.0\n    \n    \n      719\n      GO:0043244\n      0.305739\n      Regulation of protein-containing complex disassembly (1)\n      2.0\n      1.0\n    \n    \n      725\n      GO:0070997\n      0.305130\n      Neuron death (1)\n      2.0\n      0.0\n    \n    \n      532\n      GO:0007596\n      0.304871\n      Blood coagulation (1)\n      3.0\n      1.0\n    \n    \n      806\n      GO:0051056\n      0.302828\n      Regulation of small gtpase mediated signal transduction (1)\n      3.0\n      1.0\n    \n    \n      433\n      GO:0097191\n      0.302625\n      Extrinsic apoptotic signaling pathway (1)\n      3.0\n      1.0\n    \n    \n      574\n      GO:0008285\n      0.300631\n      Negative regulation of cell population proliferation (1)\n      3.0\n      0.0\n    \n    \n      49\n      GO:0001569\n      0.300115\n      Branching involved in blood vessel morphogenesis (1)\n      0.0\n      1.0\n    \n    \n      926\n      GO:0060020\n      0.297104\n      Bergmann glial cell differentiation (1)\n      0.0\n      1.0\n    \n    \n      789\n      GO:0009416\n      0.295539\n      Response to light stimulus (1)\n      2.0\n      0.0\n    \n    \n      887\n      GO:0034504\n      0.294393\n      Protein localization to nucleus (1)\n      2.0\n      1.0\n    \n    \n      169\n      GO:0002764\n      0.292841\n      Immune response-regulating signaling pathway (1)\n      3.0\n      0.0\n    \n    \n      890\n      GO:0071353\n      0.290912\n      Cellular response to interleukin-4 (1)\n      1.0\n      1.0\n    \n    \n      505\n      GO:0007283\n      0.290337\n      Spermatogenesis (1)\n      2.0\n      1.0\n    \n    \n      513\n      GO:0030900\n      0.289030\n      Forebrain development (1)\n      3.0\n      1.0\n    \n    \n      241\n      GO:0006612\n      0.288796\n      Protein targeting to membrane (1)\n      1.0\n      1.0\n    \n    \n      644\n      GO:0071230\n      0.284292\n      Cellular response to amino acid stimulus (1)\n      1.0\n      1.0\n    \n    \n      712\n      GO:0033002\n      0.280632\n      Muscle cell proliferation (1)\n      2.0\n      1.0\n    \n    \n      317\n      GO:0006897\n      0.277768\n      Endocytosis (1)\n      3.0\n      1.0\n    \n    \n      230\n      GO:0030162\n      0.277751\n      Regulation of proteolysis (1)\n      3.0\n      0.0\n    \n    \n      607\n      GO:0042391\n      0.276380\n      Regulation of membrane potential (1)\n      3.0\n      0.0\n    \n    \n      689\n      GO:1905897\n      0.275961\n      Regulation of response to endoplasmic reticulum stress (1)\n      2.0\n      1.0\n    \n    \n      105\n      GO:0045860\n      0.275729\n      Positive regulation of protein kinase activity (1)\n      2.0\n      0.0\n    \n    \n      198\n      GO:0006260\n      0.275261\n      Dna replication (1)\n      3.0\n      1.0\n    \n    \n      548\n      GO:1903829\n      0.274893\n      Positive regulation of protein localization (1)\n      3.0\n      0.0\n    \n    \n      934\n      GO:0051258\n      0.274092\n      Protein polymerization (1)\n      3.0\n      1.0\n    \n    \n      378\n      GO:0031532\n      0.271109\n      Actin cytoskeleton reorganization (1)\n      1.0\n      1.0\n    \n    \n      216\n      GO:0045727\n      0.270882\n      Positive regulation of translation (1)\n      1.0\n      1.0\n    \n    \n      642\n      GO:0034599\n      0.270088\n      Cellular response to oxidative stress (1)\n      3.0\n      0.0\n    \n    \n      767\n      GO:0051146\n      0.266722\n      Striated muscle cell differentiation (1)\n      2.0\n      0.0\n    \n    \n      77\n      GO:0002718\n      0.262195\n      Regulation of cytokine production involved in immune response (1)\n      2.0\n      1.0\n    \n    \n      19\n      GO:0031109\n      0.261030\n      Microtubule polymerization or depolymerization (1)\n      2.0\n      1.0\n    \n    \n      584\n      GO:0040008\n      0.259597\n      Regulation of growth (1)\n      3.0\n      0.0\n    \n    \n      937\n      GO:0051640\n      0.257672\n      Organelle localization (1)\n      3.0\n      0.0\n    \n    \n      377\n      GO:0031032\n      0.257340\n      Actomyosin structure organization (1)\n      2.0\n      1.0\n    \n    \n      904\n      GO:0042113\n      0.254618\n      B cell activation (1)\n      3.0\n      0.0\n    \n    \n      133\n      GO:0043303\n      0.253768\n      Mast cell degranulation (1)\n      1.0\n      1.0\n    \n    \n      561\n      GO:0048511\n      0.251652\n      Rhythmic process (1)\n      3.0\n      1.0\n    \n    \n      243\n      GO:0006606\n      0.250144\n      Protein import into nucleus (1)\n      1.0\n      1.0\n    \n    \n      836\n      GO:1901987\n      0.249107\n      Regulation of cell cycle phase transition (1)\n      3.0\n      0.0\n    \n    \n      758\n      GO:0031099\n      0.247922\n      Regeneration (1)\n      2.0\n      1.0\n    \n    \n      739\n      GO:1902903\n      0.245529\n      Regulation of supramolecular fiber organization (1)\n      3.0\n      1.0\n    \n    \n      323\n      GO:0016236\n      0.245469\n      Macroautophagy (1)\n      3.0\n      1.0\n    \n    \n      478\n      GO:0048568\n      0.244894\n      Embryonic organ development (1)\n      3.0\n      0.0\n    \n    \n      103\n      GO:0042531\n      0.243583\n      Positive regulation of tyrosine phosphorylation of stat protein (1)\n      0.0\n      1.0\n    \n    \n      598\n      GO:0043254\n      0.240098\n      Regulation of protein-containing complex assembly (1)\n      3.0\n      1.0\n    \n    \n      864\n      GO:0030183\n      0.236405\n      B cell differentiation (1)\n      1.0\n      0.0\n    \n    \n      301\n      GO:0032388\n      0.235842\n      Positive regulation of intracellular transport (1)\n      1.0\n      0.0\n    \n    \n      692\n      GO:0010595\n      0.235403\n      Positive regulation of endothelial cell migration (1)\n      2.0\n      1.0\n    \n    \n      865\n      GO:0030217\n      0.234830\n      T cell differentiation (1)\n      3.0\n      0.0\n    \n    \n      20\n      GO:0070507\n      0.234661\n      Regulation of microtubule cytoskeleton organization (1)\n      2.0\n      1.0\n    \n    \n      111\n      GO:0031069\n      0.234249\n      Hair follicle morphogenesis (1)\n      0.0\n      1.0\n    \n    \n      363\n      GO:0051494\n      0.232679\n      Negative regulation of cytoskeleton organization (1)\n      2.0\n      1.0\n    \n    \n      226\n      GO:0035304\n      0.232643\n      Regulation of protein dephosphorylation (1)\n      2.0\n      1.0\n    \n    \n      913\n      GO:0090630\n      0.231968\n      Activation of gtpase activity (1)\n      0.0\n      1.0\n    \n    \n      733\n      GO:0030335\n      0.231192\n      Positive regulation of cell migration (1)\n      3.0\n      0.0\n    \n    \n      196\n      GO:0006357\n      0.230696\n      Regulation of transcription by rna polymerase ii (1)\n      3.0\n      1.0\n    \n    \n      524\n      GO:0007519\n      0.230417\n      Skeletal muscle tissue development (1)\n      2.0\n      1.0\n    \n    \n      53\n      GO:0001570\n      0.230416\n      Vasculogenesis (1)\n      1.0\n      1.0\n    \n    \n      26\n      GO:1901990\n      0.229708\n      Regulation of mitotic cell cycle phase transition (1)\n      2.0\n      0.0\n    \n    \n      33\n      GO:0000423\n      0.229518\n      Mitophagy (1)\n      1.0\n      1.0\n    \n    \n      615\n      GO:0035265\n      0.227576\n      Organ growth (1)\n      2.0\n      0.0\n    \n    \n      84\n      GO:0001822\n      0.227091\n      Kidney development (1)\n      3.0\n      0.0\n    \n    \n      151\n      GO:0006959\n      0.225795\n      Humoral immune response (1)\n      2.0\n      1.0\n    \n    \n      244\n      GO:0042307\n      0.225164\n      Positive regulation of protein import into nucleus (1)\n      0.0\n      1.0\n    \n    \n      24\n      GO:0007346\n      0.224934\n      Regulation of mitotic cell cycle (1)\n      3.0\n      0.0\n    \n    \n      162\n      GO:0060374\n      0.223666\n      Mast cell differentiation (1)\n      0.0\n      1.0\n    \n    \n      533\n      GO:0030168\n      0.219923\n      Platelet activation (1)\n      2.0\n      1.0\n    \n    \n      152\n      GO:0045087\n      0.218376\n      Innate immune response (1)\n      3.0\n      0.0\n    \n    \n      523\n      GO:0007517\n      0.217930\n      Muscle organ development (1)\n      3.0\n      0.0\n    \n    \n      138\n      GO:0002683\n      0.217495\n      Negative regulation of immune system process (1)\n      3.0\n      0.0\n    \n    \n      319\n      GO:0006909\n      0.217477\n      Phagocytosis (1)\n      2.0\n      1.0\n    \n    \n      18\n      GO:0000226\n      0.216530\n      Microtubule cytoskeleton organization (1)\n      3.0\n      0.0\n    \n    \n      622\n      GO:0043086\n      0.212387\n      Negative regulation of catalytic activity (1)\n      3.0\n      1.0\n    \n    \n      898\n      GO:0035924\n      0.211788\n      Cellular response to vascular endothelial growth factor stimulus (1)\n      2.0\n      1.0\n    \n    \n      187\n      GO:0071897\n      0.211315\n      Dna biosynthetic process (1)\n      2.0\n      0.0\n    \n    \n      517\n      GO:0043586\n      0.209986\n      Tongue development (1)\n      1.0\n      1.0\n    \n    \n      606\n      GO:0048638\n      0.209981\n      Regulation of developmental growth (1)\n      2.0\n      0.0\n    \n    \n      736\n      GO:0009617\n      0.209127\n      Response to bacterium (1)\n      3.0\n      0.0\n    \n    \n      691\n      GO:0043542\n      0.207450\n      Endothelial cell migration (1)\n      3.0\n      0.0\n    \n    \n      321\n      GO:0010507\n      0.205494\n      Negative regulation of autophagy (1)\n      1.0\n      1.0\n    \n    \n      149\n      GO:0050853\n      0.205417\n      B cell receptor signaling pathway (1)\n      1.0\n      0.0\n    \n    \n      885\n      GO:1900180\n      0.205300\n      Regulation of protein localization to nucleus (1)\n      1.0\n      1.0\n    \n    \n      907\n      GO:0051881\n      0.202707\n      Regulation of mitochondrial membrane potential (1)\n      1.0\n      0.0\n    \n    \n      171\n      GO:0003014\n      0.201637\n      Renal system process (1)\n      2.0\n      1.0\n    \n    \n      211\n      GO:0031507\n      0.200984\n      Heterochromatin assembly (1)\n      1.0\n      1.0\n    \n    \n      64\n      GO:0071456\n      0.200564\n      Cellular response to hypoxia (1)\n      1.0\n      0.0\n    \n    \n      694\n      GO:0032869\n      0.197755\n      Cellular response to insulin stimulus (1)\n      2.0\n      0.0\n    \n    \n      779\n      GO:0008544\n      0.196206\n      Epidermis development (1)\n      3.0\n      0.0\n    \n    \n      634\n      GO:0061024\n      0.193065\n      Membrane organization (1)\n      2.0\n      0.0\n    \n    \n      50\n      GO:0002040\n      0.192737\n      Sprouting angiogenesis (1)\n      1.0\n      0.0\n    \n    \n      610\n      GO:0031333\n      0.191284\n      Negative regulation of protein-containing complex assembly (1)\n      2.0\n      1.0\n    \n    \n      657\n      GO:0045165\n      0.191259\n      Cell fate commitment (1)\n      3.0\n      0.0\n    \n    \n      435\n      GO:0016055\n      0.190638\n      Wnt signaling pathway (1)\n      2.0\n      0.0\n    \n    \n      569\n      GO:0030307\n      0.190101\n      Positive regulation of cell growth (1)\n      2.0\n      1.0\n    \n    \n      200\n      GO:0006281\n      0.189187\n      Dna repair (1)\n      2.0\n      0.0\n    \n    \n      63\n      GO:0001666\n      0.188575\n      Response to hypoxia (1)\n      2.0\n      1.0\n    \n    \n      560\n      GO:0043473\n      0.188137\n      Pigmentation (1)\n      2.0\n      1.0\n    \n    \n      521\n      GO:0035051\n      0.187551\n      Cardiocyte differentiation (1)\n      2.0\n      1.0\n    \n    \n      690\n      GO:2001020\n      0.187450\n      Regulation of response to dna damage stimulus (1)\n      2.0\n      0.0\n    \n    \n      346\n      GO:0006936\n      0.187431\n      Muscle contraction (1)\n      3.0\n      1.0\n    \n    \n      328\n      GO:0043065\n      0.184805\n      Positive regulation of apoptotic process (1)\n      2.0\n      0.0\n    \n    \n      650\n      GO:0034329\n      0.183554\n      Cell junction assembly (1)\n      2.0\n      0.0\n    \n    \n      262\n      GO:0045429\n      0.183059\n      Positive regulation of nitric oxide biosynthetic process (1)\n      0.0\n      1.0\n    \n    \n      117\n      GO:0060562\n      0.183024\n      Epithelial tube morphogenesis (1)\n      2.0\n      0.0\n    \n    \n      583\n      GO:0032967\n      0.182852\n      Positive regulation of collagen biosynthetic process (1)\n      0.0\n      1.0\n    \n    \n      208\n      GO:0006325\n      0.182003\n      Chromatin organization (1)\n      3.0\n      0.0\n    \n    \n      209\n      GO:0006338\n      0.181855\n      Chromatin remodeling (1)\n      2.0\n      1.0\n    \n    \n      882\n      GO:0032147\n      0.181843\n      Activation of protein kinase activity (1)\n      1.0\n      0.0\n    \n    \n      7\n      GO:0000122\n      0.181449\n      Negative regulation of transcription by rna polymerase ii (1)\n      1.0\n      0.0\n    \n    \n      911\n      GO:0060416\n      0.180831\n      Response to growth hormone (1)\n      1.0\n      1.0\n    \n    \n      121\n      GO:0090050\n      0.180206\n      Positive regulation of cell migration involved in sprouting angiogenesis (1)\n      0.0\n      1.0\n    \n    \n      467\n      GO:0009791\n      0.179613\n      Post-embryonic development (1)\n      1.0\n      0.0\n    \n    \n      870\n      GO:0070527\n      0.179383\n      Platelet aggregation (1)\n      1.0\n      1.0\n    \n    \n      781\n      GO:0008625\n      0.179216\n      Extrinsic apoptotic signaling pathway via death domain receptors (1)\n      1.0\n      1.0\n    \n    \n      702\n      GO:0048146\n      0.179210\n      Positive regulation of fibroblast proliferation (1)\n      0.0\n      1.0\n    \n    \n      785\n      GO:0009266\n      0.178944\n      Response to temperature stimulus (1)\n      2.0\n      1.0\n    \n    \n      316\n      GO:0033157\n      0.178583\n      Regulation of intracellular protein transport (1)\n      1.0\n      0.0\n    \n    \n      472\n      GO:0001553\n      0.178541\n      Luteinization (1)\n      0.0\n      1.0\n    \n    \n      174\n      GO:0010613\n      0.176998\n      Positive regulation of cardiac muscle hypertrophy (1)\n      1.0\n      1.0\n    \n    \n      842\n      GO:0071407\n      0.176595\n      Cellular response to organic cyclic compound (1)\n      3.0\n      0.0\n    \n    \n      834\n      GO:0035195\n      0.176389\n      Gene silencing by mirna (1)\n      1.0\n      0.0\n    \n    \n      504\n      GO:0048709\n      0.176248\n      Oligodendrocyte differentiation (1)\n      2.0\n      1.0\n    \n    \n      54\n      GO:2001214\n      0.175971\n      Positive regulation of vasculogenesis (1)\n      0.0\n      1.0\n    \n    \n      600\n      GO:0010632\n      0.174413\n      Regulation of epithelial cell migration (1)\n      3.0\n      0.0\n    \n    \n      682\n      GO:0007026\n      0.174040\n      Negative regulation of microtubule depolymerization (1)\n      0.0\n      1.0\n    \n    \n      276\n      GO:0016567\n      0.173194\n      Protein ubiquitination (1)\n      3.0\n      0.0\n    \n    \n      881\n      GO:0031929\n      0.171840\n      Tor signaling (1)\n      2.0\n      1.0\n    \n    \n      52\n      GO:0001541\n      0.171713\n      Ovarian follicle development (1)\n      1.0\n      0.0\n    \n    \n      310\n      GO:0051924\n      0.171261\n      Regulation of calcium ion transport (1)\n      3.0\n      0.0\n    \n    \n      899\n      GO:0035994\n      0.170901\n      Response to muscle stretch (1)\n      1.0\n      1.0\n    \n    \n      32\n      GO:0000422\n      0.170612\n      Autophagy of mitochondrion (1)\n      2.0\n      1.0\n    \n    \n      703\n      GO:0048661\n      0.169791\n      Positive regulation of smooth muscle cell proliferation (1)\n      1.0\n      0.0\n    \n    \n      447\n      GO:0007173\n      0.169218\n      Epidermal growth factor receptor signaling pathway (1)\n      2.0\n      0.0\n    \n  \n\n\n\n\n\nsum(probabilities_df[\"predictions\"] ==1)\n\n288\n\n\n\nsum(probabilities_df[\"predictions\"] ==0)\n\n651\n\n\nProbability < 0.5 doesn’t mean it does not belong to the class, a probability of for example 0.2 can represent a 1 (annotated to MoA)"
  },
  {
    "objectID": "DeepMoA.html#modify-probabilities",
    "href": "DeepMoA.html#modify-probabilities",
    "title": "DeepMoA: method to predict the mechanism of action of cancer drugs",
    "section": "Modify probabilities",
    "text": "Modify probabilities\nTake into account the annotations each GO term has (general GO terms are easier to predict as they have more annotations)\n\nFor drug with unknown MOA…\n\nsum_annotations = slim_matrix_single_neuron.T.sum()/slim_matrix_single_neuron.shape[1]\nlogits_apriori = np.log(sum_annotations/(1-sum_annotations))\n\nlogits_apost= np.log(probabilities_df[\"probability\"]/(1-probabilities_df[\"probability\"]))\ndelta_logits =logits_apost.to_numpy()- logits_apriori.to_numpy()\ndelta_logits_df = pd.DataFrame(delta_logits)\ndelta_logits_df.columns = [\"delta_logits\"]\nprobabilities_mod = probabilities_df.merge(delta_logits_df, left_index=True,right_index=True)\n\n\nprobabilities_mod.loc[probabilities_mod[\"predictions\"] ==1].loc[probabilities_mod[\"layer_number\"] <= 7].sort_values(by=[\"delta_logits\"], ascending=False)\n\n\n\n\n\n  \n    \n      \n      GO_term\n      probability\n      Name\n      layer_number\n      predictions\n      delta_logits\n    \n  \n  \n    \n      839\n      GO:0031047\n      0.553888\n      Gene silencing by rna (1)\n      2.0\n      1.0\n      2.192458\n    \n    \n      662\n      GO:0031648\n      0.377411\n      Protein destabilization (1)\n      0.0\n      1.0\n      2.092834\n    \n    \n      106\n      GO:0071900\n      0.725062\n      Regulation of protein serine/threonine kinase activity (1)\n      2.0\n      1.0\n      1.944569\n    \n    \n      33\n      GO:0000423\n      0.229518\n      Mitophagy (1)\n      1.0\n      1.0\n      1.880007\n    \n    \n      538\n      GO:0048266\n      0.308838\n      Behavioral response to pain (1)\n      0.0\n      1.0\n      1.857031\n    \n    \n      913\n      GO:0090630\n      0.231968\n      Activation of gtpase activity (1)\n      0.0\n      1.0\n      1.793943\n    \n    \n      216\n      GO:0045727\n      0.270882\n      Positive regulation of translation (1)\n      1.0\n      1.0\n      1.746070\n    \n    \n      223\n      GO:0018108\n      0.783375\n      Peptidyl-tyrosine phosphorylation (1)\n      3.0\n      1.0\n      1.672826\n    \n    \n      719\n      GO:0043244\n      0.305739\n      Regulation of protein-containing complex disassembly (1)\n      2.0\n      1.0\n      1.646098\n    \n    \n      241\n      GO:0006612\n      0.288796\n      Protein targeting to membrane (1)\n      1.0\n      1.0\n      1.626841\n    \n    \n      104\n      GO:0006469\n      0.364467\n      Negative regulation of protein kinase activity (1)\n      2.0\n      1.0\n      1.593794\n    \n    \n      888\n      GO:0034976\n      0.540483\n      Response to endoplasmic reticulum stress (1)\n      3.0\n      1.0\n      1.575980\n    \n    \n      890\n      GO:0071353\n      0.290912\n      Cellular response to interleukin-4 (1)\n      1.0\n      1.0\n      1.575256\n    \n    \n      638\n      GO:0033554\n      0.884331\n      Cellular response to stress (1)\n      4.0\n      1.0\n      1.573975\n    \n    \n      820\n      GO:0033993\n      0.809556\n      Response to lipid (1)\n      3.0\n      1.0\n      1.551573\n    \n    \n      74\n      GO:0001817\n      0.687600\n      Regulation of cytokine production (1)\n      3.0\n      1.0\n      1.534715\n    \n    \n      682\n      GO:0007026\n      0.174040\n      Negative regulation of microtubule depolymerization (1)\n      0.0\n      1.0\n      1.533781\n    \n    \n      528\n      GO:0007565\n      0.406022\n      Female pregnancy (1)\n      2.0\n      1.0\n      1.478881\n    \n    \n      224\n      GO:0046777\n      0.661031\n      Protein autophosphorylation (1)\n      1.0\n      1.0\n      1.453821\n    \n    \n      544\n      GO:0060179\n      0.161090\n      Male mating behavior (1)\n      0.0\n      1.0\n      1.440901\n    \n    \n      32\n      GO:0000422\n      0.170612\n      Autophagy of mitochondrion (1)\n      2.0\n      1.0\n      1.409881\n    \n    \n      774\n      GO:0030216\n      0.342203\n      Keratinocyte differentiation (1)\n      2.0\n      1.0\n      1.406530\n    \n    \n      44\n      GO:0048812\n      0.672129\n      Neuron projection morphogenesis (1)\n      3.0\n      1.0\n      1.385004\n    \n    \n      472\n      GO:0001553\n      0.178541\n      Luteinization (1)\n      0.0\n      1.0\n      1.373326\n    \n    \n      77\n      GO:0002718\n      0.262195\n      Regulation of cytokine production involved in immune response (1)\n      2.0\n      1.0\n      1.372827\n    \n    \n      900\n      GO:0042060\n      0.612497\n      Wound healing (1)\n      4.0\n      1.0\n      1.325911\n    \n    \n      385\n      GO:0060632\n      0.143694\n      Regulation of microtubule-based movement (1)\n      1.0\n      1.0\n      1.306104\n    \n    \n      726\n      GO:0065003\n      0.654123\n      Protein-containing complex assembly (1)\n      4.0\n      1.0\n      1.304384\n    \n    \n      926\n      GO:0060020\n      0.297104\n      Bergmann glial cell differentiation (1)\n      0.0\n      1.0\n      1.288696\n    \n    \n      582\n      GO:1902459\n      0.140358\n      Positive regulation of stem cell population maintenance (1)\n      0.0\n      1.0\n      1.278722\n    \n    \n      63\n      GO:0001666\n      0.188575\n      Response to hypoxia (1)\n      2.0\n      1.0\n      1.276928\n    \n    \n      342\n      GO:2001243\n      0.411574\n      Negative regulation of intrinsic apoptotic signaling pathway (1)\n      2.0\n      1.0\n      1.262448\n    \n    \n      573\n      GO:0010629\n      0.742615\n      Negative regulation of gene expression (1)\n      3.0\n      1.0\n      1.216446\n    \n    \n      480\n      GO:0048565\n      0.333289\n      Digestive tract development (1)\n      1.0\n      1.0\n      1.203775\n    \n    \n      174\n      GO:0010613\n      0.176998\n      Positive regulation of cardiac muscle hypertrophy (1)\n      1.0\n      1.0\n      1.199403\n    \n    \n      676\n      GO:0030282\n      0.116755\n      Bone mineralization (1)\n      1.0\n      1.0\n      1.177409\n    \n    \n      49\n      GO:0001569\n      0.300115\n      Branching involved in blood vessel morphogenesis (1)\n      0.0\n      1.0\n      1.170620\n    \n    \n      899\n      GO:0035994\n      0.170901\n      Response to muscle stretch (1)\n      1.0\n      1.0\n      1.156962\n    \n    \n      443\n      GO:0035860\n      0.114067\n      Glial cell-derived neurotrophic factor receptor signaling pathway (1)\n      0.0\n      1.0\n      1.151083\n    \n    \n      847\n      GO:0045055\n      0.414665\n      Regulated exocytosis (1)\n      2.0\n      1.0\n      1.096844\n    \n    \n      134\n      GO:0002366\n      0.423235\n      Leukocyte activation involved in immune response (1)\n      3.0\n      1.0\n      1.076788\n    \n    \n      181\n      GO:0006139\n      0.875555\n      Nucleobase-containing compound metabolic process (1)\n      6.0\n      1.0\n      1.061941\n    \n    \n      689\n      GO:1905897\n      0.275961\n      Regulation of response to endoplasmic reticulum stress (1)\n      2.0\n      1.0\n      1.052784\n    \n    \n      38\n      GO:0000902\n      0.813929\n      Cell morphogenesis (1)\n      4.0\n      1.0\n      1.052132\n    \n    \n      654\n      GO:0090398\n      0.416328\n      Cellular senescence (1)\n      1.0\n      1.0\n      1.048427\n    \n    \n      693\n      GO:1904646\n      0.344997\n      Cellular response to amyloid-beta (1)\n      0.0\n      1.0\n      1.043235\n    \n    \n      100\n      GO:0033138\n      0.542770\n      Positive regulation of peptidyl-serine phosphorylation (1)\n      1.0\n      1.0\n      1.018799\n    \n    \n      745\n      GO:0009653\n      0.877370\n      Anatomical structure morphogenesis (1)\n      5.0\n      1.0\n      1.014649\n    \n    \n      198\n      GO:0006260\n      0.275261\n      Dna replication (1)\n      3.0\n      1.0\n      1.007970\n    \n    \n      133\n      GO:0043303\n      0.253768\n      Mast cell degranulation (1)\n      1.0\n      1.0\n      0.981406\n    \n    \n      368\n      GO:0060271\n      0.126831\n      Cilium assembly (1)\n      3.0\n      1.0\n      0.970313\n    \n    \n      285\n      GO:0051051\n      0.421500\n      Negative regulation of transport (1)\n      3.0\n      1.0\n      0.964316\n    \n    \n      626\n      GO:0051649\n      0.802013\n      Establishment of localization in cell (1)\n      4.0\n      1.0\n      0.957089\n    \n    \n      378\n      GO:0031532\n      0.271109\n      Actin cytoskeleton reorganization (1)\n      1.0\n      1.0\n      0.947004\n    \n    \n      651\n      GO:0050808\n      0.322913\n      Synapse organization (1)\n      3.0\n      1.0\n      0.943923\n    \n    \n      11\n      GO:0043406\n      0.445845\n      Positive regulation of map kinase activity (1)\n      1.0\n      1.0\n      0.939978\n    \n    \n      34\n      GO:1903146\n      0.103490\n      Regulation of autophagy of mitochondrion (1)\n      1.0\n      1.0\n      0.932003\n    \n    \n      262\n      GO:0045429\n      0.183059\n      Positive regulation of nitric oxide biosynthetic process (1)\n      0.0\n      1.0\n      0.911660\n    \n    \n      661\n      GO:0046326\n      0.165116\n      Positive regulation of glucose import (1)\n      0.0\n      1.0\n      0.907432\n    \n    \n      911\n      GO:0060416\n      0.180831\n      Response to growth hormone (1)\n      1.0\n      1.0\n      0.896690\n    \n    \n      571\n      GO:2000010\n      0.127151\n      Positive regulation of protein localization to cell surface (1)\n      0.0\n      1.0\n      0.888565\n    \n    \n      633\n      GO:0051301\n      0.535293\n      Cell division (1)\n      2.0\n      1.0\n      0.887200\n    \n    \n      483\n      GO:0035909\n      0.162013\n      Aorta morphogenesis (1)\n      1.0\n      1.0\n      0.884752\n    \n    \n      54\n      GO:2001214\n      0.175971\n      Positive regulation of vasculogenesis (1)\n      0.0\n      1.0\n      0.863534\n    \n    \n      416\n      GO:0035556\n      0.887824\n      Intracellular signal transduction (1)\n      4.0\n      1.0\n      0.862843\n    \n    \n      470\n      GO:0042733\n      0.097137\n      Embryonic digit morphogenesis (1)\n      0.0\n      1.0\n      0.861598\n    \n    \n      886\n      GO:0034502\n      0.132453\n      Protein localization to chromosome (1)\n      2.0\n      1.0\n      0.856780\n    \n    \n      111\n      GO:0031069\n      0.234249\n      Hair follicle morphogenesis (1)\n      0.0\n      1.0\n      0.832897\n    \n    \n      880\n      GO:0031667\n      0.374380\n      Response to nutrient levels (1)\n      4.0\n      1.0\n      0.819334\n    \n    \n      833\n      GO:0010467\n      0.880677\n      Gene expression (1)\n      5.0\n      1.0\n      0.817357\n    \n    \n      184\n      GO:0006275\n      0.102018\n      Regulation of dna replication (1)\n      2.0\n      1.0\n      0.816174\n    \n    \n      162\n      GO:0060374\n      0.223666\n      Mast cell differentiation (1)\n      0.0\n      1.0\n      0.815593\n    \n    \n      265\n      GO:0051247\n      0.818839\n      Positive regulation of protein metabolic process (1)\n      4.0\n      1.0\n      0.802282\n    \n    \n      821\n      GO:0034097\n      0.533600\n      Response to cytokine (1)\n      3.0\n      1.0\n      0.801775\n    \n    \n      408\n      GO:0007165\n      0.930074\n      Signal transduction (1)\n      6.0\n      1.0\n      0.801131\n    \n    \n      849\n      GO:0043966\n      0.142338\n      Histone h3 acetylation (1)\n      2.0\n      1.0\n      0.797379\n    \n    \n      112\n      GO:0060789\n      0.091132\n      Hair follicle placode formation (1)\n      0.0\n      1.0\n      0.791156\n    \n    \n      558\n      GO:0016032\n      0.500000\n      Viral process (1)\n      3.0\n      1.0\n      0.785929\n    \n    \n      151\n      GO:0006959\n      0.225795\n      Humoral immune response (1)\n      2.0\n      1.0\n      0.785159\n    \n    \n      86\n      GO:0072006\n      0.358531\n      Nephron development (1)\n      2.0\n      1.0\n      0.777591\n    \n    \n      83\n      GO:0002720\n      0.163684\n      Positive regulation of cytokine production involved in immune response (1)\n      1.0\n      1.0\n      0.776348\n    \n    \n      53\n      GO:0001570\n      0.230416\n      Vasculogenesis (1)\n      1.0\n      1.0\n      0.770097\n    \n    \n      532\n      GO:0007596\n      0.304871\n      Blood coagulation (1)\n      3.0\n      1.0\n      0.764501\n    \n    \n      567\n      GO:0051641\n      0.841801\n      Cellular localization (1)\n      5.0\n      1.0\n      0.761481\n    \n    \n      639\n      GO:0060326\n      0.341919\n      Cell chemotaxis (1)\n      2.0\n      1.0\n      0.758938\n    \n    \n      19\n      GO:0031109\n      0.261030\n      Microtubule polymerization or depolymerization (1)\n      2.0\n      1.0\n      0.746075\n    \n    \n      800\n      GO:0030521\n      0.102431\n      Androgen receptor signaling pathway (1)\n      1.0\n      1.0\n      0.729092\n    \n    \n      511\n      GO:0030182\n      0.721830\n      Neuron differentiation (1)\n      5.0\n      1.0\n      0.726501\n    \n    \n      806\n      GO:0051056\n      0.302828\n      Regulation of small gtpase mediated signal transduction (1)\n      3.0\n      1.0\n      0.724275\n    \n    \n      527\n      GO:0007528\n      0.109807\n      Neuromuscular junction development (1)\n      1.0\n      1.0\n      0.722229\n    \n    \n      794\n      GO:0043434\n      0.332497\n      Response to peptide hormone (1)\n      3.0\n      1.0\n      0.716778\n    \n    \n      99\n      GO:0001934\n      0.658374\n      Positive regulation of protein phosphorylation (1)\n      3.0\n      1.0\n      0.708241\n    \n    \n      896\n      GO:0097193\n      0.400210\n      Intrinsic apoptotic signaling pathway (1)\n      3.0\n      1.0\n      0.705651\n    \n    \n      624\n      GO:0010628\n      0.702924\n      Positive regulation of gene expression (1)\n      3.0\n      1.0\n      0.704419\n    \n    \n      722\n      GO:0042325\n      0.780828\n      Regulation of phosphorylation (1)\n      5.0\n      1.0\n      0.698909\n    \n    \n      752\n      GO:0043170\n      0.942545\n      Macromolecule metabolic process (1)\n      7.0\n      1.0\n      0.693446\n    \n    \n      517\n      GO:0043586\n      0.209986\n      Tongue development (1)\n      1.0\n      1.0\n      0.692360\n    \n    \n      182\n      GO:0016070\n      0.778891\n      Rna metabolic process (1)\n      5.0\n      1.0\n      0.687621\n    \n    \n      281\n      GO:0006811\n      0.500000\n      Ion transport (1)\n      6.0\n      1.0\n      0.686632\n    \n    \n      586\n      GO:2000773\n      0.121640\n      Negative regulation of cellular senescence (1)\n      0.0\n      1.0\n      0.685597\n    \n    \n      808\n      GO:1902532\n      0.449154\n      Negative regulation of intracellular signal transduction (1)\n      3.0\n      1.0\n      0.684968\n    \n    \n      570\n      GO:0045597\n      0.628072\n      Positive regulation of cell differentiation (1)\n      3.0\n      1.0\n      0.680798\n    \n    \n      76\n      GO:0001819\n      0.388417\n      Positive regulation of cytokine production (1)\n      2.0\n      1.0\n      0.679733\n    \n    \n      934\n      GO:0051258\n      0.274092\n      Protein polymerization (1)\n      3.0\n      1.0\n      0.677814\n    \n    \n      713\n      GO:0035726\n      0.096936\n      Common myeloid progenitor cell proliferation (1)\n      0.0\n      1.0\n      0.667842\n    \n    \n      386\n      GO:0007049\n      0.727375\n      Cell cycle (1)\n      6.0\n      1.0\n      0.665704\n    \n    \n      473\n      GO:0008584\n      0.350294\n      Male gonad development (1)\n      1.0\n      1.0\n      0.663186\n    \n    \n      813\n      GO:0051898\n      0.103239\n      Negative regulation of protein kinase b signaling (1)\n      0.0\n      1.0\n      0.653209\n    \n    \n      698\n      GO:0070663\n      0.318299\n      Regulation of leukocyte proliferation (1)\n      2.0\n      1.0\n      0.652091\n    \n    \n      729\n      GO:0120035\n      0.514954\n      Regulation of plasma membrane bounded cell projection organization (1)\n      3.0\n      1.0\n      0.631426\n    \n    \n      881\n      GO:0031929\n      0.171840\n      Tor signaling (1)\n      2.0\n      1.0\n      0.624585\n    \n    \n      496\n      GO:0048608\n      0.406699\n      Reproductive structure development (1)\n      2.0\n      1.0\n      0.619202\n    \n    \n      559\n      GO:0022414\n      0.641754\n      Reproductive process (1)\n      4.0\n      1.0\n      0.617772\n    \n    \n      562\n      GO:0050896\n      0.963328\n      Response to stimulus (1)\n      7.0\n      1.0\n      0.605804\n    \n    \n      381\n      GO:0008064\n      0.113103\n      Regulation of actin polymerization or depolymerization (1)\n      2.0\n      1.0\n      0.603158\n    \n    \n      855\n      GO:1903578\n      0.141298\n      Regulation of atp metabolic process (1)\n      1.0\n      1.0\n      0.602865\n    \n    \n      619\n      GO:0050790\n      0.825081\n      Regulation of catalytic activity (1)\n      4.0\n      1.0\n      0.598054\n    \n    \n      476\n      GO:0048714\n      0.112165\n      Positive regulation of oligodendrocyte differentiation (1)\n      0.0\n      1.0\n      0.593772\n    \n    \n      363\n      GO:0051494\n      0.232679\n      Negative regulation of cytoskeleton organization (1)\n      2.0\n      1.0\n      0.593448\n    \n    \n      652\n      GO:0042180\n      0.090402\n      Cellular ketone metabolic process (1)\n      3.0\n      1.0\n      0.590857\n    \n    \n      423\n      GO:1902533\n      0.530199\n      Positive regulation of intracellular signal transduction (1)\n      2.0\n      1.0\n      0.581066\n    \n    \n      319\n      GO:0006909\n      0.217477\n      Phagocytosis (1)\n      2.0\n      1.0\n      0.578885\n    \n    \n      353\n      GO:0006954\n      0.482633\n      Inflammatory response (1)\n      3.0\n      1.0\n      0.578336\n    \n    \n      406\n      GO:0048041\n      0.319689\n      Focal adhesion assembly (1)\n      1.0\n      1.0\n      0.577606\n    \n    \n      585\n      GO:0048589\n      0.599054\n      Developmental growth (1)\n      4.0\n      1.0\n      0.575879\n    \n    \n      461\n      GO:0050804\n      0.367884\n      Modulation of chemical synaptic transmission (1)\n      3.0\n      1.0\n      0.568933\n    \n    \n      711\n      GO:0019752\n      0.316625\n      Carboxylic acid metabolic process (1)\n      4.0\n      1.0\n      0.563481\n    \n    \n      629\n      GO:0051174\n      0.783163\n      Regulation of phosphorus metabolic process (1)\n      6.0\n      1.0\n      0.558257\n    \n    \n      82\n      GO:0032743\n      0.079738\n      Positive regulation of interleukin-2 production (1)\n      0.0\n      1.0\n      0.545266\n    \n    \n      510\n      GO:0042063\n      0.408279\n      Gliogenesis (1)\n      3.0\n      1.0\n      0.539129\n    \n    \n      730\n      GO:0031175\n      0.631148\n      Neuron projection development (1)\n      4.0\n      1.0\n      0.537147\n    \n    \n      741\n      GO:0016477\n      0.682158\n      Cell migration (1)\n      4.0\n      1.0\n      0.536651\n    \n    \n      663\n      GO:0050821\n      0.165950\n      Protein stabilization (1)\n      0.0\n      1.0\n      0.535214\n    \n    \n      343\n      GO:1902166\n      0.145254\n      Negative regulation of intrinsic apoptotic signaling pathway in response to dna damage by p53 class mediator (1)\n      0.0\n      1.0\n      0.525494\n    \n    \n      213\n      GO:0006396\n      0.268052\n      Rna processing (1)\n      4.0\n      1.0\n      0.523646\n    \n    \n      563\n      GO:1900272\n      0.063979\n      Negative regulation of long-term synaptic potentiation (1)\n      0.0\n      1.0\n      0.517858\n    \n    \n      36\n      GO:0000723\n      0.137533\n      Telomere maintenance (1)\n      1.0\n      1.0\n      0.515446\n    \n    \n      524\n      GO:0007519\n      0.230417\n      Skeletal muscle tissue development (1)\n      2.0\n      1.0\n      0.511692\n    \n    \n      93\n      GO:0001843\n      0.082584\n      Neural tube closure (1)\n      1.0\n      1.0\n      0.491845\n    \n    \n      226\n      GO:0035304\n      0.232643\n      Regulation of protein dephosphorylation (1)\n      2.0\n      1.0\n      0.490892\n    \n    \n      684\n      GO:0051770\n      0.158964\n      Positive regulation of nitric-oxide synthase biosynthetic process (1)\n      0.0\n      1.0\n      0.483868\n    \n    \n      583\n      GO:0032967\n      0.182852\n      Positive regulation of collagen biosynthetic process (1)\n      0.0\n      1.0\n      0.478922\n    \n    \n      641\n      GO:0071417\n      0.494543\n      Cellular response to organonitrogen compound (1)\n      3.0\n      1.0\n      0.475108\n    \n    \n      788\n      GO:0009410\n      0.407937\n      Response to xenobiotic stimulus (1)\n      2.0\n      1.0\n      0.474799\n    \n    \n      412\n      GO:0009966\n      0.816584\n      Regulation of signal transduction (1)\n      5.0\n      1.0\n      0.474348\n    \n    \n      735\n      GO:0046718\n      0.151222\n      Viral entry into host cell (1)\n      1.0\n      1.0\n      0.472175\n    \n    \n      266\n      GO:0030163\n      0.372430\n      Protein catabolic process (1)\n      4.0\n      1.0\n      0.453053\n    \n    \n      196\n      GO:0006357\n      0.230696\n      Regulation of transcription by rna polymerase ii (1)\n      3.0\n      1.0\n      0.447389\n    \n    \n      840\n      GO:0043154\n      0.084113\n      Negative regulation of cysteine-type endopeptidase activity involved in apoptotic process (1)\n      1.0\n      1.0\n      0.427212\n    \n    \n      299\n      GO:0030705\n      0.133167\n      Cytoskeleton-dependent intracellular transport (1)\n      3.0\n      1.0\n      0.424567\n    \n    \n      433\n      GO:0097191\n      0.302625\n      Extrinsic apoptotic signaling pathway (1)\n      3.0\n      1.0\n      0.420731\n    \n    \n      610\n      GO:0031333\n      0.191284\n      Negative regulation of protein-containing complex assembly (1)\n      2.0\n      1.0\n      0.417629\n    \n    \n      501\n      GO:0007507\n      0.480118\n      Heart development (1)\n      4.0\n      1.0\n      0.417365\n    \n    \n      901\n      GO:0042110\n      0.432222\n      T cell activation (1)\n      4.0\n      1.0\n      0.413843\n    \n    \n      260\n      GO:0006807\n      0.931522\n      Nitrogen compound metabolic process (1)\n      7.0\n      1.0\n      0.413085\n    \n    \n      785\n      GO:0009266\n      0.178944\n      Response to temperature stimulus (1)\n      2.0\n      1.0\n      0.412491\n    \n    \n      358\n      GO:0007005\n      0.427023\n      Mitochondrion organization (1)\n      3.0\n      1.0\n      0.412213\n    \n    \n      377\n      GO:0031032\n      0.257340\n      Actomyosin structure organization (1)\n      2.0\n      1.0\n      0.410068\n    \n    \n      484\n      GO:0007399\n      0.731066\n      Nervous system development (1)\n      6.0\n      1.0\n      0.409544\n    \n    \n      136\n      GO:0002376\n      0.760395\n      Immune system process (1)\n      6.0\n      1.0\n      0.409057\n    \n    \n      211\n      GO:0031507\n      0.200984\n      Heterochromatin assembly (1)\n      1.0\n      1.0\n      0.406540\n    \n    \n      20\n      GO:0070507\n      0.234661\n      Regulation of microtubule cytoskeleton organization (1)\n      2.0\n      1.0\n      0.406533\n    \n    \n      356\n      GO:0006996\n      0.787638\n      Organelle organization (1)\n      5.0\n      1.0\n      0.400534\n    \n    \n      376\n      GO:0007015\n      0.344878\n      Actin filament organization (1)\n      3.0\n      1.0\n      0.399824\n    \n    \n      173\n      GO:0003300\n      0.147997\n      Cardiac muscle hypertrophy (1)\n      2.0\n      1.0\n      0.399424\n    \n    \n      620\n      GO:0051098\n      0.363823\n      Regulation of binding (1)\n      3.0\n      1.0\n      0.394294\n    \n    \n      922\n      GO:0036324\n      0.117627\n      Vascular endothelial growth factor receptor-2 signaling pathway (1)\n      0.0\n      1.0\n      0.392320\n    \n    \n      487\n      GO:0030325\n      0.087339\n      Adrenal gland development (1)\n      0.0\n      1.0\n      0.389651\n    \n    \n      781\n      GO:0008625\n      0.179216\n      Extrinsic apoptotic signaling pathway via death domain receptors (1)\n      1.0\n      1.0\n      0.375455\n    \n    \n      608\n      GO:0043114\n      0.067682\n      Regulation of vascular permeability (1)\n      1.0\n      1.0\n      0.368329\n    \n    \n      103\n      GO:0042531\n      0.243583\n      Positive regulation of tyrosine phosphorylation of stat protein (1)\n      0.0\n      1.0\n      0.365635\n    \n    \n      102\n      GO:0050731\n      0.126350\n      Positive regulation of peptidyl-tyrosine phosphorylation (1)\n      2.0\n      1.0\n      0.364186\n    \n    \n      504\n      GO:0048709\n      0.176248\n      Oligodendrocyte differentiation (1)\n      2.0\n      1.0\n      0.355145\n    \n    \n      324\n      GO:0016241\n      0.118988\n      Regulation of macroautophagy (1)\n      2.0\n      1.0\n      0.349328\n    \n    \n      218\n      GO:0006468\n      0.771378\n      Protein phosphorylation (1)\n      5.0\n      1.0\n      0.348022\n    \n    \n      171\n      GO:0003014\n      0.201637\n      Renal system process (1)\n      2.0\n      1.0\n      0.341557\n    \n    \n      644\n      GO:0071230\n      0.284292\n      Cellular response to amino acid stimulus (1)\n      1.0\n      1.0\n      0.332289\n    \n    \n      321\n      GO:0010507\n      0.205494\n      Negative regulation of autophagy (1)\n      1.0\n      1.0\n      0.332037\n    \n    \n      533\n      GO:0030168\n      0.219923\n      Platelet activation (1)\n      2.0\n      1.0\n      0.322598\n    \n    \n      546\n      GO:0008104\n      0.599923\n      Protein localization (1)\n      5.0\n      1.0\n      0.318133\n    \n    \n      362\n      GO:0033043\n      0.644550\n      Regulation of organelle organization (1)\n      4.0\n      1.0\n      0.315090\n    \n    \n      851\n      GO:0070933\n      0.058559\n      Histone h4 deacetylation (1)\n      0.0\n      1.0\n      0.313671\n    \n    \n      460\n      GO:0023061\n      0.159325\n      Signal release (1)\n      4.0\n      1.0\n      0.312808\n    \n    \n      438\n      GO:0007179\n      0.169016\n      Transforming growth factor beta receptor signaling pathway (1)\n      1.0\n      1.0\n      0.304505\n    \n    \n      300\n      GO:0032386\n      0.384834\n      Regulation of intracellular transport (1)\n      2.0\n      1.0\n      0.296704\n    \n    \n      920\n      GO:0036092\n      0.063107\n      Phosphatidylinositol-3-phosphate biosynthetic process (1)\n      0.0\n      1.0\n      0.293434\n    \n    \n      505\n      GO:0007283\n      0.290337\n      Spermatogenesis (1)\n      2.0\n      1.0\n      0.287750\n    \n    \n      357\n      GO:0006997\n      0.062583\n      Nucleus organization (1)\n      2.0\n      1.0\n      0.284535\n    \n    \n      748\n      GO:0009056\n      0.627534\n      Catabolic process (1)\n      5.0\n      1.0\n      0.276960\n    \n    \n      48\n      GO:0001525\n      0.386728\n      Angiogenesis (1)\n      2.0\n      1.0\n      0.264850\n    \n    \n      541\n      GO:0008542\n      0.131766\n      Visual learning (1)\n      0.0\n      1.0\n      0.264386\n    \n    \n      98\n      GO:0001932\n      0.669289\n      Regulation of protein phosphorylation (1)\n      4.0\n      1.0\n      0.263137\n    \n    \n      734\n      GO:0051702\n      0.152779\n      Biological process involved in interaction with symbiont (1)\n      2.0\n      1.0\n      0.263093\n    \n    \n      243\n      GO:0006606\n      0.250144\n      Protein import into nucleus (1)\n      1.0\n      1.0\n      0.261493\n    \n    \n      513\n      GO:0030900\n      0.289030\n      Forebrain development (1)\n      3.0\n      1.0\n      0.257354\n    \n    \n      673\n      GO:0043392\n      0.109472\n      Negative regulation of dna binding (1)\n      1.0\n      1.0\n      0.255228\n    \n    \n      346\n      GO:0006936\n      0.187431\n      Muscle contraction (1)\n      3.0\n      1.0\n      0.250863\n    \n    \n      552\n      GO:0033365\n      0.343027\n      Protein localization to organelle (1)\n      3.0\n      1.0\n      0.239223\n    \n    \n      9\n      GO:0043408\n      0.476159\n      Regulation of mapk cascade (1)\n      2.0\n      1.0\n      0.238056\n    \n    \n      887\n      GO:0034504\n      0.294393\n      Protein localization to nucleus (1)\n      2.0\n      1.0\n      0.236099\n    \n    \n      598\n      GO:0043254\n      0.240098\n      Regulation of protein-containing complex assembly (1)\n      3.0\n      1.0\n      0.234151\n    \n    \n      280\n      GO:0006810\n      0.773180\n      Transport (1)\n      7.0\n      1.0\n      0.229528\n    \n    \n      267\n      GO:0045732\n      0.069485\n      Positive regulation of protein catabolic process (1)\n      2.0\n      1.0\n      0.220326\n    \n    \n      668\n      GO:0010976\n      0.084952\n      Positive regulation of neuron projection development (1)\n      1.0\n      1.0\n      0.216502\n    \n    \n      212\n      GO:0051090\n      0.131395\n      Regulation of dna-binding transcription factor activity (1)\n      2.0\n      1.0\n      0.215454\n    \n    \n      799\n      GO:0009743\n      0.121060\n      Response to carbohydrate (1)\n      2.0\n      1.0\n      0.214795\n    \n    \n      675\n      GO:0071277\n      0.074147\n      Cellular response to calcium ion (1)\n      0.0\n      1.0\n      0.211553\n    \n    \n      495\n      GO:0060976\n      0.094845\n      Coronary vasculature development (1)\n      1.0\n      1.0\n      0.210353\n    \n    \n      803\n      GO:0042475\n      0.125550\n      Odontogenesis of dentin-containing tooth (1)\n      2.0\n      1.0\n      0.208932\n    \n    \n      671\n      GO:0032092\n      0.120001\n      Positive regulation of protein binding (1)\n      1.0\n      1.0\n      0.204806\n    \n    \n      772\n      GO:0060485\n      0.320964\n      Mesenchyme development (1)\n      3.0\n      1.0\n      0.203758\n    \n    \n      121\n      GO:0090050\n      0.180206\n      Positive regulation of cell migration involved in sprouting angiogenesis (1)\n      0.0\n      1.0\n      0.202697\n    \n    \n      801\n      GO:0033143\n      0.078487\n      Regulation of intracellular steroid hormone receptor signaling pathway (1)\n      1.0\n      1.0\n      0.199503\n    \n    \n      870\n      GO:0070527\n      0.179383\n      Platelet aggregation (1)\n      1.0\n      1.0\n      0.197119\n    \n    \n      314\n      GO:0070588\n      0.238228\n      Calcium ion transmembrane transport (1)\n      4.0\n      1.0\n      0.196919\n    \n    \n      656\n      GO:0030154\n      0.829241\n      Cell differentiation (1)\n      6.0\n      1.0\n      0.193962\n    \n    \n      645\n      GO:0071300\n      0.128940\n      Cellular response to retinoic acid (1)\n      0.0\n      1.0\n      0.193772\n    \n    \n      897\n      GO:0035767\n      0.138830\n      Endothelial cell chemotaxis (1)\n      1.0\n      1.0\n      0.192330\n    \n    \n      332\n      GO:0097190\n      0.410188\n      Apoptotic signaling pathway (1)\n      4.0\n      1.0\n      0.189603\n    \n    \n      643\n      GO:0071222\n      0.143456\n      Cellular response to lipopolysaccharide (1)\n      2.0\n      1.0\n      0.189188\n    \n    \n      898\n      GO:0035924\n      0.211788\n      Cellular response to vascular endothelial growth factor stimulus (1)\n      2.0\n      1.0\n      0.184593\n    \n    \n      459\n      GO:0007267\n      0.506882\n      Cell-cell signaling (1)\n      5.0\n      1.0\n      0.184371\n    \n    \n      323\n      GO:0016236\n      0.245469\n      Macroautophagy (1)\n      3.0\n      1.0\n      0.183750\n    \n    \n      317\n      GO:0006897\n      0.277768\n      Endocytosis (1)\n      3.0\n      1.0\n      0.178141\n    \n    \n      244\n      GO:0042307\n      0.225164\n      Positive regulation of protein import into nucleus (1)\n      0.0\n      1.0\n      0.177873\n    \n    \n      728\n      GO:0030032\n      0.140303\n      Lamellipodium assembly (1)\n      1.0\n      1.0\n      0.163285\n    \n    \n      640\n      GO:0071310\n      0.661841\n      Cellular response to organic substance (1)\n      4.0\n      1.0\n      0.156044\n    \n    \n      686\n      GO:0097009\n      0.055448\n      Energy homeostasis (1)\n      0.0\n      1.0\n      0.155920\n    \n    \n      692\n      GO:0010595\n      0.235403\n      Positive regulation of endothelial cell migration (1)\n      2.0\n      1.0\n      0.154755\n    \n    \n      309\n      GO:0034765\n      0.277608\n      Regulation of ion transmembrane transport (1)\n      4.0\n      1.0\n      0.153881\n    \n    \n      770\n      GO:0009887\n      0.516411\n      Animal organ morphogenesis (1)\n      4.0\n      1.0\n      0.152678\n    \n    \n      209\n      GO:0006338\n      0.181855\n      Chromatin remodeling (1)\n      2.0\n      1.0\n      0.147943\n    \n    \n      547\n      GO:0032880\n      0.479479\n      Regulation of protein localization (1)\n      4.0\n      1.0\n      0.144928\n    \n    \n      918\n      GO:0046854\n      0.054745\n      Phosphatidylinositol phosphate biosynthetic process (1)\n      1.0\n      1.0\n      0.142413\n    \n    \n      329\n      GO:0043066\n      0.610305\n      Negative regulation of apoptotic process (1)\n      4.0\n      1.0\n      0.132954\n    \n    \n      824\n      GO:0071363\n      0.407544\n      Cellular response to growth factor stimulus (1)\n      3.0\n      1.0\n      0.122808\n    \n    \n      603\n      GO:0061045\n      0.068278\n      Negative regulation of wound healing (1)\n      2.0\n      1.0\n      0.122775\n    \n    \n      225\n      GO:0006470\n      0.305848\n      Protein dephosphorylation (1)\n      3.0\n      1.0\n      0.111956\n    \n    \n      388\n      GO:0051726\n      0.483775\n      Regulation of cell cycle (1)\n      5.0\n      1.0\n      0.109432\n    \n    \n      516\n      GO:0007423\n      0.372363\n      Sensory organ development (1)\n      3.0\n      1.0\n      0.106514\n    \n    \n      261\n      GO:0051171\n      0.836045\n      Regulation of nitrogen compound metabolic process (1)\n      6.0\n      1.0\n      0.100916\n    \n    \n      375\n      GO:0051496\n      0.076120\n      Positive regulation of stress fiber assembly (1)\n      0.0\n      1.0\n      0.097110\n    \n    \n      758\n      GO:0031099\n      0.247922\n      Regeneration (1)\n      2.0\n      1.0\n      0.096133\n    \n    \n      55\n      GO:0001649\n      0.136472\n      Osteoblast differentiation (1)\n      1.0\n      1.0\n      0.091104\n    \n    \n      227\n      GO:0032516\n      0.155024\n      Positive regulation of phosphoprotein phosphatase activity (1)\n      0.0\n      1.0\n      0.090968\n    \n    \n      191\n      GO:0045944\n      0.420524\n      Positive regulation of transcription by rna polymerase ii (1)\n      2.0\n      1.0\n      0.084844\n    \n    \n      283\n      GO:0051049\n      0.611523\n      Regulation of transport (1)\n      5.0\n      1.0\n      0.084359\n    \n    \n      739\n      GO:1902903\n      0.245529\n      Regulation of supramolecular fiber organization (1)\n      3.0\n      1.0\n      0.083258\n    \n    \n      569\n      GO:0030307\n      0.190101\n      Positive regulation of cell growth (1)\n      2.0\n      1.0\n      0.078819\n    \n    \n      679\n      GO:0042310\n      0.060677\n      Vasoconstriction (1)\n      1.0\n      1.0\n      0.075349\n    \n    \n      405\n      GO:0007159\n      0.162103\n      Leukocyte cell-cell adhesion (1)\n      3.0\n      1.0\n      0.074992\n    \n    \n      566\n      GO:0032879\n      0.660318\n      Regulation of localization (1)\n      6.0\n      1.0\n      0.074219\n    \n    \n      568\n      GO:0008284\n      0.513916\n      Positive regulation of cell population proliferation (1)\n      2.0\n      1.0\n      0.073069\n    \n    \n      561\n      GO:0048511\n      0.251652\n      Rhythmic process (1)\n      3.0\n      1.0\n      0.067632\n    \n    \n      702\n      GO:0048146\n      0.179210\n      Positive regulation of fibroblast proliferation (1)\n      0.0\n      1.0\n      0.067004\n    \n    \n      403\n      GO:0033628\n      0.059919\n      Regulation of cell adhesion mediated by integrin (1)\n      1.0\n      1.0\n      0.061975\n    \n    \n      885\n      GO:1900180\n      0.205300\n      Regulation of protein localization to nucleus (1)\n      1.0\n      1.0\n      0.060202\n    \n    \n      228\n      GO:0006508\n      0.347532\n      Proteolysis (1)\n      4.0\n      1.0\n      0.056727\n    \n    \n      560\n      GO:0043473\n      0.188137\n      Pigmentation (1)\n      2.0\n      1.0\n      0.036612\n    \n    \n      777\n      GO:0050680\n      0.103322\n      Negative regulation of epithelial cell proliferation (1)\n      2.0\n      1.0\n      0.036383\n    \n    \n      751\n      GO:0046034\n      0.094236\n      Atp metabolic process (1)\n      2.0\n      1.0\n      0.034832\n    \n    \n      591\n      GO:0010941\n      0.705559\n      Regulation of cell death (1)\n      5.0\n      1.0\n      0.026616\n    \n    \n      818\n      GO:0010243\n      0.557617\n      Response to organonitrogen compound (1)\n      4.0\n      1.0\n      0.022040\n    \n    \n      724\n      GO:0036473\n      0.154959\n      Cell death in response to oxidative stress (1)\n      2.0\n      1.0\n      0.021429\n    \n    \n      153\n      GO:0050776\n      0.424435\n      Regulation of immune response (1)\n      4.0\n      1.0\n      0.011047\n    \n    \n      521\n      GO:0035051\n      0.187551\n      Cardiocyte differentiation (1)\n      2.0\n      1.0\n      0.003905\n    \n    \n      194\n      GO:0006355\n      0.544373\n      Regulation of transcription, dna-templated (1)\n      4.0\n      1.0\n      0.003607\n    \n    \n      622\n      GO:0043086\n      0.212387\n      Negative regulation of catalytic activity (1)\n      3.0\n      1.0\n      -0.003920\n    \n    \n      494\n      GO:0060840\n      0.094489\n      Artery development (1)\n      2.0\n      1.0\n      -0.013518\n    \n    \n      936\n      GO:0051000\n      0.059868\n      Positive regulation of nitric-oxide synthase activity (1)\n      0.0\n      1.0\n      -0.017649\n    \n    \n      382\n      GO:0030041\n      0.093571\n      Actin filament polymerization (1)\n      2.0\n      1.0\n      -0.024295\n    \n    \n      712\n      GO:0033002\n      0.280632\n      Muscle cell proliferation (1)\n      2.0\n      1.0\n      -0.031117\n    \n    \n      750\n      GO:0044281\n      0.305872\n      Small molecule metabolic process (1)\n      5.0\n      1.0\n      -0.053702\n    \n    \n      257\n      GO:0046488\n      0.135113\n      Phosphatidylinositol metabolic process (1)\n      2.0\n      1.0\n      -0.069795\n    \n    \n      731\n      GO:0031529\n      0.036028\n      Ruffle organization (1)\n      1.0\n      1.0\n      -0.085835\n    \n    \n      469\n      GO:0060173\n      0.072132\n      Limb development (1)\n      1.0\n      1.0\n      -0.088184\n    \n    \n      296\n      GO:0015031\n      0.292221\n      Protein transport (1)\n      4.0\n      1.0\n      -0.098692\n    \n    \n      927\n      GO:0042632\n      0.034870\n      Cholesterol homeostasis (1)\n      0.0\n      1.0\n      -0.119705\n    \n    \n      78\n      GO:0032760\n      0.100402\n      Positive regulation of tumor necrosis factor production (1)\n      0.0\n      1.0\n      -0.132748\n    \n    \n      856\n      GO:0019722\n      0.034146\n      Calcium-mediated signaling (1)\n      2.0\n      1.0\n      -0.141431\n    \n    \n      288\n      GO:0032940\n      0.217398\n      Secretion by cell (1)\n      5.0\n      1.0\n      -0.147194\n    \n    \n      705\n      GO:0051353\n      0.082787\n      Positive regulation of oxidoreductase activity (1)\n      1.0\n      1.0\n      -0.158575\n    \n    \n      176\n      GO:0044262\n      0.129234\n      Cellular carbohydrate metabolic process (1)\n      3.0\n      1.0\n      -0.190099\n    \n    \n      180\n      GO:0019318\n      0.046251\n      Hexose metabolic process (1)\n      2.0\n      1.0\n      -0.211363\n    \n    \n      440\n      GO:0030512\n      0.045444\n      Negative regulation of transforming growth factor beta receptor signaling pathway (1)\n      0.0\n      1.0\n      -0.229806\n    \n    \n      331\n      GO:0071887\n      0.072964\n      Leukocyte apoptotic process (1)\n      2.0\n      1.0\n      -0.295526\n    \n    \n      823\n      GO:0045471\n      0.068117\n      Response to ethanol (1)\n      1.0\n      1.0\n      -0.639920\n    \n    \n      232\n      GO:0010951\n      0.025246\n      Negative regulation of endopeptidase activity (1)\n      2.0\n      1.0\n      -0.917276\n    \n  \n\n\n\n\n\nnames2 = list(probabilities_mod.loc[probabilities_mod[\"predictions\"] ==1].loc[probabilities_mod[\"layer_number\"] <=7].sort_values(by=[\"delta_logits\"], ascending=False)[\"Name\"].head(30))\nterms2 = list(probabilities_mod.loc[probabilities_mod[\"predictions\"] ==1].loc[probabilities_mod[\"layer_number\"] <=7].sort_values(by=[\"delta_logits\"], ascending=False)[\"GO_term\"].head(30))\nlogits2 = list(probabilities_mod.loc[probabilities_mod[\"predictions\"] ==1].loc[probabilities_mod[\"layer_number\"] <=7].sort_values(by=[\"delta_logits\"], ascending=False)[\"delta_logits\"].head(30))\n\nnames2 = [x[:-4] for x in names2] \n\n\nfor i in range(0,len(names2)):\n    print(terms2[i],names2[i],logits2[i])\n\nGO:0031047 Gene silencing by rna 2.192457619336144\nGO:0031648 Protein destabilization 2.092833916210919\nGO:0071900 Regulation of protein serine/threonine kinase activity 1.944569179670069\nGO:0000423 Mitophagy 1.8800065969407627\nGO:0048266 Behavioral response to pain 1.8570307139212263\nGO:0090630 Activation of gtpase activity 1.793943480641404\nGO:0045727 Positive regulation of translation 1.7460704310285706\nGO:0018108 Peptidyl-tyrosine phosphorylation 1.6728257190053135\nGO:0043244 Regulation of protein-containing complex disassembly 1.6460980615310405\nGO:0006612 Protein targeting to membrane 1.6268405228374492\nGO:0006469 Negative regulation of protein kinase activity 1.5937943848967007\nGO:0034976 Response to endoplasmic reticulum stress 1.575980420814227\nGO:0071353 Cellular response to interleukin-4 1.5752555355925209\nGO:0033554 Cellular response to stress 1.573975479674923\nGO:0033993 Response to lipid 1.5515734212063519\nGO:0001817 Regulation of cytokine production 1.5347154822720621\nGO:0007026 Negative regulation of microtubule depolymerization 1.5337813437727923\nGO:0007565 Female pregnancy 1.4788810435976616\nGO:0046777 Protein autophosphorylation 1.453821209026271\nGO:0060179 Male mating behavior 1.4409006464912832\nGO:0000422 Autophagy of mitochondrion 1.4098807478143418\nGO:0030216 Keratinocyte differentiation 1.406529668352229\nGO:0048812 Neuron projection morphogenesis 1.3850039160074457\nGO:0001553 Luteinization 1.3733255324441331\nGO:0002718 Regulation of cytokine production involved in immune response 1.3728274508963876\nGO:0042060 Wound healing 1.325910525701464\nGO:0060632 Regulation of microtubule-based movement 1.3061039503079361\nGO:0065003 Protein-containing complex assembly 1.304383769510548\nGO:0060020 Bergmann glial cell differentiation 1.2886961413918279\nGO:1902459 Positive regulation of stem cell population maintenance 1.2787216247479065\n\n\n\n# import libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n%matplotlib inline\n\n# set font\nplt.rcParams['font.family'] = 'sans-serif'\nplt.rcParams['font.sans-serif'] = 'Roboto'\n\n# set the style of the axes and the text color\nplt.rcParams['axes.edgecolor']='#333F4B'\nplt.rcParams['axes.linewidth']=0.8\nplt.rcParams['xtick.color']='#333F4B'\nplt.rcParams['ytick.color']='#333F4B'\nplt.rcParams['text.color']='#333F4B'\n\n\n# create some fake data\npercentages = pd.Series(logits2, \n                        index=names2)\ndf = pd.DataFrame({'percentage' : percentages})\ndf = df.sort_values(by='percentage')\n\n# we first need a numeric placeholder for the y axis\nmy_range=list(range(1,len(df.index)+1))\n\nfig, ax = plt.subplots(figsize=(4,17))\n\n# create for each expense type an horizontal line that starts at x = 0 with the length \n# represented by the specific expense percentage value.\nplt.hlines(y=my_range, xmin=0, xmax=df['percentage'], color='#208EA3', alpha=0.2, linewidth=14)\n\n# create for each expense type a dot at the level of the expense percentage value\nplt.plot(df['percentage'], my_range, \"o\", markersize=14, color='#208EA3', alpha=0.8)\n\n# set labels\nax.set_xlabel(' Δlogit', fontsize=25, fontweight='black', color = '#36382E')\nax.set_ylabel('')\nax.set_facecolor(color=\"white\")\nax.set_alpha(1)\n\n# set axis\nax.tick_params(axis='both', which='major', labelsize=30)\nplt.yticks(my_range, df.index)\n\n# add an horizonal label for the y axis \nfig.text(-0.58, 0.862, 'MoA (GO terms)', fontsize=27, fontweight='black', color = '#36382E')\nfig.text(0.2, 0.9, selected_drug_u_name.capitalize(), fontsize=30, fontweight='black', color = '#36382E')\n\n\n# change the style of the axis spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nax.spines['left'].set_bounds((1, len(my_range)))\nax.set_xlim(0,max(logits2)+0.1)\n\nax.spines['left'].set_position(('outward', 8))\nax.spines['bottom'].set_position(('outward', 5))\n\nplt.savefig(resultsdir+selected_drug_u_name+'_top_terms.png', dpi=300, bbox_inches='tight')\n\n\n\n\n\n\nFor known drug…\n\ndisplay(combobox)\n\n\n\n\n\nselected_drug_name = combobox.result\n\n\n# LOS LOGITS DE TEST!!\ntrain_drug_logs = pd.DataFrame(platt_matrix.loc[:,selected_drug_name]).reset_index()\ntrain_drug_logs.columns  = [\"GO_term\",\"probability\"]\ntrain_drug_logs = train_drug_logs.merge(real_go_info_svm, on=\"GO_term\")\n\n\ntrain_drug_logs.loc[train_drug_logs[\"layer_number\"] <=3].sort_values(by=[\"probability\"], ascending=False).head(30)\n\n\n# # For known drugs\nlen((set(train_drug_logs.loc[train_drug_logs[\"layer_number\"] <=3].sort_values(by=[\"probability\"], ascending=False).head(30)[\"GO_term\"])).intersection(set(pd.DataFrame(compounds_GOterms_matches[selected_drug_name])[1])))\n\n30\n\n\n\nax = sns.boxplot(x=slim_matrix_single_neuron.loc[train_drug_logs[\"GO_term\"],selected_drug_name], y=train_drug_logs.set_index(\"GO_term\")[\"probability\"], data=plot,showfliers=True )\n\n\n\n\n\n# same as before\nsum_annotations = slim_matrix_single_neuron.T.sum()/slim_matrix_single_neuron.shape[1]\nlogits_apriori= np.log(sum_annotations/(1-sum_annotations))\n\n\nlogits_apost= np.log(train_drug_logs[\"probability\"]/(1-train_drug_logs[\"probability\"]))\ndelta_logits = logits_apost.to_numpy()-logits_apriori.to_numpy()\ndelta_logits_df = pd.DataFrame(delta_logits)\ndelta_logits_df.columns = [\"delta_logits\"]\ntrain_drug_mod = train_drug_logs.merge(delta_logits_df, left_index=True,right_index=True)\n\n\ntrain_drug_mod.loc[train_drug_mod[\"layer_number\"] <=3].sort_values(by=[\"delta_logits\"], ascending=False).head(30)\n\n\n\n\n\n  \n    \n      \n      GO_term\n      probability\n      Name\n      layer_number\n      delta_logits\n    \n  \n  \n    \n      578\n      GO:2000379\n      0.603184\n      Positive regulation of reactive oxygen species metabolic process (1)\n      1.0\n      2.770126\n    \n    \n      253\n      GO:0043552\n      0.735601\n      Positive regulation of phosphatidylinositol 3-kinase activity (1)\n      0.0\n      2.707570\n    \n    \n      80\n      GO:0010575\n      0.438910\n      Positive regulation of vascular endothelial growth factor production (1)\n      0.0\n      2.282492\n    \n    \n      633\n      GO:0051301\n      0.817491\n      Cell division (1)\n      2.0\n      2.245231\n    \n    \n      224\n      GO:0046777\n      0.780375\n      Protein autophosphorylation (1)\n      1.0\n      2.053782\n    \n    \n      423\n      GO:1902533\n      0.825532\n      Positive regulation of intracellular signal transduction (1)\n      2.0\n      2.014408\n    \n    \n      458\n      GO:0035025\n      0.374269\n      Positive regulation of rho protein signal transduction (1)\n      0.0\n      1.952270\n    \n    \n      848\n      GO:0071670\n      0.345148\n      Smooth muscle cell chemotaxis (1)\n      0.0\n      1.887644\n    \n    \n      348\n      GO:0006939\n      0.412178\n      Smooth muscle contraction (1)\n      2.0\n      1.842256\n    \n    \n      350\n      GO:0045987\n      0.348868\n      Positive regulation of smooth muscle contraction (1)\n      1.0\n      1.783402\n    \n    \n      908\n      GO:0051899\n      0.591286\n      Membrane depolarization (1)\n      2.0\n      1.675960\n    \n    \n      653\n      GO:0072593\n      0.631785\n      Reactive oxygen species metabolic process (1)\n      3.0\n      1.650121\n    \n    \n      115\n      GO:0060312\n      0.275354\n      Regulation of blood vessel remodeling (1)\n      0.0\n      1.625762\n    \n    \n      926\n      GO:0060020\n      0.369360\n      Bergmann glial cell differentiation (1)\n      0.0\n      1.614859\n    \n    \n      923\n      GO:0048170\n      0.295742\n      Positive regulation of long-term neuronal synaptic plasticity (1)\n      0.0\n      1.598558\n    \n    \n      99\n      GO:0001934\n      0.823688\n      Positive regulation of protein phosphorylation (1)\n      3.0\n      1.593723\n    \n    \n      853\n      GO:0038083\n      0.500000\n      Peptidyl-tyrosine autophosphorylation (1)\n      0.0\n      1.588712\n    \n    \n      713\n      GO:0035726\n      0.210551\n      Common myeloid progenitor cell proliferation (1)\n      0.0\n      1.577983\n    \n    \n      445\n      GO:0048008\n      0.414654\n      Platelet-derived growth factor receptor signaling pathway (1)\n      1.0\n      1.552362\n    \n    \n      857\n      GO:0035584\n      0.298388\n      Calcium-mediated signaling using intracellular calcium source (1)\n      0.0\n      1.496390\n    \n    \n      333\n      GO:1904019\n      0.457451\n      Epithelial cell apoptotic process (1)\n      1.0\n      1.481165\n    \n    \n      933\n      GO:0051150\n      0.337253\n      Regulation of smooth muscle cell differentiation (1)\n      1.0\n      1.474264\n    \n    \n      352\n      GO:0014827\n      0.254529\n      Intestine smooth muscle contraction (1)\n      0.0\n      1.453480\n    \n    \n      814\n      GO:0090037\n      0.235572\n      Positive regulation of protein kinase c signaling (1)\n      0.0\n      1.416277\n    \n    \n      894\n      GO:0048017\n      0.609803\n      Inositol lipid-mediated signaling (1)\n      1.0\n      1.399588\n    \n    \n      506\n      GO:0007286\n      0.240113\n      Spermatid development (1)\n      1.0\n      1.376021\n    \n    \n      742\n      GO:0035733\n      0.239304\n      Hepatic stellate cell activation (1)\n      0.0\n      1.371582\n    \n    \n      10\n      GO:0051403\n      0.429898\n      Stress-activated mapk cascade (1)\n      2.0\n      1.369506\n    \n    \n      702\n      GO:0048146\n      0.440487\n      Positive regulation of fibroblast proliferation (1)\n      0.0\n      1.349525\n    \n    \n      782\n      GO:1902042\n      0.289337\n      Negative regulation of extrinsic apoptotic signaling pathway via death domain receptors (1)\n      0.0\n      1.347889\n    \n  \n\n\n\n\n\nax = sns.boxplot(x=slim_matrix_single_neuron.loc[train_drug_mod[\"GO_term\"],selected_drug_name], y=train_drug_mod.set_index(\"GO_term\")[\"delta_logits\"], data=plot,showfliers=True)"
  },
  {
    "objectID": "DeepMoA.html#svm-go-term-2d-representation",
    "href": "DeepMoA.html#svm-go-term-2d-representation",
    "title": "DeepMoA: method to predict the mechanism of action of cancer drugs",
    "section": "SVM GO TERM 2D representation",
    "text": "SVM GO TERM 2D representation\n\nfrom sklearn.manifold import TSNE\nimport plotly.express as px\n\nChoose go to study…\n\ndisplay(combobox_go)\n\n\n\n\n\nselected_goterm = combobox_go.result\n\n\nreal_go_info[real_go_info[\"GO_term\"]==selected_goterm+\"_1\"]\n\n\n\n\n\n  \n    \n      \n      GO_term\n      Name\n      layer_number\n    \n  \n  \n    \n      4338\n      GO:0071353_1\n      Cellular response to interleukin-4 (1)\n      1.0\n    \n  \n\n\n\n\n\nlist_nodes = []\nfor i in range(1,7):\n    list_nodes.append(selected_goterm+\"_\"+str(i))\n\nscore = attribution_data_annotated.loc[list_nodes].T\nscore_mod = score.divide(score.std()).fillna(0) \nannotations  =slim_matrix_single_neuron.loc[selected_goterm,]\ny_predicted = models_svm[selected_goterm].predict(score_mod.astype(float))\n\n\nPlot SVM\n\nView statistics of GOterm\n“Perfect” model (with train data)\n\nauc = metrics.roc_auc_score(annotations, models_svm[selected_goterm].decision_function(score_mod.astype(float)))\ncnf_matrix = metrics.confusion_matrix(annotations,y_predicted)\nprint(cnf_matrix)\n\nprint(\"Accuracy:\",metrics.accuracy_score(annotations, y_predicted))\nprint(\"Precision:\",metrics.precision_score(annotations,y_predicted)) # TP / (TP+FP)\nprint(\"Recall:\",metrics.recall_score(annotations, y_predicted)) #TP / (TP+FN)\nprint(\"AUC with score:\",auc) \n\n[[206   6]\n [  2  16]]\nAccuracy: 0.9652173913043478\nPrecision: 0.7272727272727273\nRecall: 0.8888888888888888\nAUC with score: 0.9855870020964361\n\n\nTN - FP\nFN - TP\nEn mi opinion interesa mucho el precision, prefiero que haya menos FP no??\nTest statistics…\n\nauc = metrics.roc_auc_score(slim_matrix_single_neuron.loc[selected_goterm],  platt_matrix.loc[selected_goterm])\ncnf_matrix = metrics.confusion_matrix(slim_matrix_single_neuron.loc[selected_goterm], preds_svm_matrix.loc[selected_goterm])\nprint(cnf_matrix)\n\nprint(\"Accuracy:\",metrics.accuracy_score(slim_matrix_single_neuron.loc[selected_goterm], preds_svm_matrix.loc[selected_goterm]))\nprint(\"Precision:\",metrics.precision_score(slim_matrix_single_neuron.loc[selected_goterm], preds_svm_matrix.loc[selected_goterm]))\nprint(\"Recall:\",metrics.recall_score(slim_matrix_single_neuron.loc[selected_goterm], preds_svm_matrix.loc[selected_goterm])) #TP / (TP+FN)\nprint(\"AUC with score:\",auc) #TP / (TP+FN)\n\n[[203   9]\n [  4  14]]\nAccuracy: 0.9434782608695652\nPrecision: 0.6086956521739131\nRecall: 0.7777777777777778\nAUC with score: 0.9095911949685536\n\n\n\nimport colorlover as cl\nmatrix = metrics.confusion_matrix(annotations,y_predicted)\ntn, fp, fn, tp = matrix.ravel()\n\nvalues = [tp, fn, fp, tn]\nlabel_text = [\"True Positive\", \"False Negative\", \"False Positive\", \"True Negative\"]\nlabels = [\"<b>TP</b>\", \"<b>FN</b>\", \"<b>FP</b>\", \"<b>TN</b>\"]\nblue = cl.flipper()[\"seq\"][\"9\"][\"Blues\"]\nred = cl.flipper()[\"seq\"][\"9\"][\"Reds\"]\ncolors = [\"#ff3700\",\"#FFA0A0\", \"#CCE9FF\",  \"#0b8bff\"]\ntrace0 = go.Pie(\n    labels=label_text,\n    values=values,\n    hoverinfo=\"label+value+percent\",\n    textinfo=\"text+value\",\n    text=labels,\n    sort=False,\n    marker=dict(colors=colors),\n    insidetextfont={\"color\": \"#36382E\"},\n    rotation=90,\n)\n\nlayout = go.Layout(\n    title=dict(text=\"Confusion Matrix\",\n              x=0.3,\n              y=0.8,\n              font=dict(size=14),\n              xanchor='center',\n              yanchor='top'),\n    #margin=dict(l=50, r=50, t=100, b=10),\n    legend=dict(font={\"color\": \"#36382E\"}, orientation=\"h\",x=0.1, y=-0.03),\n#    plot_bgcolor=\"#282b38\",\n#    paper_bgcolor=\"#282b38\",\n    font=dict(family='Roboto',color= \"#36382E\"),\n)\n\ndata = [trace0]\nfigure = go.Figure(data=data, layout=layout)\nfigure\n\n\n                                                \n\n\n\ny_test=annotations\ndecision_test=y_predicted\nfpr, tpr, threshold = metrics.roc_curve(y_test, decision_test)\n\n# AUC Score\nauc_score = metrics.roc_auc_score(y_true=y_test, y_score=decision_test)\n\ntrace0 = go.Scatter(\n    x=fpr, y=tpr, mode=\"lines\", name=\"Test Data\", marker={\"color\": \"#ff3700\"}\n)\n\nlayout = go.Layout(\n    title=dict(text=f\"ROC Curve (AUC = {auc_score:.3f})\",\n            x=0.6,\n            y=0.5,\n            font=dict(size=20)\n              ),\n    xaxis=dict(title=\"False Positive Rate\", gridcolor=\"white\"),\n    yaxis=dict(title=\"True Positive Rate\", gridcolor=\"white\"),\n    legend=dict(x=0, y=1.05, orientation=\"h\"),\n    margin=dict(l=100, r=10, t=25, b=40),\n#    plot_bgcolor=\"#282b38\",\n#    paper_bgcolor=\"#282b38\",\n    font=dict(family='Roboto',color= \"#36382E\"),\n)\n\ndata = [trace0]\nfigure = go.Figure(data=data, layout=layout)\nfigure\n\n\n                                                \n\n\n\n\nPlot SVM with unknown labels\n\nVoronoi Tessellation\nWhat is a Voronoi Tessellation? Given a set P := {p1, …, pn} of sites, a Voronoi Tessellation is a subdivision of the space into n cells, one for each site in P, with the property that a point q lies in the cell corresponding to a site pi iff d(pi, q) < d(pj, q) for i distinct from j. The segments in a Voronoi Tessellation correspond to all points in the plane equidistant to the two nearest sites. Voronoi Tessellations have applications in computer science.\nhttps://stackoverflow.com/questions/61225052/svm-plot-decision-surface-when-working-with-more-than-2-features\n\ntsne = TSNE(n_components=2, verbose=0,\n           init=\"pca\",\n            perplexity=30,\n            random_state=123\n           )\nz = tsne.fit_transform(score_mod.astype(float)) \n\n\nlist_nodes = list(models_svm[selected_goterm].feature_names_in_) # Extract the feature names from the model (those are the attributions we need)\nscore_unknown = attribution_data_all.loc[list_nodes,unknown].T\nscore_unknown_mod = score_unknown.divide(score.std()).fillna(0) # normalize\n\n\ny_unknown = np.full(score_unknown_mod.shape[0],2) # 2=unknown MOA\ny_pred_unknown = models_svm[selected_goterm].predict(score_unknown_mod.astype(float))\n\n\n# join scores and annotations from known and unknown drugs\nall_score = pd.concat([score_mod,score_unknown_mod])\nall_y = np.concatenate((annotations,y_unknown))  # 2=unknown MOA\n\nPlot T-SNE SVM\n\nfrom sklearn.neighbors._classification import KNeighborsClassifier\n# https://github.com/plotly/dash-sample-apps/blob/main/apps/dash-svm/utils/dash_reusable_components.py\nz = tsne.fit_transform(all_score.astype(float)) \ndf = pd.DataFrame()\ndf[\"y\"] = all_y\ndf[\"comp-1\"] = z[:,0]\ndf[\"comp-2\"] = z[:,1]\ndf[\"name\"] =list(all_score.index)\ndf = df.sort_values(by=['y'])\ndf[\"y\"] = df[\"y\"].astype(str)\nX,y = all_score.astype(float), all_y\ny_predicted = models_svm[selected_goterm].predict(X)\n\nresolution = 300 # 100x100 background pixels\nX2d_xmin, X2d_xmax = np.min(z[:,0])-1, np.max(z[:,0])+1\nX2d_ymin, X2d_ymax = np.min(z[:,1])-1, np.max(z[:,1])+1\nxx, yy = np.meshgrid(np.linspace(X2d_xmin, X2d_xmax, resolution), np.linspace(X2d_ymin, X2d_ymax, resolution))\n\n# approximate Voronoi tesselation on resolution x resolution grid using 1-NN\nbackground_model = KNeighborsClassifier(n_neighbors=1).fit(z, y_predicted) \nvoronoiBackground = background_model.predict(np.c_[xx.ravel(), yy.ravel()])\nvoronoiBackground = voronoiBackground.reshape((resolution, resolution))\n\n\ngo_name=real_go_info[real_go_info[\"GO_term\"]==selected_goterm+\"_1\"][\"Name\"].values[0][:-4]\ngo_name\n\n'Cellular response to interleukin-4'\n\n\n\nbright_cscale = [[0, \"#0b8bff\"], [0.5, \"#ff3700\"],[1, \"#36382E\"]]\nnew_cscale = [[0, \"#CCE9FF\"], [1, \"#FFA0A0\"]]\n\ntrace0 = go.Contour(\n        x=xx.flatten(),\n        y=yy.flatten(),\n        z=voronoiBackground.flatten(),\n        hoverinfo=\"none\",\n        showscale=False,\n        contours=dict(showlines=False),\n        colorscale=new_cscale,\n        opacity=0.9,\n    )\n    \ntrace1 = go.Contour(\n    x=xx.flatten(),\n    y=yy.flatten(),\n    z=voronoiBackground.flatten(),\n    showscale=False,\n    hoverinfo=\"none\",\n    colorscale=new_cscale,\n    line=dict(color=\"#ff3700\"),\n    )\n\ntrace2 = go.Scatter(\n    x=df[\"comp-1\"],\n    y=df[\"comp-2\"],\n    mode=\"markers\",\n    text=df[\"name\"].to_numpy(),\n    marker=dict(size=7, color=df[\"y\"].to_numpy(int),colorscale=bright_cscale),\n    showlegend=False\n)\n\nlegend1 = go.Scatter(\n    x=[None],\n    y=[None],\n    mode=\"markers\",\n    name=\"Not annotated to<br>\"+selected_goterm,\n    marker=dict(size=7, color=\"#0b8bff\",symbol='circle'),\n)\n\nlegend2 = go.Scatter(\n    x=[None],\n    y=[None],\n    mode=\"markers\",\n    name=\"Drug annotated to<br>\"+selected_goterm,\n    marker=dict(size=7, color=\"#ff3700\",symbol='circle'),\n)\n\nlegend3 = go.Scatter(\n    x=[None],\n    y=[None],\n    mode=\"markers\",\n    name=\"Unknown MOA<br>annotations\",\n    marker=dict(size=7, color=\"#36382E\",symbol='circle'),\n)\n\n    \nlayout = go.Layout(\n   title=dict(text=\"<b>\"+selected_goterm+\"</b> \"+go_name,\n              x=0.5,\n              y=0.92,\n              font=dict(size=18),\n              xanchor='center',\n              yanchor='top'),\n    xaxis=dict(ticks=\"\", showticklabels=False, showgrid=False, zeroline=False),\n    yaxis=dict(ticks=\"\", showticklabels=False, showgrid=False, zeroline=False),\n    yaxis_range=[min(yy.flatten()),max(yy.flatten())],\n    xaxis_range=[min(xx.flatten()),max(xx.flatten())],\n    legend=dict(x=0, y=0, orientation=\"h\",font=dict(size=14)),\n    paper_bgcolor='rgba(0,0,0,0)',\n    width=600, height=800,\n    font=dict(family='Roboto',color= \"#36382E\",size=15)\n    )\ndata = [trace0,trace1,trace2,legend2,legend1,legend3]\nfigure = go.Figure(data=data,layout=layout)\n\n\n\n\nfigure"
  }
]